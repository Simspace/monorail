"use strict";(self.webpackChunk_monorail_storybook=self.webpackChunk_monorail_storybook||[]).push([[9069],{"../../node_modules/@mui/material/NoSsr/NoSsr.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{Z:()=>__WEBPACK_DEFAULT_EXPORT__});var react__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("../../node_modules/react/index.js"),_mui_utils__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("../../node_modules/@mui/utils/esm/useEnhancedEffect/useEnhancedEffect.js"),react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("../../node_modules/react/jsx-runtime.js");const __WEBPACK_DEFAULT_EXPORT__=function NoSsr(props){const{children,defer=!1,fallback=null}=props,[mountedState,setMountedState]=react__WEBPACK_IMPORTED_MODULE_0__.useState(!1);return(0,_mui_utils__WEBPACK_IMPORTED_MODULE_2__.Z)((()=>{defer||setMountedState(!0)}),[defer]),react__WEBPACK_IMPORTED_MODULE_0__.useEffect((()=>{defer&&setMountedState(!0)}),[defer]),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(react__WEBPACK_IMPORTED_MODULE_0__.Fragment,{children:mountedState?children:fallback})}},"../../node_modules/@mui/material/Skeleton/Skeleton.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{Z:()=>Skeleton_Skeleton});var react=__webpack_require__("../../node_modules/react/index.js"),clsx=__webpack_require__("../../node_modules/@mui/material/node_modules/clsx/dist/clsx.mjs"),composeClasses=__webpack_require__("../../node_modules/@mui/utils/esm/composeClasses/composeClasses.js"),cssUtils=__webpack_require__("../../node_modules/@mui/material/styles/cssUtils.js"),colorManipulator=__webpack_require__("../../node_modules/@mui/system/esm/colorManipulator/colorManipulator.js"),emotion_react_browser_esm=__webpack_require__("../../node_modules/@emotion/react/dist/emotion-react.browser.esm.js"),styled=__webpack_require__("../../node_modules/@mui/material/styles/styled.js"),memoTheme=__webpack_require__("../../node_modules/@mui/material/utils/memoTheme.js"),DefaultPropsProvider=__webpack_require__("../../node_modules/@mui/material/DefaultPropsProvider/DefaultPropsProvider.js"),generateUtilityClasses=__webpack_require__("../../node_modules/@mui/utils/esm/generateUtilityClasses/generateUtilityClasses.js"),generateUtilityClass=__webpack_require__("../../node_modules/@mui/utils/esm/generateUtilityClass/generateUtilityClass.js");function getSkeletonUtilityClass(slot){return(0,generateUtilityClass.ZP)("MuiSkeleton",slot)}(0,generateUtilityClasses.Z)("MuiSkeleton",["root","text","rectangular","rounded","circular","pulse","wave","withChildren","fitContent","heightAuto"]);var jsx_runtime=__webpack_require__("../../node_modules/react/jsx-runtime.js");const pulseKeyframe=emotion_react_browser_esm.F4`
  0% {
    opacity: 1;
  }

  50% {
    opacity: 0.4;
  }

  100% {
    opacity: 1;
  }
`,waveKeyframe=emotion_react_browser_esm.F4`
  0% {
    transform: translateX(-100%);
  }

  50% {
    /* +0.5s of delay between each loop */
    transform: translateX(100%);
  }

  100% {
    transform: translateX(100%);
  }
`,pulseAnimation="string"!=typeof pulseKeyframe?emotion_react_browser_esm.iv`
        animation: ${pulseKeyframe} 2s ease-in-out 0.5s infinite;
      `:null,waveAnimation="string"!=typeof waveKeyframe?emotion_react_browser_esm.iv`
        &::after {
          animation: ${waveKeyframe} 2s linear 0.5s infinite;
        }
      `:null,SkeletonRoot=(0,styled.ZP)("span",{name:"MuiSkeleton",slot:"Root",overridesResolver:(props,styles)=>{const{ownerState}=props;return[styles.root,styles[ownerState.variant],!1!==ownerState.animation&&styles[ownerState.animation],ownerState.hasChildren&&styles.withChildren,ownerState.hasChildren&&!ownerState.width&&styles.fitContent,ownerState.hasChildren&&!ownerState.height&&styles.heightAuto]}})((0,memoTheme.Z)((({theme})=>{const radiusUnit=(0,cssUtils.Wy)(theme.shape.borderRadius)||"px",radiusValue=(0,cssUtils.YL)(theme.shape.borderRadius);return{display:"block",backgroundColor:theme.vars?theme.vars.palette.Skeleton.bg:(0,colorManipulator.Fq)(theme.palette.text.primary,"light"===theme.palette.mode?.11:.13),height:"1.2em",variants:[{props:{variant:"text"},style:{marginTop:0,marginBottom:0,height:"auto",transformOrigin:"0 55%",transform:"scale(1, 0.60)",borderRadius:`${radiusValue}${radiusUnit}/${Math.round(radiusValue/.6*10)/10}${radiusUnit}`,"&:empty:before":{content:'"\\00a0"'}}},{props:{variant:"circular"},style:{borderRadius:"50%"}},{props:{variant:"rounded"},style:{borderRadius:(theme.vars||theme).shape.borderRadius}},{props:({ownerState})=>ownerState.hasChildren,style:{"& > *":{visibility:"hidden"}}},{props:({ownerState})=>ownerState.hasChildren&&!ownerState.width,style:{maxWidth:"fit-content"}},{props:({ownerState})=>ownerState.hasChildren&&!ownerState.height,style:{height:"auto"}},{props:{animation:"pulse"},style:pulseAnimation||{animation:`${pulseKeyframe} 2s ease-in-out 0.5s infinite`}},{props:{animation:"wave"},style:{position:"relative",overflow:"hidden",WebkitMaskImage:"-webkit-radial-gradient(white, black)","&::after":{background:`linear-gradient(\n                90deg,\n                transparent,\n                ${(theme.vars||theme).palette.action.hover},\n                transparent\n              )`,content:'""',position:"absolute",transform:"translateX(-100%)",bottom:0,left:0,right:0,top:0}}},{props:{animation:"wave"},style:waveAnimation||{"&::after":{animation:`${waveKeyframe} 2s linear 0.5s infinite`}}}]}}))),Skeleton_Skeleton=react.forwardRef((function Skeleton(inProps,ref){const props=(0,DefaultPropsProvider.i)({props:inProps,name:"MuiSkeleton"}),{animation="pulse",className,component="span",height,style,variant="text",width,...other}=props,ownerState={...props,animation,component,variant,hasChildren:Boolean(other.children)},classes=(ownerState=>{const{classes,variant,animation,hasChildren,width,height}=ownerState,slots={root:["root",variant,animation,hasChildren&&"withChildren",hasChildren&&!width&&"fitContent",hasChildren&&!height&&"heightAuto"]};return(0,composeClasses.Z)(slots,getSkeletonUtilityClass,classes)})(ownerState);return(0,jsx_runtime.jsx)(SkeletonRoot,{as:component,ref,className:(0,clsx.Z)(classes.root,className),ownerState,...other,style:{width,height,...style}})}))},"../../node_modules/@mui/material/styles/cssUtils.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{function isUnitless(value){return String(parseFloat(value)).length===String(value).length}function getUnit(input){return String(input).match(/[\d.\-+]*\s*(.*)/)[1]||""}function toUnitless(length){return parseFloat(length)}function convertLength(baseFontSize){return(length,toUnit)=>{const fromUnit=getUnit(length);if(fromUnit===toUnit)return length;let pxLength=toUnitless(length);"px"!==fromUnit&&("em"===fromUnit||"rem"===fromUnit)&&(pxLength=toUnitless(length)*toUnitless(baseFontSize));let outputLength=pxLength;if("px"!==toUnit)if("em"===toUnit)outputLength=pxLength/toUnitless(baseFontSize);else{if("rem"!==toUnit)return length;outputLength=pxLength/toUnitless(baseFontSize)}return parseFloat(outputLength.toFixed(5))+toUnit}}function alignProperty({size,grid}){const sizeBelow=size-size%grid,sizeAbove=sizeBelow+grid;return size-sizeBelow<sizeAbove-size?sizeBelow:sizeAbove}function fontGrid({lineHeight,pixels,htmlFontSize}){return pixels/(lineHeight*htmlFontSize)}function responsiveProperty({cssProperty,min,max,unit="rem",breakpoints=[600,900,1200],transform=null}){const output={[cssProperty]:`${min}${unit}`},factor=(max-min)/breakpoints[breakpoints.length-1];return breakpoints.forEach((breakpoint=>{let value=min+factor*breakpoint;null!==transform&&(value=transform(value)),output[`@media (min-width:${breakpoint}px)`]={[cssProperty]:`${Math.round(1e4*value)/1e4}${unit}`}})),output}__webpack_require__.d(__webpack_exports__,{LV:()=>alignProperty,Wy:()=>getUnit,YL:()=>toUnitless,dA:()=>isUnitless,vY:()=>fontGrid,vs:()=>convertLength,ze:()=>responsiveProperty})},"../../node_modules/@mui/material/utils/ownerDocument.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{Z:()=>__WEBPACK_DEFAULT_EXPORT__});const __WEBPACK_DEFAULT_EXPORT__=__webpack_require__("../../node_modules/@mui/utils/esm/ownerDocument/ownerDocument.js").Z},"../../node_modules/@mui/material/utils/useEnhancedEffect.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{Z:()=>__WEBPACK_DEFAULT_EXPORT__});const __WEBPACK_DEFAULT_EXPORT__=__webpack_require__("../../node_modules/@mui/utils/esm/useEnhancedEffect/useEnhancedEffect.js").Z},"./src/SwipeableDrawer/SwipeableDrawer.stories.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{Default:()=>Default,SwipeableEdgeDrawer:()=>SwipeableEdgeDrawer,__namedExportsOrder:()=>__namedExportsOrder,default:()=>SwipeableDrawer_stories});var react=__webpack_require__("../../node_modules/react/index.js"),styled=__webpack_require__("../../node_modules/@mui/material/styles/styled.js"),grey=__webpack_require__("../../node_modules/@mui/material/colors/grey.js"),react_dom=__webpack_require__("../../node_modules/react-dom/index.js"),NoSsr=__webpack_require__("../../node_modules/@mui/material/NoSsr/NoSsr.js"),Drawer=__webpack_require__("../../node_modules/@mui/material/Drawer/Drawer.js"),useForkRef=__webpack_require__("../../node_modules/@mui/material/utils/useForkRef.js"),ownerDocument=__webpack_require__("../../node_modules/@mui/material/utils/ownerDocument.js"),ownerWindow=__webpack_require__("../../node_modules/@mui/material/utils/ownerWindow.js"),useEventCallback=__webpack_require__("../../node_modules/@mui/material/utils/useEventCallback.js"),useEnhancedEffect=__webpack_require__("../../node_modules/@mui/material/utils/useEnhancedEffect.js"),useTheme=__webpack_require__("../../node_modules/@mui/material/styles/useTheme.js"),DefaultPropsProvider=__webpack_require__("../../node_modules/@mui/material/DefaultPropsProvider/DefaultPropsProvider.js"),utils=__webpack_require__("../../node_modules/@mui/material/transitions/utils.js"),clsx=__webpack_require__("../../node_modules/@mui/material/node_modules/clsx/dist/clsx.mjs"),memoTheme=__webpack_require__("../../node_modules/@mui/material/utils/memoTheme.js"),rootShouldForwardProp=__webpack_require__("../../node_modules/@mui/material/styles/rootShouldForwardProp.js"),capitalize=__webpack_require__("../../node_modules/@mui/material/utils/capitalize.js"),jsx_runtime=__webpack_require__("../../node_modules/react/jsx-runtime.js");const SwipeAreaRoot=(0,styled.ZP)("div",{shouldForwardProp:rootShouldForwardProp.Z})((0,memoTheme.Z)((({theme})=>({position:"fixed",top:0,left:0,bottom:0,zIndex:theme.zIndex.drawer-1,variants:[{props:{anchor:"left"},style:{right:"auto"}},{props:{anchor:"right"},style:{left:"auto",right:0}},{props:{anchor:"top"},style:{bottom:"auto",right:0}},{props:{anchor:"bottom"},style:{top:"auto",bottom:0,right:0}}]})))),SwipeableDrawer_SwipeArea=react.forwardRef((function SwipeArea(props,ref){const{anchor,classes={},className,width,style,...other}=props,ownerState=props;return(0,jsx_runtime.jsx)(SwipeAreaRoot,{className:(0,clsx.Z)("PrivateSwipeArea-root",classes.root,classes[`anchor${(0,capitalize.Z)(anchor)}`],className),ref,style:{[(0,Drawer.wE)(anchor)?"width":"height"]:width,...style},ownerState,...other})}));let claimedSwipeInstance=null;function calculateCurrentX(anchor,touches,doc){return"right"===anchor?doc.body.offsetWidth-touches[0].pageX:touches[0].pageX}function calculateCurrentY(anchor,touches,containerWindow){return"bottom"===anchor?containerWindow.innerHeight-touches[0].clientY:touches[0].clientY}function getMaxTranslate(horizontalSwipe,paperInstance){return horizontalSwipe?paperInstance.clientWidth:paperInstance.clientHeight}function getTranslate(currentTranslate,startLocation,open,maxTranslate){return Math.min(Math.max(open?startLocation-currentTranslate:maxTranslate+startLocation-currentTranslate,0),maxTranslate)}const iOS="undefined"!=typeof navigator&&/iPad|iPhone|iPod/.test(navigator.userAgent),SwipeableDrawer_SwipeableDrawer_SwipeableDrawer=react.forwardRef((function SwipeableDrawer(inProps,ref){const props=(0,DefaultPropsProvider.i)({name:"MuiSwipeableDrawer",props:inProps}),theme=(0,useTheme.Z)(),transitionDurationDefault={enter:theme.transitions.duration.enteringScreen,exit:theme.transitions.duration.leavingScreen},{anchor="left",disableBackdropTransition=!1,disableDiscovery=!1,disableSwipeToOpen=iOS,hideBackdrop,hysteresis=.52,allowSwipeInChildren=!1,minFlingVelocity=450,ModalProps:{BackdropProps,...ModalPropsProp}={},onClose,onOpen,open=!1,PaperProps={},SwipeAreaProps,swipeAreaWidth=20,transitionDuration=transitionDurationDefault,variant="temporary",...other}=props,[maybeSwiping,setMaybeSwiping]=react.useState(!1),swipeInstance=react.useRef({isSwiping:null}),swipeAreaRef=react.useRef(),backdropRef=react.useRef(),paperRef=react.useRef(),handleRef=(0,useForkRef.Z)(PaperProps.ref,paperRef),touchDetected=react.useRef(!1),calculatedDurationRef=react.useRef();(0,useEnhancedEffect.Z)((()=>{calculatedDurationRef.current=null}),[open]);const setPosition=react.useCallback(((translate,options={})=>{const{mode=null,changeTransition=!0}=options,anchorRtl=(0,Drawer.ni)(theme,anchor),rtlTranslateMultiplier=["right","bottom"].includes(anchorRtl)?1:-1,horizontalSwipe=(0,Drawer.wE)(anchor),transform=horizontalSwipe?`translate(${rtlTranslateMultiplier*translate}px, 0)`:`translate(0, ${rtlTranslateMultiplier*translate}px)`,drawerStyle=paperRef.current.style;drawerStyle.webkitTransform=transform,drawerStyle.transform=transform;let transition="";if(mode&&(transition=theme.transitions.create("all",(0,utils.C)({easing:void 0,style:void 0,timeout:transitionDuration},{mode}))),changeTransition&&(drawerStyle.webkitTransition=transition,drawerStyle.transition=transition),!disableBackdropTransition&&!hideBackdrop){const backdropStyle=backdropRef.current.style;backdropStyle.opacity=1-translate/getMaxTranslate(horizontalSwipe,paperRef.current),changeTransition&&(backdropStyle.webkitTransition=transition,backdropStyle.transition=transition)}}),[anchor,disableBackdropTransition,hideBackdrop,theme,transitionDuration]),handleBodyTouchEnd=(0,useEventCallback.Z)((nativeEvent=>{if(!touchDetected.current)return;if(claimedSwipeInstance=null,touchDetected.current=!1,react_dom.flushSync((()=>{setMaybeSwiping(!1)})),!swipeInstance.current.isSwiping)return void(swipeInstance.current.isSwiping=null);swipeInstance.current.isSwiping=null;const anchorRtl=(0,Drawer.ni)(theme,anchor),horizontal=(0,Drawer.wE)(anchor);let current;current=horizontal?calculateCurrentX(anchorRtl,nativeEvent.changedTouches,(0,ownerDocument.Z)(nativeEvent.currentTarget)):calculateCurrentY(anchorRtl,nativeEvent.changedTouches,(0,ownerWindow.Z)(nativeEvent.currentTarget));const startLocation=horizontal?swipeInstance.current.startX:swipeInstance.current.startY,maxTranslate=getMaxTranslate(horizontal,paperRef.current),currentTranslate=getTranslate(current,startLocation,open,maxTranslate),translateRatio=currentTranslate/maxTranslate;Math.abs(swipeInstance.current.velocity)>minFlingVelocity&&(calculatedDurationRef.current=1e3*Math.abs((maxTranslate-currentTranslate)/swipeInstance.current.velocity)),open?swipeInstance.current.velocity>minFlingVelocity||translateRatio>hysteresis?onClose():setPosition(0,{mode:"exit"}):swipeInstance.current.velocity<-minFlingVelocity||1-translateRatio>hysteresis?onOpen():setPosition(getMaxTranslate(horizontal,paperRef.current),{mode:"enter"})})),startMaybeSwiping=(force=!1)=>{if(!maybeSwiping){!force&&disableDiscovery&&allowSwipeInChildren||react_dom.flushSync((()=>{setMaybeSwiping(!0)}));const horizontalSwipe=(0,Drawer.wE)(anchor);!open&&paperRef.current&&setPosition(getMaxTranslate(horizontalSwipe,paperRef.current)+(disableDiscovery?15:-20),{changeTransition:!1}),swipeInstance.current.velocity=0,swipeInstance.current.lastTime=null,swipeInstance.current.lastTranslate=null,swipeInstance.current.paperHit=!1,touchDetected.current=!0}},handleBodyTouchMove=(0,useEventCallback.Z)((nativeEvent=>{if(!paperRef.current||!touchDetected.current)return;if(null!==claimedSwipeInstance&&claimedSwipeInstance!==swipeInstance.current)return;startMaybeSwiping(!0);const anchorRtl=(0,Drawer.ni)(theme,anchor),horizontalSwipe=(0,Drawer.wE)(anchor),currentX=calculateCurrentX(anchorRtl,nativeEvent.touches,(0,ownerDocument.Z)(nativeEvent.currentTarget)),currentY=calculateCurrentY(anchorRtl,nativeEvent.touches,(0,ownerWindow.Z)(nativeEvent.currentTarget));if(open&&paperRef.current.contains(nativeEvent.target)&&null===claimedSwipeInstance){const hasNativeHandler=function computeHasNativeHandler({domTreeShapes,start,current,anchor}){const axisProperties_scrollPosition={x:"scrollLeft",y:"scrollTop"},axisProperties_scrollLength={x:"scrollWidth",y:"scrollHeight"},axisProperties_clientLength={x:"clientWidth",y:"clientHeight"};return domTreeShapes.some((shape=>{let goingForward=current>=start;"top"!==anchor&&"left"!==anchor||(goingForward=!goingForward);const axis="left"===anchor||"right"===anchor?"x":"y",scrollPosition=Math.round(shape[axisProperties_scrollPosition[axis]]),areNotAtStart=scrollPosition>0,areNotAtEnd=scrollPosition+shape[axisProperties_clientLength[axis]]<shape[axisProperties_scrollLength[axis]];return!!(goingForward&&areNotAtEnd||!goingForward&&areNotAtStart)}))}({domTreeShapes:function getDomTreeShapes(element,rootNode){const domTreeShapes=[];for(;element&&element!==rootNode.parentElement;){const style=(0,ownerWindow.Z)(rootNode).getComputedStyle(element);"absolute"===style.getPropertyValue("position")||"hidden"===style.getPropertyValue("overflow-x")||(element.clientWidth>0&&element.scrollWidth>element.clientWidth||element.clientHeight>0&&element.scrollHeight>element.clientHeight)&&domTreeShapes.push(element),element=element.parentElement}return domTreeShapes}(nativeEvent.target,paperRef.current),start:horizontalSwipe?swipeInstance.current.startX:swipeInstance.current.startY,current:horizontalSwipe?currentX:currentY,anchor});if(hasNativeHandler)return void(claimedSwipeInstance=!0);claimedSwipeInstance=swipeInstance.current}if(null==swipeInstance.current.isSwiping){const dx=Math.abs(currentX-swipeInstance.current.startX),dy=Math.abs(currentY-swipeInstance.current.startY),definitelySwiping=horizontalSwipe?dx>dy&&dx>3:dy>dx&&dy>3;if(definitelySwiping&&nativeEvent.cancelable&&nativeEvent.preventDefault(),!0===definitelySwiping||(horizontalSwipe?dy>3:dx>3)){if(swipeInstance.current.isSwiping=definitelySwiping,!definitelySwiping)return void handleBodyTouchEnd(nativeEvent);swipeInstance.current.startX=currentX,swipeInstance.current.startY=currentY,disableDiscovery||open||(horizontalSwipe?swipeInstance.current.startX-=20:swipeInstance.current.startY-=20)}}if(!swipeInstance.current.isSwiping)return;const maxTranslate=getMaxTranslate(horizontalSwipe,paperRef.current);let startLocation=horizontalSwipe?swipeInstance.current.startX:swipeInstance.current.startY;open&&!swipeInstance.current.paperHit&&(startLocation=Math.min(startLocation,maxTranslate));const translate=getTranslate(horizontalSwipe?currentX:currentY,startLocation,open,maxTranslate);if(open)if(swipeInstance.current.paperHit)0===translate&&(swipeInstance.current.startX=currentX,swipeInstance.current.startY=currentY);else{if(!(horizontalSwipe?currentX<maxTranslate:currentY<maxTranslate))return;swipeInstance.current.paperHit=!0,swipeInstance.current.startX=currentX,swipeInstance.current.startY=currentY}null===swipeInstance.current.lastTranslate&&(swipeInstance.current.lastTranslate=translate,swipeInstance.current.lastTime=performance.now()+1);const velocity=(translate-swipeInstance.current.lastTranslate)/(performance.now()-swipeInstance.current.lastTime)*1e3;swipeInstance.current.velocity=.4*swipeInstance.current.velocity+.6*velocity,swipeInstance.current.lastTranslate=translate,swipeInstance.current.lastTime=performance.now(),nativeEvent.cancelable&&nativeEvent.preventDefault(),setPosition(translate)})),handleBodyTouchStart=(0,useEventCallback.Z)((nativeEvent=>{if(nativeEvent.defaultPrevented)return;if(nativeEvent.defaultMuiPrevented)return;if(open&&(hideBackdrop||!backdropRef.current.contains(nativeEvent.target))&&!paperRef.current.contains(nativeEvent.target))return;const anchorRtl=(0,Drawer.ni)(theme,anchor),horizontalSwipe=(0,Drawer.wE)(anchor),currentX=calculateCurrentX(anchorRtl,nativeEvent.touches,(0,ownerDocument.Z)(nativeEvent.currentTarget)),currentY=calculateCurrentY(anchorRtl,nativeEvent.touches,(0,ownerWindow.Z)(nativeEvent.currentTarget));if(!open){if(disableSwipeToOpen||!(nativeEvent.target===swipeAreaRef.current||paperRef.current?.contains(nativeEvent.target)&&("function"==typeof allowSwipeInChildren?allowSwipeInChildren(nativeEvent,swipeAreaRef.current,paperRef.current):allowSwipeInChildren)))return;if(horizontalSwipe){if(currentX>swipeAreaWidth)return}else if(currentY>swipeAreaWidth)return}nativeEvent.defaultMuiPrevented=!0,claimedSwipeInstance=null,swipeInstance.current.startX=currentX,swipeInstance.current.startY=currentY,startMaybeSwiping()}));return react.useEffect((()=>{if("temporary"===variant){const doc=(0,ownerDocument.Z)(paperRef.current);return doc.addEventListener("touchstart",handleBodyTouchStart),doc.addEventListener("touchmove",handleBodyTouchMove,{passive:!open}),doc.addEventListener("touchend",handleBodyTouchEnd),()=>{doc.removeEventListener("touchstart",handleBodyTouchStart),doc.removeEventListener("touchmove",handleBodyTouchMove,{passive:!open}),doc.removeEventListener("touchend",handleBodyTouchEnd)}}}),[variant,open,handleBodyTouchStart,handleBodyTouchMove,handleBodyTouchEnd]),react.useEffect((()=>()=>{claimedSwipeInstance===swipeInstance.current&&(claimedSwipeInstance=null)}),[]),react.useEffect((()=>{open||setMaybeSwiping(!1)}),[open]),(0,jsx_runtime.jsxs)(react.Fragment,{children:[(0,jsx_runtime.jsx)(Drawer.ZP,{open:!("temporary"!==variant||!maybeSwiping)||open,variant,ModalProps:{BackdropProps:{...BackdropProps,ref:backdropRef},..."temporary"===variant&&{keepMounted:!0},...ModalPropsProp},hideBackdrop,PaperProps:{...PaperProps,style:{pointerEvents:"temporary"!==variant||open||allowSwipeInChildren?"":"none",...PaperProps.style},ref:handleRef},anchor,transitionDuration:calculatedDurationRef.current||transitionDuration,onClose,ref,...other}),!disableSwipeToOpen&&"temporary"===variant&&(0,jsx_runtime.jsx)(NoSsr.Z,{children:(0,jsx_runtime.jsx)(SwipeableDrawer_SwipeArea,{anchor,ref:swipeAreaRef,width:swipeAreaWidth,...SwipeAreaProps})})]})}));try{SwipeableDrawer_SwipeableDrawer_SwipeableDrawer.displayName="SwipeableDrawer",SwipeableDrawer_SwipeableDrawer_SwipeableDrawer.__docgenInfo={description:"\nDemos:\n\n- [Swipeable Drawer](https://simspace.gitlab.io/engineering/ux-engineering/monorail/main/storybook/?path=/docs/navigation-drawer-swipeabledrawer--default)\n- [Drawers (MUI)](https://mui.com/material-ui/react-drawer/)\n\nAPI:\n\n- [SwipeableDrawer API](https://mui.com/material-ui/api/swipeable-drawer/)\n- inherits [Drawer API](https://mui.com/material-ui/api/drawer/)",displayName:"SwipeableDrawer",props:{}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["../components/src/SwipeableDrawer/SwipeableDrawer.tsx#SwipeableDrawer"]={docgenInfo:SwipeableDrawer_SwipeableDrawer_SwipeableDrawer.__docgenInfo,name:"SwipeableDrawer",path:"../components/src/SwipeableDrawer/SwipeableDrawer.tsx#SwipeableDrawer"})}catch(__react_docgen_typescript_loader_error){}var Typography=__webpack_require__("../components/src/Typography/Typography.tsx"),Button=__webpack_require__("../components/src/Button/Button.tsx"),CssBaseline=__webpack_require__("../components/src/CssBaseline/CssBaseline.tsx"),Box=__webpack_require__("../components/src/Box/Box.tsx"),Skeleton=__webpack_require__("../components/src/Skeleton/Skeleton.tsx"),storybook=__webpack_require__("./src/helpers/storybook.ts");const SwipeableDrawer_stories={title:"Navigation/Drawer/SwipeableDrawer",component:SwipeableDrawer_SwipeableDrawer_SwipeableDrawer,parameters:{layout:"fullscreen"}},Template=(0,storybook.yg)((args=>{const[open,setOpen]=react.useState(!1);return(0,jsx_runtime.jsxs)(jsx_runtime.Fragment,{children:[(0,jsx_runtime.jsx)(Typography.ZT,{children:"SwipableDrawer adds the ability to handle mobile touch/swipe gestures with the Drawer. View this example in a mobile device emulator (e.g. Chrome dev tools). Click `Toggle` to open the Drawer, then swipe in the opposite direction or click the backdrop to close."}),(0,jsx_runtime.jsx)(Button.zx,{onClick:()=>setOpen(!open),children:"Toggle"}),(0,jsx_runtime.jsxs)(SwipeableDrawer_SwipeableDrawer_SwipeableDrawer,{open,onOpen:()=>setOpen(!0),onClose:()=>setOpen(!1),...args,children:[args.children,(0,jsx_runtime.jsx)(Typography.ZT,{children:"Click or Swipe to close"})]})]})}),{args:{anchor:"left"}}),Default=(0,storybook.yg)(Template),Root=(0,styled.ZP)("div")((({theme})=>({height:"100%",backgroundColor:"light"===theme.palette.mode?grey.Z[100]:theme.palette.background.default}))),StyledBox=(0,styled.ZP)("div")((({theme})=>({backgroundColor:"light"===theme.palette.mode?"#fff":grey.Z[800]}))),Puller=(0,styled.ZP)("div")((({theme})=>({width:30,height:6,backgroundColor:"light"===theme.palette.mode?grey.Z[300]:grey.Z[900],borderRadius:3,position:"absolute",top:8,left:"calc(50% - 15px)"}))),SwipeableEdgeDrawer=(0,storybook.yg)((props=>{const{window}=props,[visible,setVisible]=react.useState(!1),[open,setOpen]=react.useState(!1),container=void 0!==window?()=>window().document.body:void 0;return(0,jsx_runtime.jsxs)(Root,{children:[(0,jsx_runtime.jsx)(CssBaseline.T,{}),(0,jsx_runtime.jsx)("style",{type:"text/css",children:"\n          /* Scope these styles to this example only. This is very hacky and is just to serve as a demonstration. */\n          .swipable-edge-drawer.MuiDrawer-root > .MuiPaper-root {\n            height: calc(50% - 56px);\n            overflow: visible;\n          }\n      "}),(0,jsx_runtime.jsxs)(Box.x,{sx:{textAlign:"center",pt:1},children:[(0,jsx_runtime.jsx)(Typography.ZT,{children:"View this example in a mobile device emulator (e.g. Chrome dev tools). Click the `Show Drawer` button to show the drawer at the bottom of the page, then click `Open Drawer` or swipe up to open it. Swipe down or click the backdrop to close it."}),(0,jsx_runtime.jsxs)(Button.zx,{onClick:()=>setVisible(!visible),children:[visible?"Hide":"Show"," Drawer"]}),visible&&(0,jsx_runtime.jsx)(Button.zx,{onClick:()=>setOpen(!open),children:"Toggle Drawer"})]}),visible&&(0,jsx_runtime.jsxs)(SwipeableDrawer_SwipeableDrawer_SwipeableDrawer,{className:"swipable-edge-drawer",container,anchor:"bottom",open,onClose:()=>setOpen(!1),onOpen:()=>setOpen(!0),swipeAreaWidth:56,disableSwipeToOpen:!1,ModalProps:{keepMounted:!0},children:[(0,jsx_runtime.jsxs)(StyledBox,{sx:{position:"absolute",top:-56,borderTopLeftRadius:8,borderTopRightRadius:8,visibility:"visible",right:0,left:0},children:[(0,jsx_runtime.jsx)(Puller,{}),(0,jsx_runtime.jsx)(Typography.ZT,{sx:{p:2,color:"text.secondary"},children:"51 results"})]}),(0,jsx_runtime.jsx)(StyledBox,{sx:{px:2,pb:2,height:"100%",overflow:"auto"},children:(0,jsx_runtime.jsx)(Skeleton.Od,{variant:"rectangular",height:"100%"})})]})]})}));Default.parameters={...Default.parameters,docs:{...Default.parameters?.docs,source:{originalSource:"story(Template)",...Default.parameters?.docs?.source}}},SwipeableEdgeDrawer.parameters={...SwipeableEdgeDrawer.parameters,docs:{...SwipeableEdgeDrawer.parameters?.docs,source:{originalSource:"story<Props>((props: Props) => {\n  const {\n    window\n  } = props;\n  const [visible, setVisible] = React.useState(false);\n  const [open, setOpen] = React.useState(false);\n\n  // This is used only for the example\n  const container = window !== undefined ? () => window().document.body : undefined;\n  return <Root>\n      <CssBaseline />\n      {/*\n       <Global\n        styles={{\n          '.MuiDrawer-root > .MuiPaper-root': {\n            height: `calc(50% - ${drawerBleeding}px)`,\n            overflow: 'visible',\n          },\n        }}\n       />\n        */}\n      <style type=\"text/css\">{`\n          /* Scope these styles to this example only. This is very hacky and is just to serve as a demonstration. */\n          .swipable-edge-drawer.MuiDrawer-root > .MuiPaper-root {\n            height: calc(50% - ${drawerBleeding}px);\n            overflow: visible;\n          }\n      `}</style>\n      <Box sx={{\n      textAlign: 'center',\n      pt: 1\n    }}>\n        <Typography>\n          View this example in a mobile device emulator (e.g. Chrome dev tools).\n          Click the `Show Drawer` button to show the drawer at the bottom of the\n          page, then click `Open Drawer` or swipe up to open it. Swipe down or\n          click the backdrop to close it.\n        </Typography>\n        <Button onClick={() => setVisible(!visible)}>\n          {visible ? 'Hide' : 'Show'} Drawer\n        </Button>\n        {visible && <Button onClick={() => setOpen(!open)}>Toggle Drawer</Button>}\n      </Box>\n      {visible && <SwipeableDrawer className=\"swipable-edge-drawer\" container={container} anchor=\"bottom\" open={open} onClose={() => setOpen(false)} onOpen={() => setOpen(true)} swipeAreaWidth={drawerBleeding} disableSwipeToOpen={false} ModalProps={{\n      keepMounted: true\n    }}>\n          <StyledBox sx={{\n        position: 'absolute',\n        top: -drawerBleeding,\n        borderTopLeftRadius: 8,\n        borderTopRightRadius: 8,\n        visibility: 'visible',\n        right: 0,\n        left: 0\n      }}>\n            <Puller />\n            <Typography sx={{\n          p: 2,\n          color: 'text.secondary'\n        }}>\n              51 results\n            </Typography>\n          </StyledBox>\n          <StyledBox sx={{\n        px: 2,\n        pb: 2,\n        height: '100%',\n        overflow: 'auto'\n      }}>\n            <Skeleton variant=\"rectangular\" height=\"100%\" />\n          </StyledBox>\n        </SwipeableDrawer>}\n    </Root>;\n})",...SwipeableEdgeDrawer.parameters?.docs?.source},description:{story:'You can configure the `SwipeableDrawer` to have a visible edge when closed.\n\nIf you are on a desktop, you can toggle the drawer with the "OPEN" button. If you are on mobile, you can open the demo in CodeSandbox ("edit" icon) and swipe.',...SwipeableEdgeDrawer.parameters?.docs?.description}}};const __namedExportsOrder=["Default","SwipeableEdgeDrawer"];try{SwipeableEdgeDrawer.displayName="SwipeableEdgeDrawer",SwipeableEdgeDrawer.__docgenInfo={description:'You can configure the `SwipeableDrawer` to have a visible edge when closed.\n\nIf you are on a desktop, you can toggle the drawer with the "OPEN" button. If you are on mobile, you can open the demo in CodeSandbox ("edit" icon) and swipe.',displayName:"SwipeableEdgeDrawer",props:{}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/SwipeableDrawer/SwipeableDrawer.stories.tsx#SwipeableEdgeDrawer"]={docgenInfo:SwipeableEdgeDrawer.__docgenInfo,name:"SwipeableEdgeDrawer",path:"src/SwipeableDrawer/SwipeableDrawer.stories.tsx#SwipeableEdgeDrawer"})}catch(__react_docgen_typescript_loader_error){}},"../components/src/Button/Button.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{zx:()=>Button});var react__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("../../node_modules/react/index.js"),_mui_material__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("../../node_modules/@mui/material/Button/Button.js"),clsx__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__("../../node_modules/clsx/dist/clsx.m.js"),react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("../../node_modules/react/jsx-runtime.js");const Button=react__WEBPACK_IMPORTED_MODULE_0__.forwardRef((({className,inverted,...props},ref)=>(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_mui_material__WEBPACK_IMPORTED_MODULE_2__.Z,{ref,className:(0,clsx__WEBPACK_IMPORTED_MODULE_3__.Z)(!0===inverted&&"MonorailButton-inverted",className),...props})));Button.muiName=_mui_material__WEBPACK_IMPORTED_MODULE_2__.Z.muiName;try{Button.displayName="Button",Button.__docgenInfo={description:"\nDemos:\n\n- [Button](https://simspace.gitlab.io/engineering/ux-engineering/monorail/main/storybook/?path=/docs/inputs-button--default)\n- [Button group (MUI)](https://mui.com/material-ui/react-button-group/)\n- [Buttons (MUI)](https://mui.com/material-ui/react-button/)\n\nAPI:\n\n- [Button API](https://mui.com/material-ui/api/button/)\n- inherits [ButtonBase API](https://mui.com/material-ui/api/button-base/)",displayName:"Button",props:{href:{defaultValue:null,description:"The URL to link to when the button is clicked.\nIf defined, an `a` element will be used as the root node.",name:"href",required:!1,type:{name:"string"}},inverted:{defaultValue:null,description:"",name:"inverted",required:!1,type:{name:"boolean"}},children:{defaultValue:null,description:"The content of the component.",name:"children",required:!1,type:{name:"ReactNode"}},classes:{defaultValue:null,description:"Override or extend the styles applied to the component.",name:"classes",required:!1,type:{name:"Partial<ButtonClasses> & Partial<ClassNameMap<never>>"}},color:{defaultValue:{value:"'primary'"},description:"The color of the component.\nIt supports both default and custom theme colors, which can be added as shown in the\n[palette customization guide](https://mui.com/material-ui/customization/palette/#custom-colors).",name:"color",required:!1,type:{name:'"primary" | "secondary" | "error" | "info" | "success" | "warning"'}},disabled:{defaultValue:{value:"false\nfalse"},description:"If `true`, the component is disabled.",name:"disabled",required:!1,type:{name:"boolean"}},disableFocusRipple:{defaultValue:{value:"false"},description:"If `true`, the  keyboard focus ripple is disabled.",name:"disableFocusRipple",required:!1,type:{name:"boolean"}},fullWidth:{defaultValue:{value:"false"},description:"If `true`, the button will take up the full width of its container.",name:"fullWidth",required:!1,type:{name:"boolean"}},size:{defaultValue:{value:"'medium'"},description:"The size of the component.\n`small` is equivalent to the dense button styling.",name:"size",required:!1,type:{name:'"small" | "medium" | "large"'}},sx:{defaultValue:null,description:"The system prop that allows defining system overrides as well as additional CSS styles.",name:"sx",required:!1,type:{name:"SxProps<Theme>"}},tabIndex:{defaultValue:{value:"0"},description:"",name:"tabIndex",required:!1,type:{name:"number"}},centerRipple:{defaultValue:{value:"false"},description:"If `true`, the ripples are centered.\nThey won't start at the cursor interaction position.",name:"centerRipple",required:!1,type:{name:"boolean"}},disableRipple:{defaultValue:{value:"false"},description:"If `true`, the ripple effect is disabled.\n\n⚠️ Without a ripple there is no styling for :focus-visible by default. Be sure\nto highlight the element by applying separate styles with the `.Mui-focusVisible` class.",name:"disableRipple",required:!1,type:{name:"boolean"}},disableTouchRipple:{defaultValue:{value:"false"},description:"If `true`, the touch ripple effect is disabled.",name:"disableTouchRipple",required:!1,type:{name:"boolean"}},focusRipple:{defaultValue:{value:"false"},description:"If `true`, the base button will have a keyboard focus ripple.",name:"focusRipple",required:!1,type:{name:"boolean"}},focusVisibleClassName:{defaultValue:null,description:"This prop can help identify which element has keyboard focus.\nThe class name will be applied when the element gains the focus through keyboard interaction.\nIt's a polyfill for the [CSS :focus-visible selector](https://drafts.csswg.org/selectors-4/#the-focus-visible-pseudo).\nThe rationale for using this feature [is explained here](https://github.com/WICG/focus-visible/blob/HEAD/explainer.md).\nA [polyfill can be used](https://github.com/WICG/focus-visible) to apply a `focus-visible` class to other components\nif needed.",name:"focusVisibleClassName",required:!1,type:{name:"string"}},TouchRippleProps:{defaultValue:null,description:"Props applied to the `TouchRipple` element.",name:"TouchRippleProps",required:!1,type:{name:"Partial<TouchRippleProps>"}},touchRippleRef:{defaultValue:null,description:"A ref that points to the `TouchRipple` element.",name:"touchRippleRef",required:!1,type:{name:"Ref<TouchRippleActions>"}},className:{defaultValue:null,description:"",name:"className",required:!1,type:{name:"string"}},style:{defaultValue:null,description:"",name:"style",required:!1,type:{name:"CSSProperties"}},slot:{defaultValue:null,description:"",name:"slot",required:!1,type:{name:"string"}},title:{defaultValue:null,description:"",name:"title",required:!1,type:{name:"string"}},id:{defaultValue:null,description:"",name:"id",required:!1,type:{name:"string"}},defaultChecked:{defaultValue:null,description:"",name:"defaultChecked",required:!1,type:{name:"boolean"}},defaultValue:{defaultValue:null,description:"",name:"defaultValue",required:!1,type:{name:"string | number | readonly string[]"}},accessKey:{defaultValue:null,description:"",name:"accessKey",required:!1,type:{name:"string"}},dir:{defaultValue:null,description:"",name:"dir",required:!1,type:{name:"string"}},draggable:{defaultValue:null,description:"",name:"draggable",required:!1,type:{name:"Booleanish"}},hidden:{defaultValue:null,description:"",name:"hidden",required:!1,type:{name:"boolean"}},lang:{defaultValue:null,description:"",name:"lang",required:!1,type:{name:"string"}},placeholder:{defaultValue:null,description:"",name:"placeholder",required:!1,type:{name:"string"}},spellCheck:{defaultValue:null,description:"",name:"spellCheck",required:!1,type:{name:"Booleanish"}},translate:{defaultValue:null,description:"",name:"translate",required:!1,type:{name:'"yes" | "no"'}},radioGroup:{defaultValue:null,description:"",name:"radioGroup",required:!1,type:{name:"string"}},role:{defaultValue:null,description:"",name:"role",required:!1,type:{name:"AriaRole"}},about:{defaultValue:null,description:"",name:"about",required:!1,type:{name:"string"}},datatype:{defaultValue:null,description:"",name:"datatype",required:!1,type:{name:"string"}},inlist:{defaultValue:null,description:"",name:"inlist",required:!1,type:{name:"any"}},prefix:{defaultValue:null,description:"",name:"prefix",required:!1,type:{name:"string"}},property:{defaultValue:null,description:"",name:"property",required:!1,type:{name:"string"}},resource:{defaultValue:null,description:"",name:"resource",required:!1,type:{name:"string"}},typeof:{defaultValue:null,description:"",name:"typeof",required:!1,type:{name:"string"}},vocab:{defaultValue:null,description:"",name:"vocab",required:!1,type:{name:"string"}},autoCapitalize:{defaultValue:null,description:"",name:"autoCapitalize",required:!1,type:{name:"string"}},autoCorrect:{defaultValue:null,description:"",name:"autoCorrect",required:!1,type:{name:"string"}},autoSave:{defaultValue:null,description:"",name:"autoSave",required:!1,type:{name:"string"}},itemProp:{defaultValue:null,description:"",name:"itemProp",required:!1,type:{name:"string"}},itemScope:{defaultValue:null,description:"",name:"itemScope",required:!1,type:{name:"boolean"}},itemType:{defaultValue:null,description:"",name:"itemType",required:!1,type:{name:"string"}},itemID:{defaultValue:null,description:"",name:"itemID",required:!1,type:{name:"string"}},itemRef:{defaultValue:null,description:"",name:"itemRef",required:!1,type:{name:"string"}},results:{defaultValue:null,description:"",name:"results",required:!1,type:{name:"number"}},security:{defaultValue:null,description:"",name:"security",required:!1,type:{name:"string"}},unselectable:{defaultValue:null,description:"",name:"unselectable",required:!1,type:{name:'"on" | "off"'}},inputMode:{defaultValue:null,description:"Hints at the type of data that might be entered by the user while editing the element or its contents\n@see https://html.spec.whatwg.org/multipage/interaction.html#input-modalities:-the-inputmode-attribute",name:"inputMode",required:!1,type:{name:'"search" | "text" | "none" | "tel" | "url" | "email" | "numeric" | "decimal"'}},is:{defaultValue:null,description:"Specify that a standard HTML element should behave like a defined custom built-in element\n@see https://html.spec.whatwg.org/multipage/custom-elements.html#attr-is",name:"is",required:!1,type:{name:"string"}},dangerouslySetInnerHTML:{defaultValue:null,description:"",name:"dangerouslySetInnerHTML",required:!1,type:{name:"{ __html: string; }"}},ref:{defaultValue:null,description:"",name:"ref",required:!1,type:{name:"Ref<HTMLAnchorElement>"}},media:{defaultValue:null,description:"",name:"media",required:!1,type:{name:"string"}},target:{defaultValue:null,description:"",name:"target",required:!1,type:{name:"HTMLAttributeAnchorTarget"}},type:{defaultValue:null,description:"",name:"type",required:!1,type:{name:"string"}},key:{defaultValue:null,description:"",name:"key",required:!1,type:{name:"Key"}},download:{defaultValue:null,description:"",name:"download",required:!1,type:{name:"any"}},hrefLang:{defaultValue:null,description:"",name:"hrefLang",required:!1,type:{name:"string"}},ping:{defaultValue:null,description:"",name:"ping",required:!1,type:{name:"string"}},rel:{defaultValue:null,description:"",name:"rel",required:!1,type:{name:"string"}},referrerPolicy:{defaultValue:null,description:"",name:"referrerPolicy",required:!1,type:{name:"HTMLAttributeReferrerPolicy"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["../components/src/Button/Button.tsx#Button"]={docgenInfo:Button.__docgenInfo,name:"Button",path:"../components/src/Button/Button.tsx#Button"})}catch(__react_docgen_typescript_loader_error){}try{getButtonUtilityClass.displayName="getButtonUtilityClass",getButtonUtilityClass.__docgenInfo={description:"",displayName:"getButtonUtilityClass",props:{toString:{defaultValue:null,description:"Returns a string representation of a string.",name:"toString",required:!1,type:{name:"() => string"}},charAt:{defaultValue:null,description:"Returns the character at the specified index.\n@param pos The zero-based index of the desired character.",name:"charAt",required:!0,type:{name:"(pos: number) => string"}},charCodeAt:{defaultValue:null,description:"Returns the Unicode value of the character at the specified location.\n@param index The zero-based index of the desired character. If there is no character at the specified index, NaN is returned.",name:"charCodeAt",required:!0,type:{name:"(index: number) => number"}},indexOf:{defaultValue:null,description:"Returns the position of the first occurrence of a substring.\n@param searchString The substring to search for in the string\n@param position The index at which to begin searching the String object. If omitted, search starts at the beginning of the string.",name:"indexOf",required:!0,type:{name:"(searchString: string, position?: number) => number"}},lastIndexOf:{defaultValue:null,description:"Returns the last occurrence of a substring in the string.\n@param searchString The substring to search for.\n@param position The index at which to begin searching. If omitted, the search begins at the end of the string.",name:"lastIndexOf",required:!0,type:{name:"(searchString: string, position?: number) => number"}},localeCompare:{defaultValue:null,description:"Determines whether two strings are equivalent in the current locale.\nDetermines whether two strings are equivalent in the current or specified locale.\n@param that String to compare to target string\n@param that String to compare to target string\n@param locales A locale string or array of locale strings that contain one or more language or locale tags. If you include more than one locale string, list them in descending order of priority so that the first entry is the preferred locale. If you omit this parameter, the default locale of the JavaScript runtime is used. This parameter must conform to BCP 47 standards; see the Intl.Collator object for details.\n@param options An object that contains one or more properties that specify comparison options. see the Intl.Collator object for details.",name:"localeCompare",required:!0,type:{name:"{ (that: string): number; (that: string, locales?: string | string[], options?: CollatorOptions): number; }"}},match:{defaultValue:null,description:"Matches a string with a regular expression, and returns an array containing the results of that search.\nMatches a string or an object that supports being matched against, and returns an array\ncontaining the results of that search, or null if no matches are found.\n@param regexp A variable name or string literal containing the regular expression pattern and flags.\n@param matcher An object that supports being matched against.",name:"match",required:!0,type:{name:"{ (regexp: string | RegExp): RegExpMatchArray; (matcher: { [Symbol.match](string: string): RegExpMatchArray; }): RegExpMatchArray; }"}},replace:{defaultValue:null,description:"Replaces text in a string, using a regular expression or search string.\nPasses a string and {@linkcode replaceValue} to the `[Symbol.replace]` method on {@linkcode searchValue}. This method is expected to implement its own replacement algorithm.\nReplaces text in a string, using an object that supports replacement within a string.\n@param searchValue A string or regular expression to search for.\n@param replaceValue A string containing the text to replace. When the {@linkcode searchValue } is a `RegExp`, all matches are replaced if the `g` flag is set (or only those matches at the beginning, if the `y` flag is also present). Otherwise, only the first match of {@linkcode searchValue } is replaced.\n@param searchValue A string to search for.\n@param replacer A function that returns the replacement text.\n@param searchValue An object that supports searching for and replacing matches within a string.\n@param replaceValue The replacement text.\n@param searchValue A object can search for and replace matches within a string.\n@param replacer A function that returns the replacement text.",name:"replace",required:!0,type:{name:"{ (searchValue: string | RegExp, replaceValue: string): string; (searchValue: string | RegExp, replacer: (substring: string, ...args: any[]) => string): string; (searchValue: { ...; }, replaceValue: string): string; (searchValue: { ...; }, replacer: (substring: string, ...args: any[]) => string): string; }"}},search:{defaultValue:null,description:"Finds the first substring match in a regular expression search.\n@param regexp The regular expression pattern and applicable flags.\n@param searcher An object which supports searching within a string.",name:"search",required:!0,type:{name:"{ (regexp: string | RegExp): number; (searcher: { [Symbol.search](string: string): number; }): number; }"}},slice:{defaultValue:null,description:"Returns a section of a string.\n@param start The index to the beginning of the specified portion of stringObj.\n@param end The index to the end of the specified portion of stringObj. The substring includes the characters up to, but not including, the character indicated by end.\nIf this value is not specified, the substring continues to the end of stringObj.",name:"slice",required:!0,type:{name:"(start?: number, end?: number) => string"}},split:{defaultValue:null,description:"Split a string into substrings using the specified separator and return them as an array.\n@param separator A string that identifies character or characters to use in separating the string. If omitted, a single-element array containing the entire string is returned.\n@param limit A value used to limit the number of elements returned in the array.\n@param splitter An object that can split a string.\n@param limit A value used to limit the number of elements returned in the array.",name:"split",required:!0,type:{name:"{ (separator: string | RegExp, limit?: number): string[]; (splitter: { [Symbol.split](string: string, limit?: number): string[]; }, limit?: number): string[]; }"}},substring:{defaultValue:null,description:"Returns the substring at the specified location within a String object.\n@param start The zero-based index number indicating the beginning of the substring.\n@param end Zero-based index number indicating the end of the substring. The substring includes the characters up to, but not including, the character indicated by end.\nIf end is omitted, the characters from start through the end of the original string are returned.",name:"substring",required:!0,type:{name:"(start: number, end?: number) => string"}},toLowerCase:{defaultValue:null,description:"Converts all the alphabetic characters in a string to lowercase.",name:"toLowerCase",required:!0,type:{name:"() => string"}},toLocaleLowerCase:{defaultValue:null,description:"Converts all alphabetic characters to lowercase, taking into account the host environment's current locale.",name:"toLocaleLowerCase",required:!0,type:{name:"(locales?: string | string[]) => string"}},toUpperCase:{defaultValue:null,description:"Converts all the alphabetic characters in a string to uppercase.",name:"toUpperCase",required:!0,type:{name:"() => string"}},toLocaleUpperCase:{defaultValue:null,description:"Returns a string where all alphabetic characters have been converted to uppercase, taking into account the host environment's current locale.",name:"toLocaleUpperCase",required:!0,type:{name:"(locales?: string | string[]) => string"}},trim:{defaultValue:null,description:"Removes the leading and trailing white space and line terminator characters from a string.",name:"trim",required:!0,type:{name:"() => string"}},length:{defaultValue:null,description:"Returns the length of a String object.",name:"length",required:!0,type:{name:"number"}},substr:{defaultValue:null,description:"Gets a substring beginning at the specified location and having the specified length.\n@deprecated A legacy feature for browser compatibility\n@param from The starting position of the desired substring. The index of the first character in the string is zero.\n@param length The number of characters to include in the returned substring.",name:"substr",required:!0,type:{name:"(from: number, length?: number) => string"}},valueOf:{defaultValue:null,description:"Returns the primitive value of the specified object.",name:"valueOf",required:!1,type:{name:"() => string"}},codePointAt:{defaultValue:null,description:"Returns a nonnegative integer Number less than 1114112 (0x110000) that is the code point\nvalue of the UTF-16 encoded code point starting at the string element at position pos in\nthe String resulting from converting this object to a String.\nIf there is no element at that position, the result is undefined.\nIf a valid UTF-16 surrogate pair does not begin at pos, the result is the code unit at pos.",name:"codePointAt",required:!0,type:{name:"(pos: number) => number"}},includes:{defaultValue:null,description:"Returns true if searchString appears as a substring of the result of converting this\nobject to a String, at one or more positions that are\ngreater than or equal to position; otherwise, returns false.\n@param searchString search string\n@param position If position is undefined, 0 is assumed, so as to search all of the String.",name:"includes",required:!0,type:{name:"(searchString: string, position?: number) => boolean"}},endsWith:{defaultValue:null,description:"Returns true if the sequence of elements of searchString converted to a String is the\nsame as the corresponding elements of this object (converted to a String) starting at\nendPosition – length(this). Otherwise returns false.",name:"endsWith",required:!0,type:{name:"(searchString: string, endPosition?: number) => boolean"}},normalize:{defaultValue:null,description:'Returns the String value result of normalizing the string into the normalization form\nnamed by form as specified in Unicode Standard Annex #15, Unicode Normalization Forms.\n@param form Applicable values: "NFC", "NFD", "NFKC", or "NFKD", If not specified default\nis "NFC"\n@param form Applicable values: "NFC", "NFD", "NFKC", or "NFKD", If not specified default\nis "NFC"',name:"normalize",required:!0,type:{name:'{ (form: "NFC" | "NFD" | "NFKC" | "NFKD"): string; (form?: string): string; }'}},repeat:{defaultValue:null,description:"Returns a String value that is made from count copies appended together. If count is 0,\nthe empty string is returned.\n@param count number of copies to append",name:"repeat",required:!0,type:{name:"(count: number) => string"}},startsWith:{defaultValue:null,description:"Returns true if the sequence of elements of searchString converted to a String is the\nsame as the corresponding elements of this object (converted to a String) starting at\nposition. Otherwise returns false.",name:"startsWith",required:!0,type:{name:"(searchString: string, position?: number) => boolean"}},anchor:{defaultValue:null,description:"Returns an `<a>` HTML anchor element and sets the name attribute to the text value\n@deprecated A legacy feature for browser compatibility\n@param name",name:"anchor",required:!0,type:{name:"(name: string) => string"}},big:{defaultValue:null,description:"Returns a `<big>` HTML element\n@deprecated A legacy feature for browser compatibility",name:"big",required:!0,type:{name:"() => string"}},blink:{defaultValue:null,description:"Returns a `<blink>` HTML element\n@deprecated A legacy feature for browser compatibility",name:"blink",required:!0,type:{name:"() => string"}},bold:{defaultValue:null,description:"Returns a `<b>` HTML element\n@deprecated A legacy feature for browser compatibility",name:"bold",required:!0,type:{name:"() => string"}},fixed:{defaultValue:null,description:"Returns a `<tt>` HTML element\n@deprecated A legacy feature for browser compatibility",name:"fixed",required:!0,type:{name:"() => string"}},italics:{defaultValue:null,description:"Returns an `<i>` HTML element\n@deprecated A legacy feature for browser compatibility",name:"italics",required:!0,type:{name:"() => string"}},link:{defaultValue:null,description:"Returns an `<a>` HTML element and sets the href attribute value\n@deprecated A legacy feature for browser compatibility",name:"link",required:!0,type:{name:"(url: string) => string"}},small:{defaultValue:null,description:"Returns a `<small>` HTML element\n@deprecated A legacy feature for browser compatibility",name:"small",required:!0,type:{name:"() => string"}},strike:{defaultValue:null,description:"Returns a `<strike>` HTML element\n@deprecated A legacy feature for browser compatibility",name:"strike",required:!0,type:{name:"() => string"}},sub:{defaultValue:null,description:"Returns a `<sub>` HTML element\n@deprecated A legacy feature for browser compatibility",name:"sub",required:!0,type:{name:"() => string"}},sup:{defaultValue:null,description:"Returns a `<sup>` HTML element\n@deprecated A legacy feature for browser compatibility",name:"sup",required:!0,type:{name:"() => string"}},padStart:{defaultValue:null,description:'Pads the current string with a given string (possibly repeated) so that the resulting string reaches a given length.\nThe padding is applied from the start (left) of the current string.\n@param maxLength The length of the resulting string once the current string has been padded.\nIf this parameter is smaller than the current string\'s length, the current string will be returned as it is.\n@param fillString The string to pad the current string with.\nIf this string is too long, it will be truncated and the left-most part will be applied.\nThe default value for this parameter is " " (U+0020).',name:"padStart",required:!0,type:{name:"(maxLength: number, fillString?: string) => string"}},padEnd:{defaultValue:null,description:'Pads the current string with a given string (possibly repeated) so that the resulting string reaches a given length.\nThe padding is applied from the end (right) of the current string.\n@param maxLength The length of the resulting string once the current string has been padded.\nIf this parameter is smaller than the current string\'s length, the current string will be returned as it is.\n@param fillString The string to pad the current string with.\nIf this string is too long, it will be truncated and the left-most part will be applied.\nThe default value for this parameter is " " (U+0020).',name:"padEnd",required:!0,type:{name:"(maxLength: number, fillString?: string) => string"}},trimEnd:{defaultValue:null,description:"Removes the trailing white space and line terminator characters from a string.",name:"trimEnd",required:!0,type:{name:"() => string"}},trimStart:{defaultValue:null,description:"Removes the leading white space and line terminator characters from a string.",name:"trimStart",required:!0,type:{name:"() => string"}},trimLeft:{defaultValue:null,description:"Removes the leading white space and line terminator characters from a string.\n@deprecated A legacy feature for browser compatibility. Use `trimStart` instead",name:"trimLeft",required:!0,type:{name:"() => string"}},trimRight:{defaultValue:null,description:"Removes the trailing white space and line terminator characters from a string.\n@deprecated A legacy feature for browser compatibility. Use `trimEnd` instead",name:"trimRight",required:!0,type:{name:"() => string"}},matchAll:{defaultValue:null,description:"Matches a string with a regular expression, and returns an iterable of matches\ncontaining the results of that search.\n@param regexp A variable name or string literal containing the regular expression pattern and flags.",name:"matchAll",required:!0,type:{name:"(regexp: RegExp) => IterableIterator<RegExpMatchArray>"}},replaceAll:{defaultValue:null,description:"Replace all instances of a substring in a string, using a regular expression or search string.\n@param searchValue A string to search for.\n@param replaceValue A string containing the text to replace for every successful match of searchValue in this string.\n@param searchValue A string to search for.\n@param replacer A function that returns the replacement text.",name:"replaceAll",required:!0,type:{name:"{ (searchValue: string | RegExp, replaceValue: string): string; (searchValue: string | RegExp, replacer: (substring: string, ...args: any[]) => string): string; }"}},at:{defaultValue:null,description:"Returns a new String consisting of the single UTF-16 code unit located at the specified index.\n@param index The zero-based index of the desired code unit. A negative index will count back from the last item.",name:"at",required:!0,type:{name:"(index: number) => string"}},"__@iterator@84":{defaultValue:null,description:"Iterator",name:"__@iterator@84",required:!0,type:{name:"() => IterableIterator<string>"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["../components/src/Button/Button.tsx#getButtonUtilityClass"]={docgenInfo:getButtonUtilityClass.__docgenInfo,name:"getButtonUtilityClass",path:"../components/src/Button/Button.tsx#getButtonUtilityClass"})}catch(__react_docgen_typescript_loader_error){}},"../components/src/Skeleton/Skeleton.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{Od:()=>Skeleton});const Skeleton=__webpack_require__("../../node_modules/@mui/material/Skeleton/Skeleton.js").Z;try{Skeleton.displayName="Skeleton",Skeleton.__docgenInfo={description:"\nDemos:\n\n- [Skeleton](https://simspace.gitlab.io/engineering/ux-engineering/monorail/main/storybook/?path=/docs/feedback-skeleton--default)\n- [Skeleton (MUI)](https://mui.com/material-ui/react-skeleton/)\n\nAPI:\n\n- [Skeleton API](https://mui.com/material-ui/api/skeleton/)",displayName:"Skeleton",props:{children:{defaultValue:null,description:"Optional children to infer width and height from.",name:"children",required:!1,type:{name:"ReactNode"}},classes:{defaultValue:null,description:"Override or extend the styles applied to the component.",name:"classes",required:!1,type:{name:"Partial<SkeletonClasses> & Partial<ClassNameMap<never>>"}},height:{defaultValue:null,description:"Height of the skeleton.\nUseful when you don't want to adapt the skeleton to a text element but for instance a card.",name:"height",required:!1,type:{name:"string | number"}},sx:{defaultValue:null,description:"The system prop that allows defining system overrides as well as additional CSS styles.",name:"sx",required:!1,type:{name:"SxProps<Theme>"}},width:{defaultValue:null,description:"Width of the skeleton.\nUseful when the skeleton is inside an inline element with no width of its own.",name:"width",required:!1,type:{name:"string | number"}},className:{defaultValue:null,description:"",name:"className",required:!1,type:{name:"string"}},style:{defaultValue:null,description:"",name:"style",required:!1,type:{name:"CSSProperties"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["../components/src/Skeleton/Skeleton.tsx#Skeleton"]={docgenInfo:Skeleton.__docgenInfo,name:"Skeleton",path:"../components/src/Skeleton/Skeleton.tsx#Skeleton"})}catch(__react_docgen_typescript_loader_error){}try{getSkeletonUtilityClass.displayName="getSkeletonUtilityClass",getSkeletonUtilityClass.__docgenInfo={description:"",displayName:"getSkeletonUtilityClass",props:{toString:{defaultValue:null,description:"Returns a string representation of a string.",name:"toString",required:!1,type:{name:"() => string"}},charAt:{defaultValue:null,description:"Returns the character at the specified index.\n@param pos The zero-based index of the desired character.",name:"charAt",required:!0,type:{name:"(pos: number) => string"}},charCodeAt:{defaultValue:null,description:"Returns the Unicode value of the character at the specified location.\n@param index The zero-based index of the desired character. If there is no character at the specified index, NaN is returned.",name:"charCodeAt",required:!0,type:{name:"(index: number) => number"}},indexOf:{defaultValue:null,description:"Returns the position of the first occurrence of a substring.\n@param searchString The substring to search for in the string\n@param position The index at which to begin searching the String object. If omitted, search starts at the beginning of the string.",name:"indexOf",required:!0,type:{name:"(searchString: string, position?: number) => number"}},lastIndexOf:{defaultValue:null,description:"Returns the last occurrence of a substring in the string.\n@param searchString The substring to search for.\n@param position The index at which to begin searching. If omitted, the search begins at the end of the string.",name:"lastIndexOf",required:!0,type:{name:"(searchString: string, position?: number) => number"}},localeCompare:{defaultValue:null,description:"Determines whether two strings are equivalent in the current locale.\nDetermines whether two strings are equivalent in the current or specified locale.\n@param that String to compare to target string\n@param that String to compare to target string\n@param locales A locale string or array of locale strings that contain one or more language or locale tags. If you include more than one locale string, list them in descending order of priority so that the first entry is the preferred locale. If you omit this parameter, the default locale of the JavaScript runtime is used. This parameter must conform to BCP 47 standards; see the Intl.Collator object for details.\n@param options An object that contains one or more properties that specify comparison options. see the Intl.Collator object for details.",name:"localeCompare",required:!0,type:{name:"{ (that: string): number; (that: string, locales?: string | string[], options?: CollatorOptions): number; }"}},match:{defaultValue:null,description:"Matches a string with a regular expression, and returns an array containing the results of that search.\nMatches a string or an object that supports being matched against, and returns an array\ncontaining the results of that search, or null if no matches are found.\n@param regexp A variable name or string literal containing the regular expression pattern and flags.\n@param matcher An object that supports being matched against.",name:"match",required:!0,type:{name:"{ (regexp: string | RegExp): RegExpMatchArray; (matcher: { [Symbol.match](string: string): RegExpMatchArray; }): RegExpMatchArray; }"}},replace:{defaultValue:null,description:"Replaces text in a string, using a regular expression or search string.\nPasses a string and {@linkcode replaceValue} to the `[Symbol.replace]` method on {@linkcode searchValue}. This method is expected to implement its own replacement algorithm.\nReplaces text in a string, using an object that supports replacement within a string.\n@param searchValue A string or regular expression to search for.\n@param replaceValue A string containing the text to replace. When the {@linkcode searchValue } is a `RegExp`, all matches are replaced if the `g` flag is set (or only those matches at the beginning, if the `y` flag is also present). Otherwise, only the first match of {@linkcode searchValue } is replaced.\n@param searchValue A string to search for.\n@param replacer A function that returns the replacement text.\n@param searchValue An object that supports searching for and replacing matches within a string.\n@param replaceValue The replacement text.\n@param searchValue A object can search for and replace matches within a string.\n@param replacer A function that returns the replacement text.",name:"replace",required:!0,type:{name:"{ (searchValue: string | RegExp, replaceValue: string): string; (searchValue: string | RegExp, replacer: (substring: string, ...args: any[]) => string): string; (searchValue: { ...; }, replaceValue: string): string; (searchValue: { ...; }, replacer: (substring: string, ...args: any[]) => string): string; }"}},search:{defaultValue:null,description:"Finds the first substring match in a regular expression search.\n@param regexp The regular expression pattern and applicable flags.\n@param searcher An object which supports searching within a string.",name:"search",required:!0,type:{name:"{ (regexp: string | RegExp): number; (searcher: { [Symbol.search](string: string): number; }): number; }"}},slice:{defaultValue:null,description:"Returns a section of a string.\n@param start The index to the beginning of the specified portion of stringObj.\n@param end The index to the end of the specified portion of stringObj. The substring includes the characters up to, but not including, the character indicated by end.\nIf this value is not specified, the substring continues to the end of stringObj.",name:"slice",required:!0,type:{name:"(start?: number, end?: number) => string"}},split:{defaultValue:null,description:"Split a string into substrings using the specified separator and return them as an array.\n@param separator A string that identifies character or characters to use in separating the string. If omitted, a single-element array containing the entire string is returned.\n@param limit A value used to limit the number of elements returned in the array.\n@param splitter An object that can split a string.\n@param limit A value used to limit the number of elements returned in the array.",name:"split",required:!0,type:{name:"{ (separator: string | RegExp, limit?: number): string[]; (splitter: { [Symbol.split](string: string, limit?: number): string[]; }, limit?: number): string[]; }"}},substring:{defaultValue:null,description:"Returns the substring at the specified location within a String object.\n@param start The zero-based index number indicating the beginning of the substring.\n@param end Zero-based index number indicating the end of the substring. The substring includes the characters up to, but not including, the character indicated by end.\nIf end is omitted, the characters from start through the end of the original string are returned.",name:"substring",required:!0,type:{name:"(start: number, end?: number) => string"}},toLowerCase:{defaultValue:null,description:"Converts all the alphabetic characters in a string to lowercase.",name:"toLowerCase",required:!0,type:{name:"() => string"}},toLocaleLowerCase:{defaultValue:null,description:"Converts all alphabetic characters to lowercase, taking into account the host environment's current locale.",name:"toLocaleLowerCase",required:!0,type:{name:"(locales?: string | string[]) => string"}},toUpperCase:{defaultValue:null,description:"Converts all the alphabetic characters in a string to uppercase.",name:"toUpperCase",required:!0,type:{name:"() => string"}},toLocaleUpperCase:{defaultValue:null,description:"Returns a string where all alphabetic characters have been converted to uppercase, taking into account the host environment's current locale.",name:"toLocaleUpperCase",required:!0,type:{name:"(locales?: string | string[]) => string"}},trim:{defaultValue:null,description:"Removes the leading and trailing white space and line terminator characters from a string.",name:"trim",required:!0,type:{name:"() => string"}},length:{defaultValue:null,description:"Returns the length of a String object.",name:"length",required:!0,type:{name:"number"}},substr:{defaultValue:null,description:"Gets a substring beginning at the specified location and having the specified length.\n@deprecated A legacy feature for browser compatibility\n@param from The starting position of the desired substring. The index of the first character in the string is zero.\n@param length The number of characters to include in the returned substring.",name:"substr",required:!0,type:{name:"(from: number, length?: number) => string"}},valueOf:{defaultValue:null,description:"Returns the primitive value of the specified object.",name:"valueOf",required:!1,type:{name:"() => string"}},codePointAt:{defaultValue:null,description:"Returns a nonnegative integer Number less than 1114112 (0x110000) that is the code point\nvalue of the UTF-16 encoded code point starting at the string element at position pos in\nthe String resulting from converting this object to a String.\nIf there is no element at that position, the result is undefined.\nIf a valid UTF-16 surrogate pair does not begin at pos, the result is the code unit at pos.",name:"codePointAt",required:!0,type:{name:"(pos: number) => number"}},includes:{defaultValue:null,description:"Returns true if searchString appears as a substring of the result of converting this\nobject to a String, at one or more positions that are\ngreater than or equal to position; otherwise, returns false.\n@param searchString search string\n@param position If position is undefined, 0 is assumed, so as to search all of the String.",name:"includes",required:!0,type:{name:"(searchString: string, position?: number) => boolean"}},endsWith:{defaultValue:null,description:"Returns true if the sequence of elements of searchString converted to a String is the\nsame as the corresponding elements of this object (converted to a String) starting at\nendPosition – length(this). Otherwise returns false.",name:"endsWith",required:!0,type:{name:"(searchString: string, endPosition?: number) => boolean"}},normalize:{defaultValue:null,description:'Returns the String value result of normalizing the string into the normalization form\nnamed by form as specified in Unicode Standard Annex #15, Unicode Normalization Forms.\n@param form Applicable values: "NFC", "NFD", "NFKC", or "NFKD", If not specified default\nis "NFC"\n@param form Applicable values: "NFC", "NFD", "NFKC", or "NFKD", If not specified default\nis "NFC"',name:"normalize",required:!0,type:{name:'{ (form: "NFC" | "NFD" | "NFKC" | "NFKD"): string; (form?: string): string; }'}},repeat:{defaultValue:null,description:"Returns a String value that is made from count copies appended together. If count is 0,\nthe empty string is returned.\n@param count number of copies to append",name:"repeat",required:!0,type:{name:"(count: number) => string"}},startsWith:{defaultValue:null,description:"Returns true if the sequence of elements of searchString converted to a String is the\nsame as the corresponding elements of this object (converted to a String) starting at\nposition. Otherwise returns false.",name:"startsWith",required:!0,type:{name:"(searchString: string, position?: number) => boolean"}},anchor:{defaultValue:null,description:"Returns an `<a>` HTML anchor element and sets the name attribute to the text value\n@deprecated A legacy feature for browser compatibility\n@param name",name:"anchor",required:!0,type:{name:"(name: string) => string"}},big:{defaultValue:null,description:"Returns a `<big>` HTML element\n@deprecated A legacy feature for browser compatibility",name:"big",required:!0,type:{name:"() => string"}},blink:{defaultValue:null,description:"Returns a `<blink>` HTML element\n@deprecated A legacy feature for browser compatibility",name:"blink",required:!0,type:{name:"() => string"}},bold:{defaultValue:null,description:"Returns a `<b>` HTML element\n@deprecated A legacy feature for browser compatibility",name:"bold",required:!0,type:{name:"() => string"}},fixed:{defaultValue:null,description:"Returns a `<tt>` HTML element\n@deprecated A legacy feature for browser compatibility",name:"fixed",required:!0,type:{name:"() => string"}},italics:{defaultValue:null,description:"Returns an `<i>` HTML element\n@deprecated A legacy feature for browser compatibility",name:"italics",required:!0,type:{name:"() => string"}},link:{defaultValue:null,description:"Returns an `<a>` HTML element and sets the href attribute value\n@deprecated A legacy feature for browser compatibility",name:"link",required:!0,type:{name:"(url: string) => string"}},small:{defaultValue:null,description:"Returns a `<small>` HTML element\n@deprecated A legacy feature for browser compatibility",name:"small",required:!0,type:{name:"() => string"}},strike:{defaultValue:null,description:"Returns a `<strike>` HTML element\n@deprecated A legacy feature for browser compatibility",name:"strike",required:!0,type:{name:"() => string"}},sub:{defaultValue:null,description:"Returns a `<sub>` HTML element\n@deprecated A legacy feature for browser compatibility",name:"sub",required:!0,type:{name:"() => string"}},sup:{defaultValue:null,description:"Returns a `<sup>` HTML element\n@deprecated A legacy feature for browser compatibility",name:"sup",required:!0,type:{name:"() => string"}},padStart:{defaultValue:null,description:'Pads the current string with a given string (possibly repeated) so that the resulting string reaches a given length.\nThe padding is applied from the start (left) of the current string.\n@param maxLength The length of the resulting string once the current string has been padded.\nIf this parameter is smaller than the current string\'s length, the current string will be returned as it is.\n@param fillString The string to pad the current string with.\nIf this string is too long, it will be truncated and the left-most part will be applied.\nThe default value for this parameter is " " (U+0020).',name:"padStart",required:!0,type:{name:"(maxLength: number, fillString?: string) => string"}},padEnd:{defaultValue:null,description:'Pads the current string with a given string (possibly repeated) so that the resulting string reaches a given length.\nThe padding is applied from the end (right) of the current string.\n@param maxLength The length of the resulting string once the current string has been padded.\nIf this parameter is smaller than the current string\'s length, the current string will be returned as it is.\n@param fillString The string to pad the current string with.\nIf this string is too long, it will be truncated and the left-most part will be applied.\nThe default value for this parameter is " " (U+0020).',name:"padEnd",required:!0,type:{name:"(maxLength: number, fillString?: string) => string"}},trimEnd:{defaultValue:null,description:"Removes the trailing white space and line terminator characters from a string.",name:"trimEnd",required:!0,type:{name:"() => string"}},trimStart:{defaultValue:null,description:"Removes the leading white space and line terminator characters from a string.",name:"trimStart",required:!0,type:{name:"() => string"}},trimLeft:{defaultValue:null,description:"Removes the leading white space and line terminator characters from a string.\n@deprecated A legacy feature for browser compatibility. Use `trimStart` instead",name:"trimLeft",required:!0,type:{name:"() => string"}},trimRight:{defaultValue:null,description:"Removes the trailing white space and line terminator characters from a string.\n@deprecated A legacy feature for browser compatibility. Use `trimEnd` instead",name:"trimRight",required:!0,type:{name:"() => string"}},matchAll:{defaultValue:null,description:"Matches a string with a regular expression, and returns an iterable of matches\ncontaining the results of that search.\n@param regexp A variable name or string literal containing the regular expression pattern and flags.",name:"matchAll",required:!0,type:{name:"(regexp: RegExp) => IterableIterator<RegExpMatchArray>"}},replaceAll:{defaultValue:null,description:"Replace all instances of a substring in a string, using a regular expression or search string.\n@param searchValue A string to search for.\n@param replaceValue A string containing the text to replace for every successful match of searchValue in this string.\n@param searchValue A string to search for.\n@param replacer A function that returns the replacement text.",name:"replaceAll",required:!0,type:{name:"{ (searchValue: string | RegExp, replaceValue: string): string; (searchValue: string | RegExp, replacer: (substring: string, ...args: any[]) => string): string; }"}},at:{defaultValue:null,description:"Returns a new String consisting of the single UTF-16 code unit located at the specified index.\n@param index The zero-based index of the desired code unit. A negative index will count back from the last item.",name:"at",required:!0,type:{name:"(index: number) => string"}},"__@iterator@84":{defaultValue:null,description:"Iterator",name:"__@iterator@84",required:!0,type:{name:"() => IterableIterator<string>"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["../components/src/Skeleton/Skeleton.tsx#getSkeletonUtilityClass"]={docgenInfo:getSkeletonUtilityClass.__docgenInfo,name:"getSkeletonUtilityClass",path:"../components/src/Skeleton/Skeleton.tsx#getSkeletonUtilityClass"})}catch(__react_docgen_typescript_loader_error){}},"./src/helpers/storybook.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{yg:()=>story});var light=__webpack_require__("../themes/src/meteor/theme/light.ts");const isNonEmptyString=x=>(x=>"string"==typeof x)(x)&&x.length>0;let A11yElement=function(A11yElement){return A11yElement.Root="#root",A11yElement.Component="#root > *",A11yElement.Modal=".MuiDialog-root",A11yElement.Popover=".MuiPopover-root",A11yElement.Drawer=".MuiDrawer-root",A11yElement}({});A11yElement.Root,A11yElement.Component;function story(Template,{args,argTypes,parameters,storyName,muiName}={}){let themeProps={};muiName&&(themeProps=light.D4.components?.[muiName]?.defaultProps);const NewStory=Template.bind({});return NewStory.args={...themeProps,...Template.args,...args},NewStory.argTypes={...Template.argTypes,...argTypes},NewStory.parameters={...Template.parameters,...parameters},isNonEmptyString(storyName)&&(NewStory.storyName=storyName),NewStory}}}]);
//# sourceMappingURL=SwipeableDrawer-SwipeableDrawer-stories.04cd821e.iframe.bundle.js.map