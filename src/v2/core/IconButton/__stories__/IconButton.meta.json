{
  "!!!!! DO NOT EDIT THIS FILE !!!!!!": {
    "REGENERATE THIS WITH ONE OF THE FOLLOWING": [
      "yarn docgen ./packages/monorail/src/v2/core/IconButton/IconButton.tsx",
      "yarn docgen:all"
    ]
  },
  "parameters": {
    "docs": {
      "description": {
        "component": "IconButton is a Button with an Icon!\n\n- [IconButton | Material-UI](https://material-ui.com/components/buttons/#icon-buttons)\n- [IconButton | Monorail Figma](https://www.figma.com/file/dKL9YeHgWyxmRHuIjs38f3O9/Monorail-Components?node-id=16735%3A801)"
      }
    }
  },
  "argTypes": {
    "action": {
      "defaultValue": null,
      "description": "",
      "name": "action",
      "required": false,
      "type": {
        "name": "((instance: ButtonBaseActions | null) => void) | RefObject<ButtonBaseActions> | null",
        "required": false
      },
      "table": {
        "type": {
          "summary": "((instance: ButtonBaseActions | null) => void) | RefObject<ButtonBaseActions> | null"
        }
      },
      "control": { "type": null }
    },
    "aria-label": {
      "defaultValue": null,
      "description": "label is required, but allow for explicit opt-out if necessary. If this prop requirement falls down, we should\nlook into custom eslint rules instead\nDefines a string value that labels the current element.\n@see aria-labelledby.",
      "name": "aria-label",
      "required": false,
      "type": { "name": "string", "required": false },
      "table": { "type": { "summary": "string" } },
      "control": { "type": "text" }
    },
    "buttonRef": {
      "defaultValue": null,
      "description": "Prefer `ref` instead.",
      "name": "buttonRef",
      "required": false,
      "type": {
        "name": "((instance: unknown) => void) | RefObject<unknown> | null",
        "required": false
      },
      "table": {
        "type": {
          "summary": "((instance: unknown) => void) | RefObject<unknown> | null"
        }
      },
      "control": { "type": null }
    },
    "disabled": {
      "defaultValue": null,
      "description": "",
      "name": "disabled",
      "required": false,
      "type": { "name": "boolean", "required": false },
      "table": { "type": { "summary": "boolean" } },
      "control": { "type": "boolean" }
    },
    "display": {
      "defaultValue": null,
      "description": "",
      "name": "display",
      "required": false,
      "type": {
        "name": "\"primary\" | \"outline\" | \"chromeless\" | \"chromelessContrast\" | \"chromelessAction\"",
        "required": false
      },
      "table": {
        "type": {
          "summary": "\"primary\" | \"outline\" | \"chromeless\" | \"chromelessContrast\" | \"chromelessAction\""
        }
      },
      "control": {
        "type": "select",
        "options": [
          "primary",
          "outline",
          "chromeless",
          "chromelessContrast",
          "chromelessAction"
        ]
      }
    },
    "edge": {
      "defaultValue": null,
      "description": "If given, uses a negative margin to counteract the padding on one\nside (this is often helpful for aligning the left or right\nside of the icon with content above or below, without ruining the border\nsize and shape).",
      "name": "edge",
      "required": false,
      "type": { "name": "false | \"start\" | \"end\"", "required": false },
      "table": { "type": { "summary": "false | \"start\" | \"end\"" } },
      "control": { "type": "radio", "options": ["false", "start", "end"] }
    },
    "focusVisibleClassName": {
      "defaultValue": null,
      "description": "",
      "name": "focusVisibleClassName",
      "required": false,
      "type": { "name": "string", "required": false },
      "table": { "type": { "summary": "string" } },
      "control": { "type": "text" }
    },
    "onFocusVisible": {
      "defaultValue": null,
      "description": "",
      "name": "onFocusVisible",
      "required": false,
      "type": {
        "name": "((event: FocusEvent<any>) => void)",
        "required": false
      },
      "table": { "type": { "summary": "((event: FocusEvent<any>) => void)" } },
      "control": { "type": null }
    },
    "ref": {
      "defaultValue": null,
      "description": "",
      "name": "ref",
      "required": false,
      "type": {
        "name": "((instance: HTMLButtonElement | null) => void) | RefObject<HTMLButtonElement> | null",
        "required": false
      },
      "table": {
        "type": {
          "summary": "((instance: HTMLButtonElement | null) => void) | RefObject<HTMLButtonElement> | null"
        }
      },
      "control": { "type": null }
    },
    "shape": {
      "defaultValue": null,
      "description": "",
      "name": "shape",
      "required": false,
      "type": { "name": "\"circle\" | \"square\"", "required": false },
      "table": { "type": { "summary": "\"circle\" | \"square\"" } },
      "control": { "type": "radio", "options": ["circle", "square"] }
    },
    "size": {
      "defaultValue": null,
      "description": "",
      "name": "size",
      "required": false,
      "type": {
        "name": "\"default\" | \"dense\" | \"compact\" | \"large\"",
        "required": false
      },
      "table": {
        "type": {
          "summary": "\"default\" | \"dense\" | \"compact\" | \"large\""
        }
      },
      "control": {
        "type": "radio",
        "options": ["default", "dense", "compact", "large"]
      }
    }
  }
}
