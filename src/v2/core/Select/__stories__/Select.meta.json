{
  "!!!!! DO NOT EDIT THIS FILE !!!!!!": {
    "REGENERATE THIS WITH ONE OF THE FOLLOWING": [
      "yarn docgen ./packages/monorail/src/v2/core/Select/Select.tsx",
      "yarn docgen:all"
    ]
  },
  "parameters": {
    "docs": {
      "description": {
        "component": "Select components are used for collecting user provided information from a list of options.\n\n- [Select | Material-UI](https://material-ui.com/components/selects/)\n- [Select | Monorail Figma](https://www.figma.com/file/dKL9YeHgWyxmRHuIjs38f3O9/Monorail-Components?node-id=21759%3A20652)\n\nNote: This component is a BETA because\n\n- It doesn't auto-detect `position`\n- Object values require a bit of work"
      }
    }
  },
  "argTypes": {
    "popoverPosition": {
      "defaultValue": null,
      "description": "",
      "name": "popoverPosition",
      "required": true,
      "type": {
        "name": "enum",
        "raw": "PositionValue",
        "value": [{ "value": "\"above\"" }, { "value": "\"below\"" }],
        "required": true
      },
      "table": { "type": { "summary": "\"above\" | \"below\"" } },
      "control": { "type": "radio", "options": ["above", "below"] }
    },
    "aria-describedby": {
      "defaultValue": null,
      "description": "Identifies the element (or elements) that describes the object.",
      "name": "aria-describedby",
      "parent": {
        "fileName": "client/node_modules/@material-ui/core/InputBase/InputBase.d.ts",
        "name": "InputBaseProps"
      },
      "required": false,
      "type": { "name": "string", "required": false },
      "table": { "type": { "summary": "string" } },
      "control": { "type": "text" }
    },
    "autoComplete": {
      "defaultValue": null,
      "description": "This prop helps users to fill forms faster, especially on mobile devices.\nThe name can be confusing, as it's more like an autofill.\nYou can learn more about it [following the specification](https://html.spec.whatwg.org/multipage/form-control-infrastructure.html#autofill).",
      "name": "autoComplete",
      "parent": {
        "fileName": "client/node_modules/@material-ui/core/InputBase/InputBase.d.ts",
        "name": "InputBaseProps"
      },
      "required": false,
      "type": { "name": "string", "required": false },
      "table": { "type": { "summary": "string" } },
      "control": { "type": "text" }
    },
    "autoFocus": {
      "defaultValue": null,
      "description": "If `true`, the `input` element will be focused during the first mount.",
      "name": "autoFocus",
      "parent": {
        "fileName": "client/node_modules/@material-ui/core/InputBase/InputBase.d.ts",
        "name": "InputBaseProps"
      },
      "required": false,
      "type": { "name": "boolean", "required": false },
      "table": { "type": { "summary": "boolean" } },
      "control": { "type": "boolean" }
    },
    "autoWidth": {
      "defaultValue": null,
      "description": "If `true`, the width of the popover will automatically be set according to the items inside the\nmenu, otherwise it will be at least the width of the select input.",
      "name": "autoWidth",
      "parent": {
        "fileName": "client/node_modules/@material-ui/core/Select/Select.d.ts",
        "name": "SelectProps"
      },
      "required": false,
      "type": { "name": "boolean", "required": false },
      "table": { "type": { "summary": "boolean" } },
      "control": { "type": "boolean" }
    },
    "children": {
      "defaultValue": null,
      "description": "The option elements to populate the select with.\nCan be some `MenuItem` when `native` is false and `option` when `native` is true.\n\n⚠️The `MenuItem` elements **must** be direct descendants when `native` is false.",
      "name": "children",
      "parent": {
        "fileName": "client/node_modules/@material-ui/core/Select/Select.d.ts",
        "name": "SelectProps"
      },
      "required": false,
      "type": { "name": "ReactNode", "required": false },
      "table": { "type": { "summary": "ReactNode" } },
      "control": { "type": "object" }
    },
    "defaultValue": {
      "defaultValue": null,
      "description": "",
      "name": "defaultValue",
      "required": false,
      "type": { "name": "T", "required": false },
      "table": { "type": { "summary": "T" } },
      "control": { "type": "T" }
    },
    "disabled": {
      "defaultValue": null,
      "description": "If `true`, the `input` element will be disabled.",
      "name": "disabled",
      "parent": {
        "fileName": "client/node_modules/@material-ui/core/InputBase/InputBase.d.ts",
        "name": "InputBaseProps"
      },
      "required": false,
      "type": { "name": "boolean", "required": false },
      "table": { "type": { "summary": "boolean" } },
      "control": { "type": "boolean" }
    },
    "disableUnderline": {
      "defaultValue": null,
      "description": "If `true`, the input will not have an underline.",
      "name": "disableUnderline",
      "parent": {
        "fileName": "client/node_modules/@material-ui/core/Input/Input.d.ts",
        "name": "InputProps"
      },
      "required": false,
      "type": { "name": "boolean", "required": false },
      "table": { "type": { "summary": "boolean" } },
      "control": { "type": "boolean" }
    },
    "displayEmpty": {
      "defaultValue": null,
      "description": "If `true`, a value is displayed even if no items are selected.\n\nIn order to display a meaningful value, a function should be passed to the `renderValue` prop which returns the value to be displayed when no items are selected.\nYou can only use it when the `native` prop is `false` (default).",
      "name": "displayEmpty",
      "parent": {
        "fileName": "client/node_modules/@material-ui/core/Select/Select.d.ts",
        "name": "SelectProps"
      },
      "required": false,
      "type": { "name": "boolean", "required": false },
      "table": { "type": { "summary": "boolean" } },
      "control": { "type": "boolean" }
    },
    "endAdornment": {
      "defaultValue": null,
      "description": "End `InputAdornment` for this component.",
      "name": "endAdornment",
      "parent": {
        "fileName": "client/node_modules/@material-ui/core/InputBase/InputBase.d.ts",
        "name": "InputBaseProps"
      },
      "required": false,
      "type": { "name": "ReactNode", "required": false },
      "table": { "type": { "summary": "ReactNode" } },
      "control": { "type": "object" }
    },
    "error": {
      "defaultValue": null,
      "description": "If `true`, the input will indicate an error. This is normally obtained via context from\nFormControl.",
      "name": "error",
      "parent": {
        "fileName": "client/node_modules/@material-ui/core/InputBase/InputBase.d.ts",
        "name": "InputBaseProps"
      },
      "required": false,
      "type": { "name": "boolean", "required": false },
      "table": { "type": { "summary": "boolean" } },
      "control": { "type": "boolean" }
    },
    "fullWidth": {
      "defaultValue": null,
      "description": "If `true`, the input will take up the full width of its container.",
      "name": "fullWidth",
      "parent": {
        "fileName": "client/node_modules/@material-ui/core/InputBase/InputBase.d.ts",
        "name": "InputBaseProps"
      },
      "required": false,
      "type": { "name": "boolean", "required": false },
      "table": { "type": { "summary": "boolean" } },
      "control": { "type": "boolean" }
    },
    "IconComponent": {
      "defaultValue": null,
      "description": "The icon that displays the arrow.",
      "name": "IconComponent",
      "parent": {
        "fileName": "client/node_modules/@material-ui/core/Select/Select.d.ts",
        "name": "SelectProps"
      },
      "required": false,
      "type": {
        "name": "\"symbol\" | \"object\" | \"select\" | \"input\" | \"style\" | \"title\" | \"label\" | \"text\" | \"time\" | \"link\" | \"menu\" | \"dialog\" | \"a\" | \"abbr\" | \"address\" | \"area\" | \"article\" | \"aside\" | \"audio\" | ... 157 more ...",
        "required": false
      },
      "table": {
        "type": {
          "summary": "\"symbol\" | \"object\" | \"select\" | \"input\" | \"style\" | \"title\" | \"label\" | \"text\" | \"time\" | \"link\" | \"menu\" | \"dialog\" | \"a\" | \"abbr\" | \"address\" | \"area\" | \"article\" | \"aside\" | \"audio\" | ... 157 more ..."
        }
      },
      "control": {
        "type": "select",
        "options": [
          "symbol",
          "object",
          "select",
          "input",
          "style",
          "title",
          "label",
          "text",
          "time",
          "link",
          "menu",
          "dialog",
          "a",
          "abbr",
          "address",
          "area",
          "article",
          "aside",
          "audio",
          "... 157 more ..."
        ]
      }
    },
    "id": {
      "defaultValue": null,
      "description": "The `id` of the wrapper element or the `select` element when `native`.",
      "name": "id",
      "parent": {
        "fileName": "client/node_modules/@material-ui/core/Select/Select.d.ts",
        "name": "SelectProps"
      },
      "required": false,
      "type": { "name": "string", "required": false },
      "table": { "type": { "summary": "string" } },
      "control": { "type": "text" }
    },
    "input": {
      "defaultValue": null,
      "description": "An `Input` element; does not have to be a material-ui specific `Input`.",
      "name": "input",
      "parent": {
        "fileName": "client/node_modules/@material-ui/core/Select/Select.d.ts",
        "name": "SelectProps"
      },
      "required": false,
      "type": { "name": "ReactElement<any, any>", "required": false },
      "table": { "type": { "summary": "ReactElement<any, any>" } },
      "control": { "type": null }
    },
    "inputComponent": {
      "defaultValue": null,
      "description": "The component used for the `input` element.\nEither a string to use a HTML element or a component.",
      "name": "inputComponent",
      "parent": {
        "fileName": "client/node_modules/@material-ui/core/InputBase/InputBase.d.ts",
        "name": "InputBaseProps"
      },
      "required": false,
      "type": {
        "name": "\"input\" | \"time\" | \"menu\" | \"abbr\" | \"address\" | \"article\" | \"aside\" | \"b\" | \"bdi\" | \"bdo\" | \"big\" | \"blockquote\" | \"caption\" | \"cite\" | \"code\" | \"data\" | \"dd\" | \"del\" | \"details\" | ... 40 more ...",
        "required": false
      },
      "table": {
        "type": {
          "summary": "\"input\" | \"time\" | \"menu\" | \"abbr\" | \"address\" | \"article\" | \"aside\" | \"b\" | \"bdi\" | \"bdo\" | \"big\" | \"blockquote\" | \"caption\" | \"cite\" | \"code\" | \"data\" | \"dd\" | \"del\" | \"details\" | ... 40 more ..."
        }
      },
      "control": {
        "type": "select",
        "options": [
          "input",
          "time",
          "menu",
          "abbr",
          "address",
          "article",
          "aside",
          "b",
          "bdi",
          "bdo",
          "big",
          "blockquote",
          "caption",
          "cite",
          "code",
          "data",
          "dd",
          "del",
          "details",
          "... 40 more ..."
        ]
      }
    },
    "inputProps": {
      "defaultValue": null,
      "description": "[Attributes](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Attributes) applied to the `input` element.\nWhen `native` is `true`, the attributes are applied on the `select` element.",
      "name": "inputProps",
      "parent": {
        "fileName": "client/node_modules/@material-ui/core/Select/Select.d.ts",
        "name": "SelectProps"
      },
      "required": false,
      "type": { "name": "InputBaseComponentProps", "required": false },
      "table": { "type": { "summary": "InputBaseComponentProps" } },
      "control": { "type": "object" }
    },
    "inputRef": {
      "defaultValue": null,
      "description": "Pass a ref to the `input` element.",
      "name": "inputRef",
      "parent": {
        "fileName": "client/node_modules/@material-ui/core/InputBase/InputBase.d.ts",
        "name": "InputBaseProps"
      },
      "required": false,
      "type": {
        "name": "((instance: any) => void) | RefObject<any> | null",
        "required": false
      },
      "table": {
        "type": {
          "summary": "((instance: any) => void) | RefObject<any> | null"
        }
      },
      "control": { "type": null }
    },
    "label": {
      "defaultValue": null,
      "description": "See [OutlinedInput#label](/api/outlined-input/#props)",
      "name": "label",
      "parent": {
        "fileName": "client/node_modules/@material-ui/core/Select/Select.d.ts",
        "name": "SelectProps"
      },
      "required": false,
      "type": { "name": "ReactNode", "required": false },
      "table": { "type": { "summary": "ReactNode" } },
      "control": { "type": "object" }
    },
    "labelId": {
      "defaultValue": null,
      "description": "The ID of an element that acts as an additional label. The Select will\nbe labelled by the additional label and the selected value.",
      "name": "labelId",
      "parent": {
        "fileName": "client/node_modules/@material-ui/core/Select/Select.d.ts",
        "name": "SelectProps"
      },
      "required": false,
      "type": { "name": "string", "required": false },
      "table": { "type": { "summary": "string" } },
      "control": { "type": "text" }
    },
    "labelWidth": {
      "defaultValue": null,
      "description": "See [OutlinedInput#label](/api/outlined-input/#props)",
      "name": "labelWidth",
      "parent": {
        "fileName": "client/node_modules/@material-ui/core/Select/Select.d.ts",
        "name": "SelectProps"
      },
      "required": false,
      "type": { "name": "number", "required": false },
      "table": { "type": { "summary": "number" } },
      "control": { "type": "number" }
    },
    "margin": {
      "defaultValue": null,
      "description": "If `dense`, will adjust vertical spacing. This is normally obtained via context from\nFormControl.",
      "name": "margin",
      "parent": {
        "fileName": "client/node_modules/@material-ui/core/InputBase/InputBase.d.ts",
        "name": "InputBaseProps"
      },
      "required": false,
      "type": { "name": "\"none\" | \"dense\"", "required": false },
      "table": { "type": { "summary": "\"none\" | \"dense\"" } },
      "control": { "type": "radio", "options": ["none", "dense"] }
    },
    "MenuProps": {
      "defaultValue": null,
      "description": "Props applied to the [`Menu`](/api/menu/) element.",
      "name": "MenuProps",
      "parent": {
        "fileName": "client/node_modules/@material-ui/core/Select/Select.d.ts",
        "name": "SelectProps"
      },
      "required": false,
      "type": { "name": "Partial<MenuProps>", "required": false },
      "table": { "type": { "summary": "Partial<MenuProps>" } },
      "control": { "type": null }
    },
    "multiline": {
      "defaultValue": null,
      "description": "If `true`, a textarea element will be rendered.",
      "name": "multiline",
      "parent": {
        "fileName": "client/node_modules/@material-ui/core/InputBase/InputBase.d.ts",
        "name": "InputBaseProps"
      },
      "required": false,
      "type": { "name": "boolean", "required": false },
      "table": { "type": { "summary": "boolean" } },
      "control": { "type": "boolean" }
    },
    "multiple": {
      "defaultValue": null,
      "description": "If `true`, `value` must be an array and the menu will support multiple selections.",
      "name": "multiple",
      "parent": {
        "fileName": "client/node_modules/@material-ui/core/Select/Select.d.ts",
        "name": "SelectProps"
      },
      "required": false,
      "type": { "name": "boolean", "required": false },
      "table": { "type": { "summary": "boolean" } },
      "control": { "type": "boolean" }
    },
    "name": {
      "defaultValue": null,
      "description": "Name attribute of the `input` element.",
      "name": "name",
      "parent": {
        "fileName": "client/node_modules/@material-ui/core/InputBase/InputBase.d.ts",
        "name": "InputBaseProps"
      },
      "required": false,
      "type": { "name": "string", "required": false },
      "table": { "type": { "summary": "string" } },
      "control": { "type": "text" }
    },
    "native": {
      "defaultValue": null,
      "description": "If `true`, the component will be using a native `select` element.",
      "name": "native",
      "parent": {
        "fileName": "client/node_modules/@material-ui/core/Select/Select.d.ts",
        "name": "SelectProps"
      },
      "required": false,
      "type": { "name": "boolean", "required": false },
      "table": { "type": { "summary": "boolean" } },
      "control": { "type": "boolean" }
    },
    "onBlur": {
      "defaultValue": null,
      "description": "Callback fired when the input is blurred.\n\nNotice that the first argument (event) might be undefined.",
      "name": "onBlur",
      "parent": {
        "fileName": "client/node_modules/@material-ui/core/InputBase/InputBase.d.ts",
        "name": "InputBaseProps"
      },
      "required": false,
      "type": {
        "name": "((event: FocusEvent<HTMLTextAreaElement | HTMLInputElement>) => void)",
        "required": false
      },
      "table": {
        "type": {
          "summary": "((event: FocusEvent<HTMLTextAreaElement | HTMLInputElement>) => void)"
        }
      },
      "control": { "type": null }
    },
    "onChange": {
      "defaultValue": null,
      "description": "Note: `event.value` comes from child `MenuItem`'s `data-value` attribute, which is always a string",
      "name": "onChange",
      "required": false,
      "type": {
        "name": "((event: ChangeEvent<{ name?: string; value: string; }>, child: ReactNode) => void) | undefined",
        "required": false
      },
      "table": {
        "type": {
          "summary": "((event: ChangeEvent<{ name?: string; value: string; }>, child: ReactNode) => void) | undefined"
        }
      },
      "control": { "type": null }
    },
    "onClose": {
      "defaultValue": null,
      "description": "Callback fired when the component requests to be closed.\nUse in controlled mode (see open).\n@param event The event source of the callback.",
      "name": "onClose",
      "parent": {
        "fileName": "client/node_modules/@material-ui/core/Select/Select.d.ts",
        "name": "SelectProps"
      },
      "required": false,
      "type": {
        "name": "((event: ChangeEvent<{}>) => void)",
        "required": false
      },
      "table": { "type": { "summary": "((event: ChangeEvent<{}>) => void)" } },
      "control": { "type": null }
    },
    "onFocus": {
      "defaultValue": null,
      "description": "",
      "name": "onFocus",
      "parent": {
        "fileName": "client/node_modules/@material-ui/core/InputBase/InputBase.d.ts",
        "name": "InputBaseProps"
      },
      "required": false,
      "type": {
        "name": "((event: FocusEvent<HTMLTextAreaElement | HTMLInputElement>) => void)",
        "required": false
      },
      "table": {
        "type": {
          "summary": "((event: FocusEvent<HTMLTextAreaElement | HTMLInputElement>) => void)"
        }
      },
      "control": { "type": null }
    },
    "onKeyDown": {
      "defaultValue": null,
      "description": "",
      "name": "onKeyDown",
      "parent": {
        "fileName": "client/node_modules/@material-ui/core/InputBase/InputBase.d.ts",
        "name": "InputBaseProps"
      },
      "required": false,
      "type": {
        "name": "((event: KeyboardEvent<HTMLTextAreaElement | HTMLInputElement>) => void)",
        "required": false
      },
      "table": {
        "type": {
          "summary": "((event: KeyboardEvent<HTMLTextAreaElement | HTMLInputElement>) => void)"
        }
      },
      "control": { "type": null }
    },
    "onKeyUp": {
      "defaultValue": null,
      "description": "",
      "name": "onKeyUp",
      "parent": {
        "fileName": "client/node_modules/@material-ui/core/InputBase/InputBase.d.ts",
        "name": "InputBaseProps"
      },
      "required": false,
      "type": {
        "name": "((event: KeyboardEvent<HTMLTextAreaElement | HTMLInputElement>) => void)",
        "required": false
      },
      "table": {
        "type": {
          "summary": "((event: KeyboardEvent<HTMLTextAreaElement | HTMLInputElement>) => void)"
        }
      },
      "control": { "type": null }
    },
    "onOpen": {
      "defaultValue": null,
      "description": "Callback fired when the component requests to be opened.\nUse in controlled mode (see open).\n@param event The event source of the callback.",
      "name": "onOpen",
      "parent": {
        "fileName": "client/node_modules/@material-ui/core/Select/Select.d.ts",
        "name": "SelectProps"
      },
      "required": false,
      "type": {
        "name": "((event: ChangeEvent<{}>) => void)",
        "required": false
      },
      "table": { "type": { "summary": "((event: ChangeEvent<{}>) => void)" } },
      "control": { "type": null }
    },
    "open": {
      "defaultValue": null,
      "description": "Control `select` open state.\nYou can only use it when the `native` prop is `false` (default).",
      "name": "open",
      "parent": {
        "fileName": "client/node_modules/@material-ui/core/Select/Select.d.ts",
        "name": "SelectProps"
      },
      "required": false,
      "type": { "name": "boolean", "required": false },
      "table": { "type": { "summary": "boolean" } },
      "control": { "type": "boolean" }
    },
    "readOnly": {
      "defaultValue": null,
      "description": "It prevents the user from changing the value of the field\n(not from interacting with the field).",
      "name": "readOnly",
      "parent": {
        "fileName": "client/node_modules/@material-ui/core/InputBase/InputBase.d.ts",
        "name": "InputBaseProps"
      },
      "required": false,
      "type": { "name": "boolean", "required": false },
      "table": { "type": { "summary": "boolean" } },
      "control": { "type": "boolean" }
    },
    "ref": {
      "defaultValue": null,
      "description": "",
      "name": "ref",
      "required": false,
      "type": {
        "name": "((instance: unknown) => void) | RefObject<unknown> | null",
        "required": false
      },
      "table": {
        "type": {
          "summary": "((instance: unknown) => void) | RefObject<unknown> | null"
        }
      },
      "control": { "type": null }
    },
    "renderSuffix": {
      "defaultValue": null,
      "description": "",
      "name": "renderSuffix",
      "parent": {
        "fileName": "client/node_modules/@material-ui/core/InputBase/InputBase.d.ts",
        "name": "InputBaseProps"
      },
      "required": false,
      "type": {
        "name": "((state: { disabled?: boolean; error?: boolean | undefined; filled?: boolean | undefined; focused?: boolean | undefined; margin?: \"none\" | \"dense\" | \"normal\" | undefined; required?: boolean | undefined; startAdornment?: ReactNode; }) => ReactNode) | undefined",
        "required": false
      },
      "table": {
        "type": {
          "summary": "((state: { disabled?: boolean; error?: boolean | undefined; filled?: boolean | undefined; focused?: boolean | undefined; margin?: \"none\" | \"dense\" | \"normal\" | undefined; required?: boolean | undefined; startAdornment?: ReactNode; }) => ReactNode) | undefined"
        }
      },
      "control": { "type": null }
    },
    "renderValue": {
      "defaultValue": null,
      "description": "",
      "name": "renderValue",
      "required": false,
      "type": { "name": "((value: T) => ReactNode)", "required": false },
      "table": { "type": { "summary": "((value: T) => ReactNode)" } },
      "control": { "type": null }
    },
    "required": {
      "defaultValue": null,
      "description": "If `true`, the `input` element will be required.",
      "name": "required",
      "parent": {
        "fileName": "client/node_modules/@material-ui/core/InputBase/InputBase.d.ts",
        "name": "InputBaseProps"
      },
      "required": false,
      "type": { "name": "boolean", "required": false },
      "table": { "type": { "summary": "boolean" } },
      "control": { "type": "boolean" }
    },
    "rows": {
      "defaultValue": null,
      "description": "Number of rows to display when multiline option is set to true.",
      "name": "rows",
      "parent": {
        "fileName": "client/node_modules/@material-ui/core/InputBase/InputBase.d.ts",
        "name": "InputBaseProps"
      },
      "required": false,
      "type": { "name": "string | number", "required": false },
      "table": { "type": { "summary": "string | number" } },
      "control": { "type": "radio", "options": ["string", "number"] }
    },
    "rowsMax": {
      "defaultValue": null,
      "description": "Maximum number of rows to display when multiline option is set to true.",
      "name": "rowsMax",
      "parent": {
        "fileName": "client/node_modules/@material-ui/core/InputBase/InputBase.d.ts",
        "name": "InputBaseProps"
      },
      "required": false,
      "type": { "name": "string | number", "required": false },
      "table": { "type": { "summary": "string | number" } },
      "control": { "type": "radio", "options": ["string", "number"] }
    },
    "rowsMin": {
      "defaultValue": null,
      "description": "Minimum number of rows to display when multiline option is set to true.",
      "name": "rowsMin",
      "parent": {
        "fileName": "client/node_modules/@material-ui/core/InputBase/InputBase.d.ts",
        "name": "InputBaseProps"
      },
      "required": false,
      "type": { "name": "string | number", "required": false },
      "table": { "type": { "summary": "string | number" } },
      "control": { "type": "radio", "options": ["string", "number"] }
    },
    "SelectDisplayProps": {
      "defaultValue": null,
      "description": "Props applied to the clickable div element.",
      "name": "SelectDisplayProps",
      "parent": {
        "fileName": "client/node_modules/@material-ui/core/Select/Select.d.ts",
        "name": "SelectProps"
      },
      "required": false,
      "type": { "name": "HTMLAttributes<HTMLDivElement>", "required": false },
      "table": { "type": { "summary": "HTMLAttributes<HTMLDivElement>" } },
      "control": { "type": null }
    },
    "startAdornment": {
      "defaultValue": null,
      "description": "Start `InputAdornment` for this component.",
      "name": "startAdornment",
      "parent": {
        "fileName": "client/node_modules/@material-ui/core/InputBase/InputBase.d.ts",
        "name": "InputBaseProps"
      },
      "required": false,
      "type": { "name": "ReactNode", "required": false },
      "table": { "type": { "summary": "ReactNode" } },
      "control": { "type": "object" }
    },
    "type": {
      "defaultValue": null,
      "description": "Type of the `input` element. It should be [a valid HTML5 input type](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Form_%3Cinput%3E_types).",
      "name": "type",
      "parent": {
        "fileName": "client/node_modules/@material-ui/core/InputBase/InputBase.d.ts",
        "name": "InputBaseProps"
      },
      "required": false,
      "type": { "name": "string", "required": false },
      "table": { "type": { "summary": "string" } },
      "control": { "type": "text" }
    },
    "value": {
      "defaultValue": null,
      "description": "",
      "name": "value",
      "required": false,
      "type": { "name": "T", "required": false },
      "table": { "type": { "summary": "T" } },
      "control": { "type": "T" }
    }
  }
}
