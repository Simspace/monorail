{
  "!!!!! DO NOT EDIT THIS FILE !!!!!!": {
    "REGENERATE THIS WITH ONE OF THE FOLLOWING": [
      "yarn docgen ./packages/monorail/src/v2/core/Modal/Modal.tsx",
      "yarn docgen:all"
    ]
  },
  "parameters": {
    "docs": {
      "description": {
        "component": "Modal dialog\n\n- [Dialog | Material-UI](https://material-ui.com/components/dialogs/#dialog)\n- [Modals | Monorail Figma](https://www.figma.com/file/dKL9YeHgWyxmRHuIjs38f3O9/Monorail-Components?node-id=2133%3A64)"
      }
    }
  },
  "argTypes": {
    "open": {
      "defaultValue": null,
      "description": "If `true`, the Dialog is open.",
      "name": "open",
      "parent": {
        "fileName": "client/node_modules/@material-ui/core/Dialog/Dialog.d.ts",
        "name": "DialogProps"
      },
      "required": true,
      "type": { "name": "boolean", "required": true },
      "table": { "type": { "summary": "boolean" } },
      "control": { "type": "boolean" }
    },
    "aria-describedby": {
      "defaultValue": null,
      "description": "The id(s) of the element(s) that describe the dialog.",
      "name": "aria-describedby",
      "parent": {
        "fileName": "client/node_modules/@material-ui/core/Dialog/Dialog.d.ts",
        "name": "DialogProps"
      },
      "required": false,
      "type": { "name": "string", "required": false },
      "table": { "type": { "summary": "string" } },
      "control": { "type": "text" }
    },
    "aria-labelledby": {
      "defaultValue": null,
      "description": "The id(s) of the element(s) that label the dialog.",
      "name": "aria-labelledby",
      "parent": {
        "fileName": "client/node_modules/@material-ui/core/Dialog/Dialog.d.ts",
        "name": "DialogProps"
      },
      "required": false,
      "type": { "name": "string", "required": false },
      "table": { "type": { "summary": "string" } },
      "control": { "type": "text" }
    },
    "BackdropComponent": {
      "defaultValue": null,
      "description": "",
      "name": "BackdropComponent",
      "parent": {
        "fileName": "client/node_modules/@material-ui/core/Modal/Modal.d.ts",
        "name": "ModalProps"
      },
      "required": false,
      "type": {
        "name": "ComponentClass<BackdropProps, any> | FunctionComponent<BackdropProps>",
        "required": false
      },
      "table": {
        "type": {
          "summary": "ComponentClass<BackdropProps, any> | FunctionComponent<BackdropProps>"
        }
      },
      "control": { "type": null }
    },
    "BackdropProps": {
      "defaultValue": null,
      "description": "",
      "name": "BackdropProps",
      "parent": {
        "fileName": "client/node_modules/@material-ui/core/Modal/Modal.d.ts",
        "name": "ModalProps"
      },
      "required": false,
      "type": { "name": "Partial<BackdropProps>", "required": false },
      "table": { "type": { "summary": "Partial<BackdropProps>" } },
      "control": { "type": null }
    },
    "children": {
      "defaultValue": null,
      "description": "Dialog children, usually the included sub-components.",
      "name": "children",
      "parent": {
        "fileName": "client/node_modules/@material-ui/core/Dialog/Dialog.d.ts",
        "name": "DialogProps"
      },
      "required": false,
      "type": { "name": "ReactNode", "required": false },
      "table": { "type": { "summary": "ReactNode" } },
      "control": { "type": "object" }
    },
    "closeAfterTransition": {
      "defaultValue": null,
      "description": "",
      "name": "closeAfterTransition",
      "parent": {
        "fileName": "client/node_modules/@material-ui/core/Modal/Modal.d.ts",
        "name": "ModalProps"
      },
      "required": false,
      "type": { "name": "boolean", "required": false },
      "table": { "type": { "summary": "boolean" } },
      "control": { "type": "boolean" }
    },
    "container": {
      "defaultValue": null,
      "description": "",
      "name": "container",
      "parent": {
        "fileName": "client/node_modules/@material-ui/core/Modal/Modal.d.ts",
        "name": "ModalProps"
      },
      "required": false,
      "type": {
        "name": "Element | Component<any, {}, any> | (() => Element | Component<any, {}, any> | null) | null",
        "required": false
      },
      "table": {
        "type": {
          "summary": "Element | Component<any, {}, any> | (() => Element | Component<any, {}, any> | null) | null"
        }
      },
      "control": { "type": null }
    },
    "disableAutoFocus": {
      "defaultValue": null,
      "description": "",
      "name": "disableAutoFocus",
      "parent": {
        "fileName": "client/node_modules/@material-ui/core/Modal/Modal.d.ts",
        "name": "ModalProps"
      },
      "required": false,
      "type": { "name": "boolean", "required": false },
      "table": { "type": { "summary": "boolean" } },
      "control": { "type": "boolean" }
    },
    "disableBackdropClick": {
      "defaultValue": null,
      "description": "If `true`, clicking the backdrop will not fire the `onClose` callback.",
      "name": "disableBackdropClick",
      "parent": {
        "fileName": "client/node_modules/@material-ui/core/Dialog/Dialog.d.ts",
        "name": "DialogProps"
      },
      "required": false,
      "type": { "name": "boolean", "required": false },
      "table": { "type": { "summary": "boolean" } },
      "control": { "type": "boolean" }
    },
    "disableEnforceFocus": {
      "defaultValue": null,
      "description": "",
      "name": "disableEnforceFocus",
      "parent": {
        "fileName": "client/node_modules/@material-ui/core/Modal/Modal.d.ts",
        "name": "ModalProps"
      },
      "required": false,
      "type": { "name": "boolean", "required": false },
      "table": { "type": { "summary": "boolean" } },
      "control": { "type": "boolean" }
    },
    "disableEscapeKeyDown": {
      "defaultValue": null,
      "description": "If `true`, hitting escape will not fire the `onClose` callback.",
      "name": "disableEscapeKeyDown",
      "parent": {
        "fileName": "client/node_modules/@material-ui/core/Dialog/Dialog.d.ts",
        "name": "DialogProps"
      },
      "required": false,
      "type": { "name": "boolean", "required": false },
      "table": { "type": { "summary": "boolean" } },
      "control": { "type": "boolean" }
    },
    "disablePortal": {
      "defaultValue": null,
      "description": "",
      "name": "disablePortal",
      "parent": {
        "fileName": "client/node_modules/@material-ui/core/Modal/Modal.d.ts",
        "name": "ModalProps"
      },
      "required": false,
      "type": { "name": "boolean", "required": false },
      "table": { "type": { "summary": "boolean" } },
      "control": { "type": "boolean" }
    },
    "disableRestoreFocus": {
      "defaultValue": null,
      "description": "",
      "name": "disableRestoreFocus",
      "parent": {
        "fileName": "client/node_modules/@material-ui/core/Modal/Modal.d.ts",
        "name": "ModalProps"
      },
      "required": false,
      "type": { "name": "boolean", "required": false },
      "table": { "type": { "summary": "boolean" } },
      "control": { "type": "boolean" }
    },
    "disableScrollLock": {
      "defaultValue": null,
      "description": "",
      "name": "disableScrollLock",
      "parent": {
        "fileName": "client/node_modules/@material-ui/core/Modal/Modal.d.ts",
        "name": "ModalProps"
      },
      "required": false,
      "type": { "name": "boolean", "required": false },
      "table": { "type": { "summary": "boolean" } },
      "control": { "type": "boolean" }
    },
    "fullScreen": {
      "defaultValue": null,
      "description": "If `true`, the dialog will be full-screen",
      "name": "fullScreen",
      "parent": {
        "fileName": "client/node_modules/@material-ui/core/Dialog/Dialog.d.ts",
        "name": "DialogProps"
      },
      "required": false,
      "type": { "name": "boolean", "required": false },
      "table": { "type": { "summary": "boolean" } },
      "control": { "type": "boolean" }
    },
    "fullWidth": {
      "defaultValue": null,
      "description": "If `true`, the dialog stretches to `maxWidth`.\n\nNotice that the dialog width grow is limited by the default margin.",
      "name": "fullWidth",
      "parent": {
        "fileName": "client/node_modules/@material-ui/core/Dialog/Dialog.d.ts",
        "name": "DialogProps"
      },
      "required": false,
      "type": { "name": "boolean", "required": false },
      "table": { "type": { "summary": "boolean" } },
      "control": { "type": "boolean" }
    },
    "hideBackdrop": {
      "defaultValue": null,
      "description": "",
      "name": "hideBackdrop",
      "parent": {
        "fileName": "client/node_modules/@material-ui/core/Modal/Modal.d.ts",
        "name": "ModalProps"
      },
      "required": false,
      "type": { "name": "boolean", "required": false },
      "table": { "type": { "summary": "boolean" } },
      "control": { "type": "boolean" }
    },
    "keepMounted": {
      "defaultValue": null,
      "description": "",
      "name": "keepMounted",
      "parent": {
        "fileName": "client/node_modules/@material-ui/core/Modal/Modal.d.ts",
        "name": "ModalProps"
      },
      "required": false,
      "type": { "name": "boolean", "required": false },
      "table": { "type": { "summary": "boolean" } },
      "control": { "type": "boolean" }
    },
    "manager": {
      "defaultValue": null,
      "description": "",
      "name": "manager",
      "parent": {
        "fileName": "client/node_modules/@material-ui/core/Modal/Modal.d.ts",
        "name": "ModalProps"
      },
      "required": false,
      "type": { "name": "ModalManager", "required": false },
      "table": { "type": { "summary": "ModalManager" } },
      "control": { "type": "object" }
    },
    "onBackdropClick": {
      "defaultValue": null,
      "description": "Callback fired when the backdrop is clicked.",
      "name": "onBackdropClick",
      "parent": {
        "fileName": "client/node_modules/@material-ui/core/Dialog/Dialog.d.ts",
        "name": "DialogProps"
      },
      "required": false,
      "type": {
        "name": "((event: SyntheticEvent<{}, Event>) => void)",
        "required": false
      },
      "table": {
        "type": { "summary": "((event: SyntheticEvent<{}, Event>) => void)" }
      },
      "control": { "type": null }
    },
    "onClose": {
      "defaultValue": null,
      "description": "Callback fired when the component requests to be closed.\n@param event The event source of the callback.\n@param reason Can be: `\"escapeKeyDown\"`, `\"backdropClick\"`.",
      "name": "onClose",
      "parent": {
        "fileName": "client/node_modules/@material-ui/core/Dialog/Dialog.d.ts",
        "name": "DialogProps"
      },
      "required": false,
      "type": {
        "name": "((event: {}, reason: \"backdropClick\" | \"escapeKeyDown\") => void)",
        "required": false
      },
      "table": {
        "type": {
          "summary": "((event: {}, reason: \"backdropClick\" | \"escapeKeyDown\") => void)"
        }
      },
      "control": { "type": null }
    },
    "onEnter": {
      "defaultValue": null,
      "description": "Callback fired before the dialog enters.",
      "name": "onEnter",
      "parent": {
        "fileName": "client/node_modules/@material-ui/core/Dialog/Dialog.d.ts",
        "name": "DialogProps"
      },
      "required": false,
      "type": {
        "name": "((node: HTMLElement, isAppearing: boolean) => void)",
        "required": false
      },
      "table": {
        "type": {
          "summary": "((node: HTMLElement, isAppearing: boolean) => void)"
        }
      },
      "control": { "type": null }
    },
    "onEntered": {
      "defaultValue": null,
      "description": "Callback fired when the dialog has entered.",
      "name": "onEntered",
      "parent": {
        "fileName": "client/node_modules/@material-ui/core/Dialog/Dialog.d.ts",
        "name": "DialogProps"
      },
      "required": false,
      "type": {
        "name": "((node: HTMLElement, isAppearing: boolean) => void)",
        "required": false
      },
      "table": {
        "type": {
          "summary": "((node: HTMLElement, isAppearing: boolean) => void)"
        }
      },
      "control": { "type": null }
    },
    "onEntering": {
      "defaultValue": null,
      "description": "Callback fired when the dialog is entering.",
      "name": "onEntering",
      "parent": {
        "fileName": "client/node_modules/@material-ui/core/Dialog/Dialog.d.ts",
        "name": "DialogProps"
      },
      "required": false,
      "type": {
        "name": "((node: HTMLElement, isAppearing: boolean) => void)",
        "required": false
      },
      "table": {
        "type": {
          "summary": "((node: HTMLElement, isAppearing: boolean) => void)"
        }
      },
      "control": { "type": null }
    },
    "onEscapeKeyDown": {
      "defaultValue": null,
      "description": "Callback fired when the escape key is pressed,\n`disableKeyboard` is false and the modal is in focus.",
      "name": "onEscapeKeyDown",
      "parent": {
        "fileName": "client/node_modules/@material-ui/core/Dialog/Dialog.d.ts",
        "name": "DialogProps"
      },
      "required": false,
      "type": {
        "name": "((event: SyntheticEvent<{}, Event>) => void)",
        "required": false
      },
      "table": {
        "type": { "summary": "((event: SyntheticEvent<{}, Event>) => void)" }
      },
      "control": { "type": null }
    },
    "onExit": {
      "defaultValue": null,
      "description": "Callback fired before the dialog exits.",
      "name": "onExit",
      "parent": {
        "fileName": "client/node_modules/@material-ui/core/Dialog/Dialog.d.ts",
        "name": "DialogProps"
      },
      "required": false,
      "type": { "name": "((node: HTMLElement) => void)", "required": false },
      "table": { "type": { "summary": "((node: HTMLElement) => void)" } },
      "control": { "type": null }
    },
    "onExited": {
      "defaultValue": null,
      "description": "Callback fired when the dialog has exited.",
      "name": "onExited",
      "parent": {
        "fileName": "client/node_modules/@material-ui/core/Dialog/Dialog.d.ts",
        "name": "DialogProps"
      },
      "required": false,
      "type": { "name": "((node: HTMLElement) => void)", "required": false },
      "table": { "type": { "summary": "((node: HTMLElement) => void)" } },
      "control": { "type": null }
    },
    "onExiting": {
      "defaultValue": null,
      "description": "Callback fired when the dialog is exiting.",
      "name": "onExiting",
      "parent": {
        "fileName": "client/node_modules/@material-ui/core/Dialog/Dialog.d.ts",
        "name": "DialogProps"
      },
      "required": false,
      "type": { "name": "((node: HTMLElement) => void)", "required": false },
      "table": { "type": { "summary": "((node: HTMLElement) => void)" } },
      "control": { "type": null }
    },
    "onRendered": {
      "defaultValue": null,
      "description": "",
      "name": "onRendered",
      "parent": {
        "fileName": "client/node_modules/@material-ui/core/Modal/Modal.d.ts",
        "name": "ModalProps"
      },
      "required": false,
      "type": { "name": "(() => void)", "required": false },
      "table": { "type": { "summary": "(() => void)" } },
      "control": { "type": null }
    },
    "PaperComponent": {
      "defaultValue": null,
      "description": "The component used to render the body of the dialog.",
      "name": "PaperComponent",
      "parent": {
        "fileName": "client/node_modules/@material-ui/core/Dialog/Dialog.d.ts",
        "name": "DialogProps"
      },
      "required": false,
      "type": {
        "name": "ComponentClass<PaperProps, any> | FunctionComponent<PaperProps>",
        "required": false
      },
      "table": {
        "type": {
          "summary": "ComponentClass<PaperProps, any> | FunctionComponent<PaperProps>"
        }
      },
      "control": { "type": null }
    },
    "PaperProps": {
      "defaultValue": null,
      "description": "",
      "name": "PaperProps",
      "required": false,
      "type": { "name": "Partial<ModalPaperProps>", "required": false },
      "table": { "type": { "summary": "Partial<ModalPaperProps>" } },
      "control": { "type": null }
    },
    "ref": {
      "defaultValue": null,
      "description": "",
      "name": "ref",
      "required": false,
      "type": {
        "name": "((instance: unknown) => void) | RefObject<unknown> | null",
        "required": false
      },
      "table": {
        "type": {
          "summary": "((instance: unknown) => void) | RefObject<unknown> | null"
        }
      },
      "control": { "type": null }
    },
    "scroll": {
      "defaultValue": null,
      "description": "Determine the container for scrolling the dialog.",
      "name": "scroll",
      "parent": {
        "fileName": "client/node_modules/@material-ui/core/Dialog/Dialog.d.ts",
        "name": "DialogProps"
      },
      "required": false,
      "type": { "name": "\"paper\" | \"body\"", "required": false },
      "table": { "type": { "summary": "\"paper\" | \"body\"" } },
      "control": { "type": "radio", "options": ["paper", "body"] }
    },
    "TransitionComponent": {
      "defaultValue": null,
      "description": "The component used for the transition.\n[Follow this guide](/components/transitions/#transitioncomponent-prop) to learn more about the requirements for this component.",
      "name": "TransitionComponent",
      "parent": {
        "fileName": "client/node_modules/@material-ui/core/Dialog/Dialog.d.ts",
        "name": "DialogProps"
      },
      "required": false,
      "type": {
        "name": "ComponentClass<TransitionProps & { children?: ReactElement<any, any>; }, any> | FunctionComponent<TransitionProps & { ...; }> | undefined",
        "required": false
      },
      "table": {
        "type": {
          "summary": "ComponentClass<TransitionProps & { children?: ReactElement<any, any>; }, any> | FunctionComponent<TransitionProps & { ...; }> | undefined"
        }
      },
      "control": { "type": null }
    },
    "transitionDuration": {
      "defaultValue": null,
      "description": "The duration for the transition, in milliseconds.\nYou may specify a single timeout for all transitions, or individually with an object.",
      "name": "transitionDuration",
      "parent": {
        "fileName": "client/node_modules/@material-ui/core/Dialog/Dialog.d.ts",
        "name": "DialogProps"
      },
      "required": false,
      "type": {
        "name": "number | { appear?: number; enter?: number | undefined; exit?: number | undefined; } | { appear?: number | undefined; enter?: number | undefined; exit?: number | undefined; } | undefined",
        "required": false
      },
      "table": {
        "type": {
          "summary": "number | { appear?: number; enter?: number | undefined; exit?: number | undefined; } | { appear?: number | undefined; enter?: number | undefined; exit?: number | undefined; } | undefined"
        }
      },
      "control": { "type": null }
    },
    "TransitionProps": {
      "defaultValue": null,
      "description": "Props applied to the [`Transition`](http://reactcommunity.org/react-transition-group/transition#Transition-props) element.",
      "name": "TransitionProps",
      "parent": {
        "fileName": "client/node_modules/@material-ui/core/Dialog/Dialog.d.ts",
        "name": "DialogProps"
      },
      "required": false,
      "type": {
        "name": "(TransitionProps & Partial<Pick<DialogProps, \"TransitionProps\"> & { role: string | null; }>)",
        "required": false
      },
      "table": {
        "type": {
          "summary": "(TransitionProps & Partial<Pick<DialogProps, \"TransitionProps\"> & { role: string | null; }>)"
        }
      },
      "control": { "type": null }
    }
  }
}
