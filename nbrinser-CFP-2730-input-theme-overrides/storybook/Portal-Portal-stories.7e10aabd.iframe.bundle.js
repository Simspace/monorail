"use strict";(self.webpackChunk_monorail_storybook=self.webpackChunk_monorail_storybook||[]).push([[9048],{"./src/Portal/Portal.stories.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{Default:()=>Default,__namedExportsOrder:()=>__namedExportsOrder,default:()=>Portal_stories});var react=__webpack_require__("../../node_modules/react/index.js");const Portal_Portal=__webpack_require__("../../node_modules/@mui/base/Portal/Portal.js").h;try{Portal_Portal.displayName="Portal",Portal_Portal.__docgenInfo={description:"Portals provide a first-class way to render children into a DOM node\nthat exists outside the DOM hierarchy of the parent component.\n\nDemos:\n\n- [Portal](https://simspace.gitlab.io/engineering/ux-engineering/monorail/main/storybook/?path=/docs/utils-portal--default)\n- [Portal (MUI)](https://mui.com/base/react-portal/)\n\nAPI:\n\n- [Portal API](https://mui.com/base/api/portal/)",displayName:"Portal",props:{children:{defaultValue:null,description:"The children to render into the `container`.",name:"children",required:!1,type:{name:"ReactNode"}},disablePortal:{defaultValue:{value:"false"},description:"The `children` will be under the DOM hierarchy of the parent component.",name:"disablePortal",required:!1,type:{name:"boolean"}},ref:{defaultValue:null,description:"",name:"ref",required:!1,type:{name:"Ref<Element>"}},key:{defaultValue:null,description:"",name:"key",required:!1,type:{name:"Key"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["../components/src/Portal/Portal.tsx#Portal"]={docgenInfo:Portal_Portal.__docgenInfo,name:"Portal",path:"../components/src/Portal/Portal.tsx#Portal"})}catch(__react_docgen_typescript_loader_error){}var Box=__webpack_require__("../components/src/Box/Box.tsx"),storybook=__webpack_require__("./src/helpers/storybook.ts"),jsx_runtime=__webpack_require__("../../node_modules/react/jsx-runtime.js");const Portal_stories={title:"Utils/Portal",component:Portal_Portal},Template=(0,storybook.yg)((args=>{const[show,setShow]=react.useState(!1),container=react.useRef(null);return(0,jsx_runtime.jsxs)(jsx_runtime.Fragment,{children:[(0,jsx_runtime.jsx)("button",{type:"button",onClick:()=>{setShow(!show)},children:show?"Unmount children":"Mount children"}),show?(0,jsx_runtime.jsx)(Portal_Portal,{container:container.current,...args,children:"Portal Content"}):null,(0,jsx_runtime.jsx)(Box.x,{sx:{p:1,my:1,border:"1px solid"},ref:container})]})}),{args:{}}),Default=(0,storybook.yg)(Template);Default.parameters={...Default.parameters,docs:{...Default.parameters?.docs,source:{originalSource:"story(Template)",...Default.parameters?.docs?.source},description:{story:'The portal component renders its children into a new "subtree" outside of current DOM hierarchy.',...Default.parameters?.docs?.description}}};const __namedExportsOrder=["Default"];try{Default.displayName="Default",Default.__docgenInfo={description:'The portal component renders its children into a new "subtree" outside of current DOM hierarchy.',displayName:"Default",props:{}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/Portal/Portal.stories.tsx#Default"]={docgenInfo:Default.__docgenInfo,name:"Default",path:"src/Portal/Portal.stories.tsx#Default"})}catch(__react_docgen_typescript_loader_error){}},"./src/helpers/storybook.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{yg:()=>story});var light=__webpack_require__("../themes/src/meteor/theme/light.ts");const isNonEmptyString=x=>(x=>"string"==typeof x)(x)&&x.length>0;let A11yElement=function(A11yElement){return A11yElement.Root="#root",A11yElement.Component="#root > *",A11yElement.Modal=".MuiDialog-root",A11yElement.Popover=".MuiPopover-root",A11yElement.Drawer=".MuiDrawer-root",A11yElement}({});A11yElement.Root,A11yElement.Component;function story(Template,{args,argTypes,parameters,storyName,muiName}={}){let themeProps={};muiName&&(themeProps=light.D4.components?.[muiName]?.defaultProps);const NewStory=Template.bind({});return NewStory.args={...themeProps,...Template.args,...args},NewStory.argTypes={...Template.argTypes,...argTypes},NewStory.parameters={...Template.parameters,...parameters},isNonEmptyString(storyName)&&(NewStory.storyName=storyName),NewStory}}}]);