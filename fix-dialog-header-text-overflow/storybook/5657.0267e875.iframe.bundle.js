"use strict";(self.webpackChunk_monorail_storybook=self.webpackChunk_monorail_storybook||[]).push([[5657],{"../../node_modules/@mui/x-date-pickers/TimeClock/TimeClock.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{q:()=>TimeClock});var esm_extends=__webpack_require__("../../node_modules/@mui/x-date-pickers/node_modules/@babel/runtime/helpers/esm/extends.js"),objectWithoutPropertiesLoose=__webpack_require__("../../node_modules/@mui/x-date-pickers/node_modules/@babel/runtime/helpers/esm/objectWithoutPropertiesLoose.js"),react=__webpack_require__("../../node_modules/react/index.js"),clsx=__webpack_require__("../../node_modules/@mui/x-date-pickers/node_modules/clsx/dist/clsx.mjs"),styled=__webpack_require__("../../node_modules/@mui/material/styles/styled.js"),useThemeProps=__webpack_require__("../../node_modules/@mui/material/styles/useThemeProps.js"),composeClasses=__webpack_require__("../../node_modules/@mui/x-date-pickers/node_modules/@mui/utils/composeClasses/composeClasses.js"),useId=__webpack_require__("../../node_modules/@mui/x-date-pickers/node_modules/@mui/utils/useId/useId.js"),useUtils=__webpack_require__("../../node_modules/@mui/x-date-pickers/internals/hooks/useUtils.js"),PickersArrowSwitcher=__webpack_require__("../../node_modules/@mui/x-date-pickers/internals/components/PickersArrowSwitcher/PickersArrowSwitcher.js"),time_utils=__webpack_require__("../../node_modules/@mui/x-date-pickers/internals/utils/time-utils.js"),useViews=__webpack_require__("../../node_modules/@mui/x-date-pickers/internals/hooks/useViews.js"),date_helpers_hooks=__webpack_require__("../../node_modules/@mui/x-date-pickers/internals/hooks/date-helpers-hooks.js"),PickerViewRoot=__webpack_require__("../../node_modules/@mui/x-date-pickers/internals/components/PickerViewRoot/PickerViewRoot.js"),generateUtilityClass=__webpack_require__("../../node_modules/@mui/x-date-pickers/node_modules/@mui/utils/generateUtilityClass/generateUtilityClass.js"),generateUtilityClasses=__webpack_require__("../../node_modules/@mui/x-date-pickers/node_modules/@mui/utils/generateUtilityClasses/generateUtilityClasses.js");function getTimeClockUtilityClass(slot){return(0,generateUtilityClass.ZP)("MuiTimeClock",slot)}(0,generateUtilityClasses.Z)("MuiTimeClock",["root","arrowSwitcher"]);var IconButton=__webpack_require__("../../node_modules/@mui/material/IconButton/IconButton.js"),Typography=__webpack_require__("../../node_modules/@mui/material/Typography/Typography.js"),useEnhancedEffect=__webpack_require__("../../node_modules/@mui/x-date-pickers/node_modules/@mui/utils/useEnhancedEffect/useEnhancedEffect.js");const CLOCK_WIDTH=220,clockCenter={x:CLOCK_WIDTH/2,y:CLOCK_WIDTH/2},cx=clockCenter.x-clockCenter.x,cy=0-clockCenter.y,getAngleValue=(step,offsetX,offsetY)=>{const x=offsetX-clockCenter.x,y=offsetY-clockCenter.y,atan=Math.atan2(cx,cy)-Math.atan2(x,y);let deg=atan*(180/Math.PI);deg=Math.round(deg/step)*step,deg%=360;const delta=x**2+y**2;return{value:Math.floor(deg/step)||0,distance:Math.sqrt(delta)}};function getClockPointerUtilityClass(slot){return(0,generateUtilityClass.ZP)("MuiClockPointer",slot)}(0,generateUtilityClasses.Z)("MuiClockPointer",["root","thumb"]);var jsx_runtime=__webpack_require__("../../node_modules/react/jsx-runtime.js");const _excluded=["className","hasSelected","isInner","type","viewValue"],useUtilityClasses=ownerState=>{const{classes}=ownerState;return(0,composeClasses.Z)({root:["root"],thumb:["thumb"]},getClockPointerUtilityClass,classes)},ClockPointerRoot=(0,styled.ZP)("div",{name:"MuiClockPointer",slot:"Root",overridesResolver:(_,styles)=>styles.root})((({theme})=>({width:2,backgroundColor:(theme.vars||theme).palette.primary.main,position:"absolute",left:"calc(50% - 1px)",bottom:"50%",transformOrigin:"center bottom 0px",variants:[{props:{shouldAnimate:!0},style:{transition:theme.transitions.create(["transform","height"])}}]}))),ClockPointerThumb=(0,styled.ZP)("div",{name:"MuiClockPointer",slot:"Thumb",overridesResolver:(_,styles)=>styles.thumb})((({theme})=>({width:4,height:4,backgroundColor:(theme.vars||theme).palette.primary.contrastText,borderRadius:"50%",position:"absolute",top:-21,left:"calc(50% - 18px)",border:`16px solid ${(theme.vars||theme).palette.primary.main}`,boxSizing:"content-box",variants:[{props:{hasSelected:!0},style:{backgroundColor:(theme.vars||theme).palette.primary.main}}]})));function ClockPointer(inProps){const props=(0,useThemeProps.Z)({props:inProps,name:"MuiClockPointer"}),{className,isInner,type,viewValue}=props,other=(0,objectWithoutPropertiesLoose.Z)(props,_excluded),previousType=react.useRef(type);react.useEffect((()=>{previousType.current=type}),[type]);const ownerState=(0,esm_extends.Z)({},props,{shouldAnimate:previousType.current!==type}),classes=useUtilityClasses(ownerState);return(0,jsx_runtime.jsx)(ClockPointerRoot,(0,esm_extends.Z)({style:(()=>{let angle=360/("hours"===type?12:60)*viewValue;return"hours"===type&&viewValue>12&&(angle-=360),{height:Math.round((isInner?.26:.4)*CLOCK_WIDTH),transform:`rotateZ(${angle}deg)`}})(),className:(0,clsx.Z)(className,classes.root),ownerState},other,{children:(0,jsx_runtime.jsx)(ClockPointerThumb,{ownerState,className:classes.thumb})}))}function getClockUtilityClass(slot){return(0,generateUtilityClass.ZP)("MuiClock",slot)}(0,generateUtilityClasses.Z)("MuiClock",["root","clock","wrapper","squareMask","pin","amButton","pmButton","meridiemText"]);var date_utils=__webpack_require__("../../node_modules/@mui/x-date-pickers/internals/utils/date-utils.js");const ClockRoot=(0,styled.ZP)("div",{name:"MuiClock",slot:"Root",overridesResolver:(_,styles)=>styles.root})((({theme})=>({display:"flex",justifyContent:"center",alignItems:"center",margin:theme.spacing(2)}))),ClockClock=(0,styled.ZP)("div",{name:"MuiClock",slot:"Clock",overridesResolver:(_,styles)=>styles.clock})({backgroundColor:"rgba(0,0,0,.07)",borderRadius:"50%",height:220,width:220,flexShrink:0,position:"relative",pointerEvents:"none"}),ClockWrapper=(0,styled.ZP)("div",{name:"MuiClock",slot:"Wrapper",overridesResolver:(_,styles)=>styles.wrapper})({"&:focus":{outline:"none"}}),ClockSquareMask=(0,styled.ZP)("div",{name:"MuiClock",slot:"SquareMask",overridesResolver:(_,styles)=>styles.squareMask})({width:"100%",height:"100%",position:"absolute",pointerEvents:"auto",outline:0,touchAction:"none",userSelect:"none",variants:[{props:{disabled:!1},style:{"@media (pointer: fine)":{cursor:"pointer",borderRadius:"50%"},"&:active":{cursor:"move"}}}]}),ClockPin=(0,styled.ZP)("div",{name:"MuiClock",slot:"Pin",overridesResolver:(_,styles)=>styles.pin})((({theme})=>({width:6,height:6,borderRadius:"50%",backgroundColor:(theme.vars||theme).palette.primary.main,position:"absolute",top:"50%",left:"50%",transform:"translate(-50%, -50%)"}))),ClockAmButton=(0,styled.ZP)(IconButton.Z,{name:"MuiClock",slot:"AmButton",overridesResolver:(_,styles)=>styles.amButton})((({theme})=>({zIndex:1,position:"absolute",bottom:8,left:8,paddingLeft:4,paddingRight:4,width:36,variants:[{props:{meridiemMode:"am"},style:{backgroundColor:(theme.vars||theme).palette.primary.main,color:(theme.vars||theme).palette.primary.contrastText,"&:hover":{backgroundColor:(theme.vars||theme).palette.primary.light}}}]}))),ClockPmButton=(0,styled.ZP)(IconButton.Z,{name:"MuiClock",slot:"PmButton",overridesResolver:(_,styles)=>styles.pmButton})((({theme})=>({zIndex:1,position:"absolute",bottom:8,right:8,paddingLeft:4,paddingRight:4,width:36,variants:[{props:{meridiemMode:"pm"},style:{backgroundColor:(theme.vars||theme).palette.primary.main,color:(theme.vars||theme).palette.primary.contrastText,"&:hover":{backgroundColor:(theme.vars||theme).palette.primary.light}}}]}))),ClockMeridiemText=(0,styled.ZP)(Typography.Z,{name:"MuiClock",slot:"meridiemText",overridesResolver:(_,styles)=>styles.meridiemText})({overflow:"hidden",whiteSpace:"nowrap",textOverflow:"ellipsis"});function Clock(inProps){const props=(0,useThemeProps.Z)({props:inProps,name:"MuiClock"}),{ampm,ampmInClock,autoFocus,children,value,handleMeridiemChange,isTimeDisabled,meridiemMode,minutesStep=1,onChange,selectedId,type,viewValue,disabled=!1,readOnly,className}=props,ownerState=props,utils=(0,useUtils.nB)(),localeText=(0,useUtils.og)(),isMoving=react.useRef(!1),classes=(ownerState=>{const{classes}=ownerState;return(0,composeClasses.Z)({root:["root"],clock:["clock"],wrapper:["wrapper"],squareMask:["squareMask"],pin:["pin"],amButton:["amButton"],pmButton:["pmButton"],meridiemText:["meridiemText"]},getClockUtilityClass,classes)})(ownerState),isSelectedTimeDisabled=isTimeDisabled(viewValue,type),isPointerInner=!ampm&&"hours"===type&&(viewValue<1||viewValue>12),handleValueChange=(newValue,isFinish)=>{disabled||readOnly||isTimeDisabled(newValue,type)||onChange(newValue,isFinish)},setTime=(event,isFinish)=>{let{offsetX,offsetY}=event;if(void 0===offsetX){const rect=event.target.getBoundingClientRect();offsetX=event.changedTouches[0].clientX-rect.left,offsetY=event.changedTouches[0].clientY-rect.top}const newSelectedValue="seconds"===type||"minutes"===type?((offsetX,offsetY,step=1)=>{const angleStep=6*step;let{value}=getAngleValue(angleStep,offsetX,offsetY);return value=value*step%60,value})(offsetX,offsetY,minutesStep):((offsetX,offsetY,ampm)=>{const{value,distance}=getAngleValue(30,offsetX,offsetY);let hour=value||12;return ampm?hour%=12:distance<CLOCK_WIDTH/2-36&&(hour+=12,hour%=24),hour})(offsetX,offsetY,Boolean(ampm));handleValueChange(newSelectedValue,isFinish)},hasSelected=react.useMemo((()=>"hours"===type||viewValue%5==0),[type,viewValue]),keyboardControlStep="minutes"===type?minutesStep:1,listboxRef=react.useRef(null);(0,useEnhancedEffect.Z)((()=>{autoFocus&&listboxRef.current.focus()}),[autoFocus]);return(0,jsx_runtime.jsxs)(ClockRoot,{className:(0,clsx.Z)(className,classes.root),children:[(0,jsx_runtime.jsxs)(ClockClock,{className:classes.clock,children:[(0,jsx_runtime.jsx)(ClockSquareMask,{onTouchMove:event=>{isMoving.current=!0,setTime(event,"shallow")},onTouchEnd:event=>{isMoving.current&&(setTime(event,"finish"),isMoving.current=!1)},onMouseUp:event=>{isMoving.current&&(isMoving.current=!1),setTime(event.nativeEvent,"finish")},onMouseMove:event=>{event.buttons>0&&setTime(event.nativeEvent,"shallow")},ownerState:{disabled},className:classes.squareMask}),!isSelectedTimeDisabled&&(0,jsx_runtime.jsxs)(react.Fragment,{children:[(0,jsx_runtime.jsx)(ClockPin,{className:classes.pin}),null!=value&&(0,jsx_runtime.jsx)(ClockPointer,{type,viewValue,isInner:isPointerInner,hasSelected})]}),(0,jsx_runtime.jsx)(ClockWrapper,{"aria-activedescendant":selectedId,"aria-label":localeText.clockLabelText(type,value,utils),ref:listboxRef,role:"listbox",onKeyDown:event=>{if(!isMoving.current)switch(event.key){case"Home":handleValueChange(0,"partial"),event.preventDefault();break;case"End":handleValueChange("minutes"===type?59:23,"partial"),event.preventDefault();break;case"ArrowUp":handleValueChange(viewValue+keyboardControlStep,"partial"),event.preventDefault();break;case"ArrowDown":handleValueChange(viewValue-keyboardControlStep,"partial"),event.preventDefault()}},tabIndex:0,className:classes.wrapper,children})]}),ampm&&ampmInClock&&(0,jsx_runtime.jsxs)(react.Fragment,{children:[(0,jsx_runtime.jsx)(ClockAmButton,{onClick:readOnly?void 0:()=>handleMeridiemChange("am"),disabled:disabled||null===meridiemMode,ownerState,className:classes.amButton,title:(0,date_utils.lu)(utils,"am"),children:(0,jsx_runtime.jsx)(ClockMeridiemText,{variant:"caption",className:classes.meridiemText,children:(0,date_utils.lu)(utils,"am")})}),(0,jsx_runtime.jsx)(ClockPmButton,{disabled:disabled||null===meridiemMode,onClick:readOnly?void 0:()=>handleMeridiemChange("pm"),ownerState,className:classes.pmButton,title:(0,date_utils.lu)(utils,"pm"),children:(0,jsx_runtime.jsx)(ClockMeridiemText,{variant:"caption",className:classes.meridiemText,children:(0,date_utils.lu)(utils,"pm")})})]})]})}function getClockNumberUtilityClass(slot){return(0,generateUtilityClass.ZP)("MuiClockNumber",slot)}const clockNumberClasses=(0,generateUtilityClasses.Z)("MuiClockNumber",["root","selected","disabled"]),ClockNumber_excluded=["className","disabled","index","inner","label","selected"],ClockNumberRoot=(0,styled.ZP)("span",{name:"MuiClockNumber",slot:"Root",overridesResolver:(_,styles)=>[styles.root,{[`&.${clockNumberClasses.disabled}`]:styles.disabled},{[`&.${clockNumberClasses.selected}`]:styles.selected}]})((({theme})=>({height:36,width:36,position:"absolute",left:"calc((100% - 36px) / 2)",display:"inline-flex",justifyContent:"center",alignItems:"center",borderRadius:"50%",color:(theme.vars||theme).palette.text.primary,fontFamily:theme.typography.fontFamily,"&:focused":{backgroundColor:(theme.vars||theme).palette.background.paper},[`&.${clockNumberClasses.selected}`]:{color:(theme.vars||theme).palette.primary.contrastText},[`&.${clockNumberClasses.disabled}`]:{pointerEvents:"none",color:(theme.vars||theme).palette.text.disabled},variants:[{props:{inner:!0},style:(0,esm_extends.Z)({},theme.typography.body2,{color:(theme.vars||theme).palette.text.secondary})}]})));function ClockNumber(inProps){const props=(0,useThemeProps.Z)({props:inProps,name:"MuiClockNumber"}),{className,disabled,index,inner,label,selected}=props,other=(0,objectWithoutPropertiesLoose.Z)(props,ClockNumber_excluded),ownerState=props,classes=(ownerState=>{const{classes,selected,disabled}=ownerState,slots={root:["root",selected&&"selected",disabled&&"disabled"]};return(0,composeClasses.Z)(slots,getClockNumberUtilityClass,classes)})(ownerState),angle=index%12/12*Math.PI*2-Math.PI/2,length=(CLOCK_WIDTH-36-2)/2*(inner?.65:1),x=Math.round(Math.cos(angle)*length),y=Math.round(Math.sin(angle)*length);return(0,jsx_runtime.jsx)(ClockNumberRoot,(0,esm_extends.Z)({className:(0,clsx.Z)(className,classes.root),"aria-disabled":!!disabled||void 0,"aria-selected":!!selected||void 0,role:"option",style:{transform:`translate(${x}px, ${y+(CLOCK_WIDTH-36)/2}px`},ownerState},other,{children:label}))}const getHourNumbers=({ampm,value,getClockNumberText,isDisabled,selectedId,utils})=>{const currentHours=value?utils.getHours(value):null,hourNumbers=[],endHour=ampm?12:23,isSelected=hour=>null!==currentHours&&(ampm?12===hour?12===currentHours||0===currentHours:currentHours===hour||currentHours-12===hour:currentHours===hour);for(let hour=ampm?1:0;hour<=endHour;hour+=1){let label=hour.toString();0===hour&&(label="00");const inner=!ampm&&(0===hour||hour>12);label=utils.formatNumber(label);const selected=isSelected(hour);hourNumbers.push((0,jsx_runtime.jsx)(ClockNumber,{id:selected?selectedId:void 0,index:hour,inner,selected,disabled:isDisabled(hour),label,"aria-label":getClockNumberText(label)},hour))}return hourNumbers},getMinutesNumbers=({utils,value,isDisabled,getClockNumberText,selectedId})=>{const f=utils.formatNumber;return[[5,f("05")],[10,f("10")],[15,f("15")],[20,f("20")],[25,f("25")],[30,f("30")],[35,f("35")],[40,f("40")],[45,f("45")],[50,f("50")],[55,f("55")],[0,f("00")]].map((([numberValue,label],index)=>{const selected=numberValue===value;return(0,jsx_runtime.jsx)(ClockNumber,{label,id:selected?selectedId:void 0,index:index+1,inner:!1,disabled:isDisabled(numberValue),selected,"aria-label":getClockNumberText(label)},numberValue)}))};var useValueWithTimezone=__webpack_require__("../../node_modules/@mui/x-date-pickers/internals/hooks/useValueWithTimezone.js"),valueManagers=__webpack_require__("../../node_modules/@mui/x-date-pickers/internals/utils/valueManagers.js"),useClockReferenceDate=__webpack_require__("../../node_modules/@mui/x-date-pickers/internals/hooks/useClockReferenceDate.js");const TimeClock_excluded=["ampm","ampmInClock","autoFocus","slots","slotProps","value","defaultValue","referenceDate","disableIgnoringDatePartForTimeValidation","maxTime","minTime","disableFuture","disablePast","minutesStep","shouldDisableTime","showViewSwitcher","onChange","view","views","openTo","onViewChange","focusedView","onFocusedViewChange","className","disabled","readOnly","timezone"],TimeClockRoot=(0,styled.ZP)(PickerViewRoot.Z,{name:"MuiTimeClock",slot:"Root",overridesResolver:(props,styles)=>styles.root})({display:"flex",flexDirection:"column",position:"relative"}),TimeClockArrowSwitcher=(0,styled.ZP)(PickersArrowSwitcher.u,{name:"MuiTimeClock",slot:"ArrowSwitcher",overridesResolver:(props,styles)=>styles.arrowSwitcher})({position:"absolute",right:12,top:15}),TIME_CLOCK_DEFAULT_VIEWS=["hours","minutes"],TimeClock=react.forwardRef((function TimeClock(inProps,ref){const utils=(0,useUtils.nB)(),props=(0,useThemeProps.Z)({props:inProps,name:"MuiTimeClock"}),{ampm=utils.is12HourCycleInCurrentLocale(),ampmInClock=!1,autoFocus,slots,slotProps,value:valueProp,defaultValue,referenceDate:referenceDateProp,disableIgnoringDatePartForTimeValidation=!1,maxTime,minTime,disableFuture,disablePast,minutesStep=1,shouldDisableTime,showViewSwitcher,onChange,view:inView,views=TIME_CLOCK_DEFAULT_VIEWS,openTo,onViewChange,focusedView,onFocusedViewChange,className,disabled,readOnly,timezone:timezoneProp}=props,other=(0,objectWithoutPropertiesLoose.Z)(props,TimeClock_excluded),{value,handleValueChange,timezone}=(0,useValueWithTimezone.m)({name:"TimeClock",timezone:timezoneProp,value:valueProp,defaultValue,onChange,valueManager:valueManagers.h}),valueOrReferenceDate=(0,useClockReferenceDate.t)({value,referenceDate:referenceDateProp,utils,props,timezone}),localeText=(0,useUtils.og)(),now=(0,useUtils.mX)(timezone),{view,setView,previousView,nextView,setValueAndGoToNextView}=(0,useViews.B)({view:inView,views,openTo,onViewChange,onChange:handleValueChange,focusedView,onFocusedViewChange}),{meridiemMode,handleMeridiemChange}=(0,date_helpers_hooks.iC)(valueOrReferenceDate,ampm,setValueAndGoToNextView),isTimeDisabled=react.useCallback(((rawValue,viewType)=>{const isAfter=(0,time_utils.X4)(disableIgnoringDatePartForTimeValidation,utils),shouldCheckPastEnd="hours"===viewType||"minutes"===viewType&&views.includes("seconds"),containsValidTime=({start,end})=>(!minTime||!isAfter(minTime,end))&&((!maxTime||!isAfter(start,maxTime))&&((!disableFuture||!isAfter(start,now))&&(!disablePast||!isAfter(now,shouldCheckPastEnd?end:start)))),isValidValue=(timeValue,step=1)=>{if(timeValue%step!=0)return!1;if(shouldDisableTime)switch(viewType){case"hours":return!shouldDisableTime(utils.setHours(valueOrReferenceDate,timeValue),"hours");case"minutes":return!shouldDisableTime(utils.setMinutes(valueOrReferenceDate,timeValue),"minutes");case"seconds":return!shouldDisableTime(utils.setSeconds(valueOrReferenceDate,timeValue),"seconds");default:return!1}return!0};switch(viewType){case"hours":{const valueWithMeridiem=(0,time_utils.b_)(rawValue,meridiemMode,ampm),dateWithNewHours=utils.setHours(valueOrReferenceDate,valueWithMeridiem);return!containsValidTime({start:utils.setSeconds(utils.setMinutes(dateWithNewHours,0),0),end:utils.setSeconds(utils.setMinutes(dateWithNewHours,59),59)})||!isValidValue(valueWithMeridiem)}case"minutes":{const dateWithNewMinutes=utils.setMinutes(valueOrReferenceDate,rawValue);return!containsValidTime({start:utils.setSeconds(dateWithNewMinutes,0),end:utils.setSeconds(dateWithNewMinutes,59)})||!isValidValue(rawValue,minutesStep)}case"seconds":{const dateWithNewSeconds=utils.setSeconds(valueOrReferenceDate,rawValue);return!containsValidTime({start:dateWithNewSeconds,end:dateWithNewSeconds})||!isValidValue(rawValue)}default:throw new Error("not supported")}}),[ampm,valueOrReferenceDate,disableIgnoringDatePartForTimeValidation,maxTime,meridiemMode,minTime,minutesStep,shouldDisableTime,utils,disableFuture,disablePast,now,views]),selectedId=(0,useId.Z)(),viewProps=react.useMemo((()=>{switch(view){case"hours":{const handleHoursChange=(hourValue,isFinish)=>{const valueWithMeridiem=(0,time_utils.b_)(hourValue,meridiemMode,ampm);setValueAndGoToNextView(utils.setHours(valueOrReferenceDate,valueWithMeridiem),isFinish,"hours")};return{onChange:handleHoursChange,viewValue:utils.getHours(valueOrReferenceDate),children:getHourNumbers({value,utils,ampm,onChange:handleHoursChange,getClockNumberText:localeText.hoursClockNumberText,isDisabled:hourValue=>disabled||isTimeDisabled(hourValue,"hours"),selectedId})}}case"minutes":{const minutesValue=utils.getMinutes(valueOrReferenceDate),handleMinutesChange=(minuteValue,isFinish)=>{setValueAndGoToNextView(utils.setMinutes(valueOrReferenceDate,minuteValue),isFinish,"minutes")};return{viewValue:minutesValue,onChange:handleMinutesChange,children:getMinutesNumbers({utils,value:minutesValue,onChange:handleMinutesChange,getClockNumberText:localeText.minutesClockNumberText,isDisabled:minuteValue=>disabled||isTimeDisabled(minuteValue,"minutes"),selectedId})}}case"seconds":{const secondsValue=utils.getSeconds(valueOrReferenceDate),handleSecondsChange=(secondValue,isFinish)=>{setValueAndGoToNextView(utils.setSeconds(valueOrReferenceDate,secondValue),isFinish,"seconds")};return{viewValue:secondsValue,onChange:handleSecondsChange,children:getMinutesNumbers({utils,value:secondsValue,onChange:handleSecondsChange,getClockNumberText:localeText.secondsClockNumberText,isDisabled:secondValue=>disabled||isTimeDisabled(secondValue,"seconds"),selectedId})}}default:throw new Error("You must provide the type for ClockView")}}),[view,utils,value,ampm,localeText.hoursClockNumberText,localeText.minutesClockNumberText,localeText.secondsClockNumberText,meridiemMode,setValueAndGoToNextView,valueOrReferenceDate,isTimeDisabled,selectedId,disabled]),ownerState=props,classes=(ownerState=>{const{classes}=ownerState;return(0,composeClasses.Z)({root:["root"],arrowSwitcher:["arrowSwitcher"]},getTimeClockUtilityClass,classes)})(ownerState);return(0,jsx_runtime.jsxs)(TimeClockRoot,(0,esm_extends.Z)({ref,className:(0,clsx.Z)(classes.root,className),ownerState},other,{children:[(0,jsx_runtime.jsx)(Clock,(0,esm_extends.Z)({autoFocus:autoFocus??!!focusedView,ampmInClock:ampmInClock&&views.includes("hours"),value,type:view,ampm,minutesStep,isTimeDisabled,meridiemMode,handleMeridiemChange,selectedId,disabled,readOnly},viewProps)),showViewSwitcher&&(0,jsx_runtime.jsx)(TimeClockArrowSwitcher,{className:classes.arrowSwitcher,slots,slotProps,onGoToPrevious:()=>setView(previousView),isPreviousDisabled:!previousView,previousLabel:localeText.openPreviousView,onGoToNext:()=>setView(nextView),isNextDisabled:!nextView,nextLabel:localeText.openNextView,ownerState})]}))}))},"../../node_modules/@mui/x-date-pickers/internals/hooks/useClockReferenceDate.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{t:()=>useClockReferenceDate});var react__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("../../node_modules/react/index.js"),_utils_valueManagers__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("../../node_modules/@mui/x-date-pickers/internals/utils/valueManagers.js"),_utils_date_utils__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__("../../node_modules/@mui/x-date-pickers/internals/utils/date-utils.js"),_utils_getDefaultReferenceDate__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("../../node_modules/@mui/x-date-pickers/internals/utils/getDefaultReferenceDate.js");const useClockReferenceDate=({value,referenceDate:referenceDateProp,utils,props,timezone})=>{const referenceDate=react__WEBPACK_IMPORTED_MODULE_0__.useMemo((()=>_utils_valueManagers__WEBPACK_IMPORTED_MODULE_1__.h.getInitialReferenceValue({value,utils,props,referenceDate:referenceDateProp,granularity:_utils_getDefaultReferenceDate__WEBPACK_IMPORTED_MODULE_2__.Kn.day,timezone,getTodayDate:()=>(0,_utils_date_utils__WEBPACK_IMPORTED_MODULE_3__.X$)(utils,timezone,"date")})),[]);return value??referenceDate}}}]);