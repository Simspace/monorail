"use strict";(self.webpackChunk_monorail_storybook=self.webpackChunk_monorail_storybook||[]).push([[596],{"./src/TextField/TextField.stories.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{BasicTextField:()=>BasicTextField,ComposedTextField:()=>ComposedTextField,ControlledVsUncontrolled:()=>ControlledVsUncontrolled,Customization:()=>Customization,Default:()=>Default,FormProps:()=>FormProps,FullWidth:()=>FullWidth,InputAdornments:()=>InputAdornments,Margin:()=>Margin,Multiline:()=>Multiline,SelectTextFields:()=>SelectTextFields,Sizes:()=>Sizes,UseFormControl:()=>UseFormControl,Validation:()=>Validation,__namedExportsOrder:()=>__namedExportsOrder,default:()=>__WEBPACK_DEFAULT_EXPORT__});var react__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("../../node_modules/react/index.js"),_mui_icons_material_Visibility__WEBPACK_IMPORTED_MODULE_14__=__webpack_require__("../../node_modules/@mui/icons-material/esm/Visibility.js"),_mui_icons_material_VisibilityOff__WEBPACK_IMPORTED_MODULE_13__=__webpack_require__("../../node_modules/@mui/icons-material/esm/VisibilityOff.js"),_mui_material__WEBPACK_IMPORTED_MODULE_16__=__webpack_require__("../../node_modules/@mui/material/styles/styled.js"),_mui_material__WEBPACK_IMPORTED_MODULE_18__=__webpack_require__("../../node_modules/@mui/system/esm/colorManipulator/colorManipulator.js"),_mui_material_Box__WEBPACK_IMPORTED_MODULE_5__=__webpack_require__("../../node_modules/@mui/material/Box/Box.js"),_mui_material_FormControl__WEBPACK_IMPORTED_MODULE_8__=__webpack_require__("../../node_modules/@mui/material/FormControl/FormControl.js"),_mui_material_FormHelperText__WEBPACK_IMPORTED_MODULE_10__=__webpack_require__("../../node_modules/@mui/material/FormHelperText/FormHelperText.js"),_mui_material_IconButton__WEBPACK_IMPORTED_MODULE_12__=__webpack_require__("../../node_modules/@mui/material/IconButton/IconButton.js"),_mui_material_InputAdornment__WEBPACK_IMPORTED_MODULE_7__=__webpack_require__("../../node_modules/@mui/material/InputAdornment/InputAdornment.js"),_mui_material_InputBase__WEBPACK_IMPORTED_MODULE_17__=__webpack_require__("../../node_modules/@mui/material/InputBase/InputBase.js"),_mui_material_InputLabel__WEBPACK_IMPORTED_MODULE_11__=__webpack_require__("../../node_modules/@mui/material/InputLabel/InputLabel.js"),_mui_material_OutlinedInput__WEBPACK_IMPORTED_MODULE_9__=__webpack_require__("../../node_modules/@mui/material/OutlinedInput/OutlinedInput.js"),_monorail_components__WEBPACK_IMPORTED_MODULE_4__=__webpack_require__("../components/src/TextField/TextField.tsx"),_monorail_components__WEBPACK_IMPORTED_MODULE_6__=__webpack_require__("../components/src/MenuItem/MenuItem.tsx"),_monorail_components__WEBPACK_IMPORTED_MODULE_19__=__webpack_require__("../../node_modules/@mui/material/FormControl/useFormControl.js"),_monorail_utils__WEBPACK_IMPORTED_MODULE_15__=__webpack_require__("../../node_modules/@mui/material/styles/useTheme.js"),_helpers_helpers_js__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./src/helpers/helpers.ts"),_helpers_storybook_js__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./src/helpers/storybook.ts"),react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__("../../node_modules/react/jsx-runtime.js");const __WEBPACK_DEFAULT_EXPORT__={title:"Inputs/TextField",component:_monorail_components__WEBPACK_IMPORTED_MODULE_4__.nv},Template=(0,_helpers_storybook_js__WEBPACK_IMPORTED_MODULE_2__.yg)((args=>(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.jsx)(_monorail_components__WEBPACK_IMPORTED_MODULE_4__.nv,{...args})),{args:{label:"Text Field",placeholder:"Placeholder",inputProps:{"aria-label":"Text Field"}},muiName:"MuiTextField"}),Default=(0,_helpers_storybook_js__WEBPACK_IMPORTED_MODULE_2__.yg)(Template),BasicTextField=(0,_helpers_storybook_js__WEBPACK_IMPORTED_MODULE_2__.yg)((args=>(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.jsx)(_mui_material_Box__WEBPACK_IMPORTED_MODULE_5__.Z,{component:"form",sx:{"& > :not(style)":{mr:1,width:"25ch"}},noValidate:!0,autoComplete:"off",children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.jsx)(_monorail_components__WEBPACK_IMPORTED_MODULE_4__.nv,{id:"outlined-basic",label:"Outlined",variant:"outlined",...args})})),{parameters:{docs:{description:{story:"The `TextField` wrapper component is a complete form control including a label, input, and help text. We only use the outlined variant in Monorail."}}}}),FormProps=(0,_helpers_storybook_js__WEBPACK_IMPORTED_MODULE_2__.yg)((()=>(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.jsx)(_mui_material_Box__WEBPACK_IMPORTED_MODULE_5__.Z,{component:"form",sx:{"& .MuiTextField-root":{mr:2,width:"25ch"}},noValidate:!0,autoComplete:"off",children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.jsxs)("div",{children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.jsx)(_monorail_components__WEBPACK_IMPORTED_MODULE_4__.nv,{required:!0,id:"outlined-required",label:"Required",defaultValue:"Hello World"}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.jsx)(_monorail_components__WEBPACK_IMPORTED_MODULE_4__.nv,{disabled:!0,id:"outlined-disabled",label:"Disabled",defaultValue:"Hello World"}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.jsx)(_monorail_components__WEBPACK_IMPORTED_MODULE_4__.nv,{id:"outlined-password-input",label:"Password",type:"password",autoComplete:"current-password"}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.jsx)(_monorail_components__WEBPACK_IMPORTED_MODULE_4__.nv,{id:"outlined-read-only-input",label:"Read Only",defaultValue:"Hello World",InputProps:{readOnly:!0}}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.jsx)(_monorail_components__WEBPACK_IMPORTED_MODULE_4__.nv,{id:"outlined-number",label:"Number",type:"number"}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.jsx)(_monorail_components__WEBPACK_IMPORTED_MODULE_4__.nv,{id:"outlined-search",label:"Search field",type:"search"}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.jsx)(_monorail_components__WEBPACK_IMPORTED_MODULE_4__.nv,{id:"outlined-helperText",label:"Helper text",defaultValue:"Default Value",helperText:"Some important text"})]})})),{parameters:{docs:{description:{story:"Standard form attributes are supported e.g. `required`, `disabled`, `type`, etc. as well as a `helperText` which is used to give context about a field's input, such as how the input will be used."}}}}),Validation=(0,_helpers_storybook_js__WEBPACK_IMPORTED_MODULE_2__.yg)((()=>(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.jsx)(_mui_material_Box__WEBPACK_IMPORTED_MODULE_5__.Z,{component:"form",sx:{"& .MuiTextField-root":{mr:2,width:"25ch"}},noValidate:!0,autoComplete:"off",children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.jsxs)("div",{children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.jsx)(_monorail_components__WEBPACK_IMPORTED_MODULE_4__.nv,{error:!0,id:"outlined-error",label:"Error",defaultValue:"Hello World"}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.jsx)(_monorail_components__WEBPACK_IMPORTED_MODULE_4__.nv,{error:!0,id:"outlined-error-helper-text",label:"Error",defaultValue:"Hello World",helperText:"Incorrect entry."})]})})),{parameters:{docs:{description:{story:"The `error` prop toggles the error state. The `helperText` prop can then be used to provide feedback to the user about the error."}}}}),Multiline=(0,_helpers_storybook_js__WEBPACK_IMPORTED_MODULE_2__.yg)((()=>{const[value,setValue]=react__WEBPACK_IMPORTED_MODULE_0__.useState("Controlled");return(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.jsx)(_mui_material_Box__WEBPACK_IMPORTED_MODULE_5__.Z,{component:"form",sx:{"& .MuiTextField-root":{mr:2,width:"25ch"}},noValidate:!0,autoComplete:"off",children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.jsxs)("div",{children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.jsx)(_monorail_components__WEBPACK_IMPORTED_MODULE_4__.nv,{id:"outlined-multiline-flexible",label:"Multiline",multiline:!0,maxRows:4,value,onChange:event=>{setValue(event.target.value)}}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.jsx)(_monorail_components__WEBPACK_IMPORTED_MODULE_4__.nv,{id:"outlined-textarea",label:"Multiline Placeholder",placeholder:"Placeholder",multiline:!0}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.jsx)(_monorail_components__WEBPACK_IMPORTED_MODULE_4__.nv,{id:"outlined-multiline-static",label:"Multiline",multiline:!0,rows:4,defaultValue:"Default Value"})]})})}),{parameters:{docs:{description:{story:"The `multiline` prop transforms the text field into a [`<textarea>`](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/textarea) element. Unless the `rows` prop is set, the height of the text field dynamically matches its content (using [TextareaAutosize](https://next.material-ui.com/components/textarea-autosize/)). You can use the `minRows` and `maxRows` props to bound it."}}}}),currencies=[{value:"USD",label:"$"},{value:"EUR",label:"€"},{value:"BTC",label:"฿"},{value:"JPY",label:"¥"}],SelectTextFields=(0,_helpers_storybook_js__WEBPACK_IMPORTED_MODULE_2__.yg)((args=>{const[currency,setCurrency]=react__WEBPACK_IMPORTED_MODULE_0__.useState("EUR"),handleChange=event=>{setCurrency(event.target.value)};return(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.jsx)(_mui_material_Box__WEBPACK_IMPORTED_MODULE_5__.Z,{component:"form",sx:{"& .MuiTextField-root":{m:1,width:"25ch"}},noValidate:!0,autoComplete:"off",children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.jsxs)("div",{children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.jsx)(_monorail_components__WEBPACK_IMPORTED_MODULE_4__.nv,{id:"outlined-select-currency",select:!0,label:"Select",value:currency,onChange:handleChange,helperText:"Please select your currency",...args,children:currencies.map((option=>(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.jsx)(_monorail_components__WEBPACK_IMPORTED_MODULE_6__.sN,{value:option.value,children:option.label},option.value)))}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.jsx)(_monorail_components__WEBPACK_IMPORTED_MODULE_4__.nv,{id:"outlined-select-currency-native",select:!0,label:"Native select",value:currency,onChange:handleChange,SelectProps:{native:!0},helperText:"Please select your currency",...args,children:currencies.map((option=>(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.jsx)("option",{value:option.value,children:option.label},option.value)))})]})})})),InputAdornments=(0,_helpers_storybook_js__WEBPACK_IMPORTED_MODULE_2__.yg)((()=>{const[values,setValues]=react__WEBPACK_IMPORTED_MODULE_0__.useState({amount:"",password:"",weight:"",weightRange:"",showPassword:!1}),handleChange=prop=>event=>{setValues({...values,[prop]:event.target.value})};return(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.jsx)(_mui_material_Box__WEBPACK_IMPORTED_MODULE_5__.Z,{sx:{display:"flex",flexWrap:"wrap"},children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.jsxs)("div",{children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.jsx)(_monorail_components__WEBPACK_IMPORTED_MODULE_4__.nv,{label:"With normal TextField",id:"outlined-start-adornment",sx:{mr:2,width:"25ch"},InputProps:{startAdornment:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.jsx)(_mui_material_InputAdornment__WEBPACK_IMPORTED_MODULE_7__.Z,{position:"start",children:"kg"})}}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.jsxs)(_mui_material_FormControl__WEBPACK_IMPORTED_MODULE_8__.Z,{sx:{mr:2,width:"25ch"},variant:"outlined",children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.jsx)(_mui_material_OutlinedInput__WEBPACK_IMPORTED_MODULE_9__.Z,{id:"outlined-adornment-weight",value:values.weight,onChange:handleChange("weight"),endAdornment:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.jsx)(_mui_material_InputAdornment__WEBPACK_IMPORTED_MODULE_7__.Z,{position:"end",children:"kg"}),"aria-describedby":"outlined-weight-helper-text",inputProps:{"aria-label":"weight"}}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.jsx)(_mui_material_FormHelperText__WEBPACK_IMPORTED_MODULE_10__.Z,{id:"outlined-weight-helper-text",children:"Weight"})]}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.jsxs)(_mui_material_FormControl__WEBPACK_IMPORTED_MODULE_8__.Z,{sx:{mr:2,width:"25ch"},variant:"outlined",children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.jsx)(_mui_material_InputLabel__WEBPACK_IMPORTED_MODULE_11__.Z,{htmlFor:"outlined-adornment-password",children:"Password"}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.jsx)(_mui_material_OutlinedInput__WEBPACK_IMPORTED_MODULE_9__.Z,{id:"outlined-adornment-password",type:values.showPassword?"text":"password",value:values.password,onChange:handleChange("password"),endAdornment:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.jsx)(_mui_material_InputAdornment__WEBPACK_IMPORTED_MODULE_7__.Z,{position:"end",children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.jsx)(_mui_material_IconButton__WEBPACK_IMPORTED_MODULE_12__.Z,{"aria-label":"toggle password visibility",onClick:()=>{setValues({...values,showPassword:!values.showPassword})},onMouseDown:event=>{event.preventDefault()},edge:"end",children:values.showPassword?(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.jsx)(_mui_icons_material_VisibilityOff__WEBPACK_IMPORTED_MODULE_13__.Z,{}):(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.jsx)(_mui_icons_material_Visibility__WEBPACK_IMPORTED_MODULE_14__.Z,{})})}),label:"Password"})]}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.jsxs)(_mui_material_FormControl__WEBPACK_IMPORTED_MODULE_8__.Z,{fullWidth:!0,sx:{mr:2},children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.jsx)(_mui_material_InputLabel__WEBPACK_IMPORTED_MODULE_11__.Z,{htmlFor:"outlined-adornment-amount",children:"Amount"}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.jsx)(_mui_material_OutlinedInput__WEBPACK_IMPORTED_MODULE_9__.Z,{id:"outlined-adornment-amount",value:values.amount,onChange:handleChange("amount"),startAdornment:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.jsx)(_mui_material_InputAdornment__WEBPACK_IMPORTED_MODULE_7__.Z,{position:"start",children:"$"}),label:"Amount"})]})]})})}),{parameters:{docs:{description:{story:"The main way is with an `InputAdornment`. This can be used to add a prefix, a suffix, or an action to an input. For instance, you can use an icon button to hide or reveal the password."}}}}),Sizes=(0,_helpers_storybook_js__WEBPACK_IMPORTED_MODULE_2__.yg)((()=>{const theme=(0,_monorail_utils__WEBPACK_IMPORTED_MODULE_15__.Z)();return(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.jsx)(_mui_material_Box__WEBPACK_IMPORTED_MODULE_5__.Z,{component:"form",sx:{"& .MuiTextField-root":{mr:1,width:"25ch"}},noValidate:!0,autoComplete:"off",children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.jsxs)("div",{children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.jsx)(_monorail_components__WEBPACK_IMPORTED_MODULE_4__.nv,{label:"Size",id:"outlined-size-small",defaultValue:"Small",size:"small"}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.jsx)(_monorail_components__WEBPACK_IMPORTED_MODULE_4__.nv,{label:"Size",id:"outlined-size-medium",defaultValue:"Medium"}),(0,_helpers_helpers_js__WEBPACK_IMPORTED_MODULE_1__.pQ)(theme.name)&&(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.jsx)(_monorail_components__WEBPACK_IMPORTED_MODULE_4__.nv,{label:"Size",id:"outlined-size-large",defaultValue:"Large",size:"large"})]})})}),{parameters:{docs:{description:{story:"Fancy smaller inputs? Use the size prop."}}}}),Margin=(0,_helpers_storybook_js__WEBPACK_IMPORTED_MODULE_2__.yg)((()=>{function RedBar(){return(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.jsx)(_mui_material_Box__WEBPACK_IMPORTED_MODULE_5__.Z,{sx:{height:20,backgroundColor:theme=>"light"===theme.palette.mode?"rgba(255, 0, 0, 0.1)":"rgb(255 132 132 / 25%)"}})}return(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.jsxs)(_mui_material_Box__WEBPACK_IMPORTED_MODULE_5__.Z,{sx:{display:"flex",flexDirection:"column","& .MuiTextField-root":{width:"25ch"}},children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.jsx)(RedBar,{}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.jsx)(_monorail_components__WEBPACK_IMPORTED_MODULE_4__.nv,{label:'margin="none"',id:"margin-none"}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.jsx)(RedBar,{}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.jsx)(_monorail_components__WEBPACK_IMPORTED_MODULE_4__.nv,{label:'margin="dense"',id:"margin-dense",margin:"dense"}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.jsx)(RedBar,{}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.jsx)(_monorail_components__WEBPACK_IMPORTED_MODULE_4__.nv,{label:'margin="normal"',id:"margin-normal",margin:"normal"}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.jsx)(RedBar,{})]})}),{parameters:{docs:{description:{story:"The `margin` prop can be used to alter the vertical spacing of the text field. Using `none` (default) doesn't apply margins to the `FormControl` whereas `dense` and `normal` do."}}}}),FullWidth=(0,_helpers_storybook_js__WEBPACK_IMPORTED_MODULE_2__.yg)((args=>(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.jsx)(_mui_material_Box__WEBPACK_IMPORTED_MODULE_5__.Z,{sx:{width:500,maxWidth:"100%"},children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.jsx)(_monorail_components__WEBPACK_IMPORTED_MODULE_4__.nv,{fullWidth:!0,label:"fullWidth",id:"fullWidth",...args})}))),ControlledVsUncontrolled=(0,_helpers_storybook_js__WEBPACK_IMPORTED_MODULE_2__.yg)((args=>{const[name,setName]=react__WEBPACK_IMPORTED_MODULE_0__.useState("Cat in the Hat");return(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.jsxs)(_mui_material_Box__WEBPACK_IMPORTED_MODULE_5__.Z,{component:"form",sx:{"& > :not(style)":{m:1,width:"25ch"}},noValidate:!0,autoComplete:"off",children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.jsx)(_monorail_components__WEBPACK_IMPORTED_MODULE_4__.nv,{id:"outlined-name",label:"Name",value:name,onChange:event=>{setName(event.target.value)},...args}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.jsx)(_monorail_components__WEBPACK_IMPORTED_MODULE_4__.nv,{id:"outlined-uncontrolled",label:"Uncontrolled",defaultValue:"foo",...args})]})})),ComposedTextField=(0,_helpers_storybook_js__WEBPACK_IMPORTED_MODULE_2__.yg)((()=>{const[name,setName]=react__WEBPACK_IMPORTED_MODULE_0__.useState("Composed TextField"),handleChange=event=>{setName(event.target.value)};return(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.jsxs)(_mui_material_Box__WEBPACK_IMPORTED_MODULE_5__.Z,{component:"form",sx:{"& > :not(style)":{mr:2}},noValidate:!0,autoComplete:"off",children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.jsxs)(_mui_material_FormControl__WEBPACK_IMPORTED_MODULE_8__.Z,{variant:"outlined",children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.jsx)(_mui_material_InputLabel__WEBPACK_IMPORTED_MODULE_11__.Z,{htmlFor:"component-simple",children:"Name"}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.jsx)(_mui_material_OutlinedInput__WEBPACK_IMPORTED_MODULE_9__.Z,{id:"component-simple",value:name,onChange:handleChange})]}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.jsxs)(_mui_material_FormControl__WEBPACK_IMPORTED_MODULE_8__.Z,{children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.jsx)(_mui_material_InputLabel__WEBPACK_IMPORTED_MODULE_11__.Z,{htmlFor:"component-helper",children:"Name"}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.jsx)(_mui_material_OutlinedInput__WEBPACK_IMPORTED_MODULE_9__.Z,{id:"component-helper",value:name,onChange:handleChange,"aria-describedby":"component-helper-text"}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.jsx)(_mui_material_FormHelperText__WEBPACK_IMPORTED_MODULE_10__.Z,{id:"component-helper-text",children:"Some important helper text"})]}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.jsxs)(_mui_material_FormControl__WEBPACK_IMPORTED_MODULE_8__.Z,{disabled:!0,children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.jsx)(_mui_material_InputLabel__WEBPACK_IMPORTED_MODULE_11__.Z,{htmlFor:"component-disabled",children:"Name"}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.jsx)(_mui_material_OutlinedInput__WEBPACK_IMPORTED_MODULE_9__.Z,{id:"component-disabled",value:name,onChange:handleChange,"aria-describedby":"component-disabled-text"}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.jsx)(_mui_material_FormHelperText__WEBPACK_IMPORTED_MODULE_10__.Z,{id:"component-disabled-text",children:"Disabled"})]}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.jsxs)(_mui_material_FormControl__WEBPACK_IMPORTED_MODULE_8__.Z,{error:!0,children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.jsx)(_mui_material_InputLabel__WEBPACK_IMPORTED_MODULE_11__.Z,{htmlFor:"component-error",children:"Name"}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.jsx)(_mui_material_OutlinedInput__WEBPACK_IMPORTED_MODULE_9__.Z,{id:"component-error",value:name,onChange:handleChange,"aria-describedby":"component-error-text"}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.jsx)(_mui_material_FormHelperText__WEBPACK_IMPORTED_MODULE_10__.Z,{id:"component-error-text",children:"Error"})]}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.jsxs)(_mui_material_FormControl__WEBPACK_IMPORTED_MODULE_8__.Z,{sx:{display:"flex",flexDirection:"row"},children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.jsx)(_mui_material_InputLabel__WEBPACK_IMPORTED_MODULE_11__.Z,{htmlFor:"label-on-left",sx:{m:0,mt:3,mr:3,left:0},children:"Select"}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.jsxs)(_mui_material_Box__WEBPACK_IMPORTED_MODULE_5__.Z,{children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.jsx)(_mui_material_OutlinedInput__WEBPACK_IMPORTED_MODULE_9__.Z,{id:"label-on-left",value:name,onChange:handleChange,"aria-describedby":"label-on-left-text"}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.jsx)(_mui_material_FormHelperText__WEBPACK_IMPORTED_MODULE_10__.Z,{id:"label-on-left-text",children:"Some important helper text"})]})]})]})}),{parameters:{docs:{description:{story:"`TextField` is composed of smaller components ( [FormControl](https://next.material-ui.com/api/form-control/), [Input](https://next.material-ui.com/api/input/), [FilledInput](https://next.material-ui.com/api/filled-input/), [InputLabel](https://next.material-ui.com/api/input-label/), [OutlinedInput](https://next.material-ui.com/api/outlined-input/), and [FormHelperText](https://next.material-ui.com/api/form-helper-text/) ) that you can leverage directly to significantly customize your form inputs.\nYou might also have noticed that some native HTML input properties are missing from the `TextField` component. This is on purpose. The component takes care of the most used properties. Then, it's up to the user to use the underlying component shown in the following demo. Still, you can use `inputProps` (and `InputProps`, `InputLabelProps` properties) if you want to avoid some boilerplate."}}}}),CssTextField=(0,_mui_material__WEBPACK_IMPORTED_MODULE_16__.ZP)(_monorail_components__WEBPACK_IMPORTED_MODULE_4__.nv)({"& label.Mui-focused":{color:"green"},"& .MuiInput-underline:after":{borderBottomColor:"green"},"& .MuiOutlinedInput-root":{"& fieldset":{borderColor:"red"},"&:hover fieldset":{borderColor:"yellow"},"&.Mui-focused fieldset":{borderColor:"green"}}}),BootstrapInput=(0,_mui_material__WEBPACK_IMPORTED_MODULE_16__.ZP)(_mui_material_InputBase__WEBPACK_IMPORTED_MODULE_17__.ZP)((({theme})=>({"label + &":{marginTop:theme.spacing(3)},"& .MuiInputBase-input":{borderRadius:4,position:"relative",backgroundColor:"light"===theme.palette.mode?"#fcfcfb":"#2b2b2b",border:"1px solid #ced4da",fontSize:16,padding:"10px 12px",transition:theme.transitions.create(["border-color","background-color","box-shadow"]),fontFamily:["-apple-system","BlinkMacSystemFont",'"Segoe UI"',"Roboto",'"Helvetica Neue"',"Arial","sans-serif",'"Apple Color Emoji"','"Segoe UI Emoji"','"Segoe UI Symbol"'].join(","),"&:focus":{boxShadow:`${(0,_mui_material__WEBPACK_IMPORTED_MODULE_18__.Fq)(theme.palette.primary.main,.25)} 0 0 0 0.2rem`,borderColor:theme.palette.primary.main}}}))),RedditTextField=(0,_mui_material__WEBPACK_IMPORTED_MODULE_16__.ZP)((props=>(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.jsx)(_monorail_components__WEBPACK_IMPORTED_MODULE_4__.nv,{InputProps:{disableUnderline:!0},...props})))((({theme})=>({"& .MuiFilledInput-root":{border:"1px solid #e2e2e1",overflow:"hidden",borderRadius:4,backgroundColor:"light"===theme.palette.mode?"#fcfcfb":"#2b2b2b",transition:theme.transitions.create(["border-color","background-color","box-shadow"]),"&:hover":{backgroundColor:"transparent"},"&.Mui-focused":{backgroundColor:"transparent",boxShadow:`${(0,_mui_material__WEBPACK_IMPORTED_MODULE_18__.Fq)(theme.palette.primary.main,.25)} 0 0 0 2px`,borderColor:theme.palette.primary.main}}}))),ValidationTextField=(0,_mui_material__WEBPACK_IMPORTED_MODULE_16__.ZP)(_monorail_components__WEBPACK_IMPORTED_MODULE_4__.nv)({"& input:valid + fieldset":{borderColor:"green",borderWidth:2},"& input:invalid + fieldset":{borderColor:"red",borderWidth:2},"& input:valid:focus + fieldset":{borderLeftWidth:6,padding:"4px !important"}}),Customization=(0,_helpers_storybook_js__WEBPACK_IMPORTED_MODULE_2__.yg)((()=>(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.jsxs)(_mui_material_Box__WEBPACK_IMPORTED_MODULE_5__.Z,{component:"form",noValidate:!0,sx:{display:"grid",gridTemplateColumns:{sm:"1fr 1fr"},gap:2},children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.jsxs)(_mui_material_FormControl__WEBPACK_IMPORTED_MODULE_8__.Z,{variant:"standard",children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.jsx)(_mui_material_InputLabel__WEBPACK_IMPORTED_MODULE_11__.Z,{shrink:!0,htmlFor:"bootstrap-input",children:"Bootstrap"}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.jsx)(BootstrapInput,{defaultValue:"react-bootstrap",id:"bootstrap-input"})]}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.jsx)(RedditTextField,{label:"Reddit",defaultValue:"react-reddit",id:"reddit-input",variant:"filled",style:{marginTop:11}}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.jsx)(CssTextField,{label:"Custom CSS",id:"custom-css-outlined-input"}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.jsx)(ValidationTextField,{label:"CSS validation style",required:!0,variant:"outlined",defaultValue:"Success",id:"validation-outlined-input"})]})),{parameters:{docs:{description:{story:"Here are some examples of customizing the component. You can learn more about this in the [overrides documentation page](https://next.material-ui.com/customization/how-to-customize/)."}}}});function MyFormHelperText(){const{focused}=(0,_monorail_components__WEBPACK_IMPORTED_MODULE_19__.Z)()||{},helperText=react__WEBPACK_IMPORTED_MODULE_0__.useMemo((()=>void 0!==focused?"This field is being focused":"Helper text"),[focused]);return(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.jsx)(_mui_material_FormHelperText__WEBPACK_IMPORTED_MODULE_10__.Z,{children:helperText})}MyFormHelperText.displayName="MyFormHelperText";const UseFormControl=(0,_helpers_storybook_js__WEBPACK_IMPORTED_MODULE_2__.yg)((()=>(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.jsx)(_mui_material_Box__WEBPACK_IMPORTED_MODULE_5__.Z,{component:"form",noValidate:!0,autoComplete:"off",children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.jsxs)(_mui_material_FormControl__WEBPACK_IMPORTED_MODULE_8__.Z,{sx:{width:"25ch"},children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.jsx)(_mui_material_OutlinedInput__WEBPACK_IMPORTED_MODULE_9__.Z,{placeholder:"Please enter text"}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.jsx)(MyFormHelperText,{})]})})),{parameters:{docs:{description:{story:"For advanced customization use cases, a useFormControl() hook is exposed. This hook returns the context value of the parent FormControl component.\n\n**Returns**\n\nvalue (object):\n\n- value.adornedStart (bool): Indicate whether the child Input or Select component has a start adornment.\n- value.setAdornedStart (func): Setter function for adornedStart state value.\n- value.color (string): The theme color is being used, inherited from FormControl color prop .\n- value.disabled (bool): Indicate whether the component is being displayed in a disabled state, inherited from FormControl disabled prop.\n- value.error (bool): Indicate whether the component is being displayed in an error state, inherited from FormControl error prop\n- value.filled (bool): Indicate whether input is filled\n- value.focused (bool): Indicate whether the component and its children are being displayed in a focused state\n- value.fullWidth (bool): Indicate whether the component is taking up the full width of its container, inherited from FormControl fullWidth prop\n- value.hiddenLabel (bool): Indicate whether the label is being hidden, inherited from FormControl hiddenLabel prop\n- value.required (bool): Indicate whether the label is indicating that the input is required input, inherited from the FormControl required prop\n- value.size (string): The size of the component, inherited from the FormControl size prop\n- value.variant (string): The variant is being used by the FormControl component and its children, inherited from FormControl variant prop\n- value.onBlur (func): Should be called when the input is blurred\n- value.onFocus (func): Should be called when the input is focused\n- value.onEmpty (func): Should be called when the input is emptied\n- value.onFilled (func): Should be called when the input is filled\n        "}}}});Default.parameters={...Default.parameters,docs:{...Default.parameters?.docs,source:{originalSource:"story(Template)",...Default.parameters?.docs?.source}}},BasicTextField.parameters={...BasicTextField.parameters,docs:{...BasicTextField.parameters?.docs,source:{originalSource:'story(args => <Box component="form" sx={{\n  \'& > :not(style)\': {\n    mr: 1,\n    width: \'25ch\'\n  }\n}} noValidate autoComplete="off">\n      <TextField id="outlined-basic" label="Outlined" variant="outlined" {...args} />\n    </Box>, {\n  parameters: {\n    docs: {\n      description: {\n        story: \'The `TextField` wrapper component is a complete form control including a label, input, and help text. We only use the outlined variant in Monorail.\'\n      }\n    }\n  }\n})',...BasicTextField.parameters?.docs?.source}}},FormProps.parameters={...FormProps.parameters,docs:{...FormProps.parameters?.docs,source:{originalSource:'story(() => <Box component="form" sx={{\n  \'& .MuiTextField-root\': {\n    mr: 2,\n    width: \'25ch\'\n  }\n}} noValidate autoComplete="off">\n      <div>\n        <TextField required id="outlined-required" label="Required" defaultValue="Hello World" />\n        <TextField disabled id="outlined-disabled" label="Disabled" defaultValue="Hello World" />\n        <TextField id="outlined-password-input" label="Password" type="password" autoComplete="current-password" />\n        <TextField id="outlined-read-only-input" label="Read Only" defaultValue="Hello World" InputProps={{\n      readOnly: true\n    }} />\n        <TextField id="outlined-number" label="Number" type="number" />\n        <TextField id="outlined-search" label="Search field" type="search" />\n        <TextField id="outlined-helperText" label="Helper text" defaultValue="Default Value" helperText="Some important text" />\n      </div>\n    </Box>, {\n  parameters: {\n    docs: {\n      description: {\n        story: "Standard form attributes are supported e.g. `required`, `disabled`, `type`, etc. as well as a `helperText` which is used to give context about a field\'s input, such as how the input will be used."\n      }\n    }\n  }\n})',...FormProps.parameters?.docs?.source}}},Validation.parameters={...Validation.parameters,docs:{...Validation.parameters?.docs,source:{originalSource:'story(() => <Box component="form" sx={{\n  \'& .MuiTextField-root\': {\n    mr: 2,\n    width: \'25ch\'\n  }\n}} noValidate autoComplete="off">\n      <div>\n        <TextField error id="outlined-error" label="Error" defaultValue="Hello World" />\n        <TextField error id="outlined-error-helper-text" label="Error" defaultValue="Hello World" helperText="Incorrect entry." />\n      </div>\n    </Box>, {\n  parameters: {\n    docs: {\n      description: {\n        story: \'The `error` prop toggles the error state. The `helperText` prop can then be used to provide feedback to the user about the error.\'\n      }\n    }\n  }\n})',...Validation.parameters?.docs?.source}}},Multiline.parameters={...Multiline.parameters,docs:{...Multiline.parameters?.docs,source:{originalSource:'story(() => {\n  const [value, setValue] = React.useState(\'Controlled\');\n  const handleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setValue(event.target.value);\n  };\n  return <Box component="form" sx={{\n    \'& .MuiTextField-root\': {\n      mr: 2,\n      width: \'25ch\'\n    }\n  }} noValidate autoComplete="off">\n        <div>\n          <TextField id="outlined-multiline-flexible" label="Multiline" multiline maxRows={4} value={value} onChange={handleChange} />\n          <TextField id="outlined-textarea" label="Multiline Placeholder" placeholder="Placeholder" multiline />\n          <TextField id="outlined-multiline-static" label="Multiline" multiline rows={4} defaultValue="Default Value" />\n        </div>\n      </Box>;\n}, {\n  parameters: {\n    docs: {\n      description: {\n        story: \'The `multiline` prop transforms the text field into a [`<textarea>`](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/textarea) element. Unless the `rows` prop is set, the height of the text field dynamically matches its content (using [TextareaAutosize](https://next.material-ui.com/components/textarea-autosize/)). You can use the `minRows` and `maxRows` props to bound it.\'\n      }\n    }\n  }\n})',...Multiline.parameters?.docs?.source}}},SelectTextFields.parameters={...SelectTextFields.parameters,docs:{...SelectTextFields.parameters?.docs,source:{originalSource:'story<TextFieldProps>(args => {\n  const [currency, setCurrency] = React.useState(\'EUR\');\n  const handleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setCurrency(event.target.value);\n  };\n  return <Box component="form" sx={{\n    \'& .MuiTextField-root\': {\n      m: 1,\n      width: \'25ch\'\n    }\n  }} noValidate autoComplete="off">\n      <div>\n        <TextField id="outlined-select-currency" select label="Select" value={currency} onChange={handleChange} helperText="Please select your currency" {...args}>\n          {currencies.map(option => <MenuItem key={option.value} value={option.value}>\n              {option.label}\n            </MenuItem>)}\n        </TextField>\n        <TextField id="outlined-select-currency-native" select label="Native select" value={currency} onChange={handleChange} SelectProps={{\n        native: true\n      }} helperText="Please select your currency" {...args}>\n          {currencies.map(option => <option key={option.value} value={option.value}>\n              {option.label}\n            </option>)}\n        </TextField>\n      </div>\n    </Box>;\n})',...SelectTextFields.parameters?.docs?.source}}},InputAdornments.parameters={...InputAdornments.parameters,docs:{...InputAdornments.parameters?.docs,source:{originalSource:'story(() => {\n  interface State {\n    amount: string;\n    password: string;\n    weight: string;\n    weightRange: string;\n    showPassword: boolean;\n  }\n  const [values, setValues] = React.useState<State>({\n    amount: \'\',\n    password: \'\',\n    weight: \'\',\n    weightRange: \'\',\n    showPassword: false\n  });\n  const handleChange = (prop: keyof State) => (event: React.ChangeEvent<HTMLInputElement>) => {\n    setValues({\n      ...values,\n      [prop]: event.target.value\n    });\n  };\n  const handleClickShowPassword = () => {\n    setValues({\n      ...values,\n      showPassword: !values.showPassword\n    });\n  };\n  const handleMouseDownPassword = (event: React.MouseEvent<HTMLButtonElement>) => {\n    event.preventDefault();\n  };\n  return <Box sx={{\n    display: \'flex\',\n    flexWrap: \'wrap\'\n  }}>\n        <div>\n          <TextField label="With normal TextField" id="outlined-start-adornment" sx={{\n        mr: 2,\n        width: \'25ch\'\n      }} InputProps={{\n        startAdornment: <InputAdornment position="start">kg</InputAdornment>\n      }} />\n          <FormControl sx={{\n        mr: 2,\n        width: \'25ch\'\n      }} variant="outlined">\n            <OutlinedInput id="outlined-adornment-weight" value={values.weight} onChange={handleChange(\'weight\')} endAdornment={<InputAdornment position="end">kg</InputAdornment>} aria-describedby="outlined-weight-helper-text" inputProps={{\n          \'aria-label\': \'weight\'\n        }} />\n            <FormHelperText id="outlined-weight-helper-text">\n              Weight\n            </FormHelperText>\n          </FormControl>\n          <FormControl sx={{\n        mr: 2,\n        width: \'25ch\'\n      }} variant="outlined">\n            <InputLabel htmlFor="outlined-adornment-password">\n              Password\n            </InputLabel>\n            <OutlinedInput id="outlined-adornment-password" type={values.showPassword ? \'text\' : \'password\'} value={values.password} onChange={handleChange(\'password\')} endAdornment={<InputAdornment position="end">\n                  <IconButton aria-label="toggle password visibility" onClick={handleClickShowPassword} onMouseDown={handleMouseDownPassword} edge="end">\n                    {values.showPassword ? <VisibilityOff /> : <Visibility />}\n                  </IconButton>\n                </InputAdornment>} label="Password" />\n          </FormControl>\n          <FormControl fullWidth sx={{\n        mr: 2\n      }}>\n            <InputLabel htmlFor="outlined-adornment-amount">Amount</InputLabel>\n            <OutlinedInput id="outlined-adornment-amount" value={values.amount} onChange={handleChange(\'amount\')} startAdornment={<InputAdornment position="start">$</InputAdornment>} label="Amount" />\n          </FormControl>\n        </div>\n      </Box>;\n}, {\n  parameters: {\n    docs: {\n      description: {\n        story: \'The main way is with an `InputAdornment`. This can be used to add a prefix, a suffix, or an action to an input. For instance, you can use an icon button to hide or reveal the password.\'\n      }\n    }\n  }\n})',...InputAdornments.parameters?.docs?.source}}},Sizes.parameters={...Sizes.parameters,docs:{...Sizes.parameters?.docs,source:{originalSource:'story(() => {\n  const theme = useTheme();\n  return <Box component="form" sx={{\n    \'& .MuiTextField-root\': {\n      mr: 1,\n      width: \'25ch\'\n    }\n  }} noValidate autoComplete="off">\n        <div>\n          <TextField label="Size" id="outlined-size-small" defaultValue="Small" size="small" />\n          <TextField label="Size" id="outlined-size-medium" defaultValue="Medium" />\n          {isMeteorTheme(theme.name) && <TextField label="Size" id="outlined-size-large" defaultValue="Large" size="large" />}\n        </div>\n      </Box>;\n}, {\n  parameters: {\n    docs: {\n      description: {\n        story: \'Fancy smaller inputs? Use the size prop.\'\n      }\n    }\n  }\n})',...Sizes.parameters?.docs?.source}}},Margin.parameters={...Margin.parameters,docs:{...Margin.parameters?.docs,source:{originalSource:"story(() => {\n  function RedBar() {\n    return <Box sx={{\n      height: 20,\n      backgroundColor: theme => theme.palette.mode === 'light' ? 'rgba(255, 0, 0, 0.1)' : 'rgb(255 132 132 / 25%)'\n    }} />;\n  }\n  return <Box sx={{\n    display: 'flex',\n    flexDirection: 'column',\n    '& .MuiTextField-root': {\n      width: '25ch'\n    }\n  }}>\n        <RedBar />\n        <TextField label={'margin=\"none\"'} id=\"margin-none\" />\n        <RedBar />\n        <TextField label={'margin=\"dense\"'} id=\"margin-dense\" margin=\"dense\" />\n        <RedBar />\n        <TextField label={'margin=\"normal\"'} id=\"margin-normal\" margin=\"normal\" />\n        <RedBar />\n      </Box>;\n}, {\n  parameters: {\n    docs: {\n      description: {\n        story: \"The `margin` prop can be used to alter the vertical spacing of the text field. Using `none` (default) doesn't apply margins to the `FormControl` whereas `dense` and `normal` do.\"\n      }\n    }\n  }\n})",...Margin.parameters?.docs?.source}}},FullWidth.parameters={...FullWidth.parameters,docs:{...FullWidth.parameters?.docs,source:{originalSource:'story<TextFieldProps>(args => {\n  return <Box sx={{\n    width: 500,\n    maxWidth: \'100%\'\n  }}>\n      <TextField fullWidth label="fullWidth" id="fullWidth" {...args} />\n    </Box>;\n})',...FullWidth.parameters?.docs?.source}}},ControlledVsUncontrolled.parameters={...ControlledVsUncontrolled.parameters,docs:{...ControlledVsUncontrolled.parameters?.docs,source:{originalSource:'story<TextFieldProps>(args => {\n  const [name, setName] = React.useState(\'Cat in the Hat\');\n  const handleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setName(event.target.value);\n  };\n  return <Box component="form" sx={{\n    \'& > :not(style)\': {\n      m: 1,\n      width: \'25ch\'\n    }\n  }} noValidate autoComplete="off">\n      <TextField id="outlined-name" label="Name" value={name} onChange={handleChange} {...args} />\n      <TextField id="outlined-uncontrolled" label="Uncontrolled" defaultValue="foo" {...args} />\n    </Box>;\n})',...ControlledVsUncontrolled.parameters?.docs?.source}}},ComposedTextField.parameters={...ComposedTextField.parameters,docs:{...ComposedTextField.parameters?.docs,source:{originalSource:'story(() => {\n  const [name, setName] = React.useState(\'Composed TextField\');\n  const handleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setName(event.target.value);\n  };\n  return <Box component="form" sx={{\n    \'& > :not(style)\': {\n      mr: 2\n    }\n  }} noValidate autoComplete="off">\n        <FormControl variant="outlined">\n          <InputLabel htmlFor="component-simple">Name</InputLabel>\n          <OutlinedInput id="component-simple" value={name} onChange={handleChange} />\n        </FormControl>\n        <FormControl>\n          <InputLabel htmlFor="component-helper">Name</InputLabel>\n          <OutlinedInput id="component-helper" value={name} onChange={handleChange} aria-describedby="component-helper-text" />\n          <FormHelperText id="component-helper-text">\n            Some important helper text\n          </FormHelperText>\n        </FormControl>\n        <FormControl disabled>\n          <InputLabel htmlFor="component-disabled">Name</InputLabel>\n          <OutlinedInput id="component-disabled" value={name} onChange={handleChange} aria-describedby="component-disabled-text" />\n          <FormHelperText id="component-disabled-text">Disabled</FormHelperText>\n        </FormControl>\n        <FormControl error>\n          <InputLabel htmlFor="component-error">Name</InputLabel>\n          <OutlinedInput id="component-error" value={name} onChange={handleChange} aria-describedby="component-error-text" />\n          <FormHelperText id="component-error-text">Error</FormHelperText>\n        </FormControl>\n\n        <FormControl sx={{\n      display: \'flex\',\n      flexDirection: \'row\'\n    }}>\n          <InputLabel htmlFor="label-on-left" sx={{\n        m: 0,\n        mt: 3,\n        mr: 3,\n        left: 0\n      }}>\n            Select\n          </InputLabel>\n          <Box>\n            <OutlinedInput id="label-on-left" value={name} onChange={handleChange} aria-describedby="label-on-left-text" />\n            <FormHelperText id="label-on-left-text">\n              Some important helper text\n            </FormHelperText>\n          </Box>\n        </FormControl>\n      </Box>;\n}, {\n  parameters: {\n    docs: {\n      description: {\n        story: `\\`TextField\\` is composed of smaller components ( [FormControl](https://next.material-ui.com/api/form-control/), [Input](https://next.material-ui.com/api/input/), [FilledInput](https://next.material-ui.com/api/filled-input/), [InputLabel](https://next.material-ui.com/api/input-label/), [OutlinedInput](https://next.material-ui.com/api/outlined-input/), and [FormHelperText](https://next.material-ui.com/api/form-helper-text/) ) that you can leverage directly to significantly customize your form inputs.\nYou might also have noticed that some native HTML input properties are missing from the \\`TextField\\` component. This is on purpose. The component takes care of the most used properties. Then, it\'s up to the user to use the underlying component shown in the following demo. Still, you can use \\`inputProps\\` (and \\`InputProps\\`, \\`InputLabelProps\\` properties) if you want to avoid some boilerplate.`\n      }\n    }\n  }\n})',...ComposedTextField.parameters?.docs?.source}}},Customization.parameters={...Customization.parameters,docs:{...Customization.parameters?.docs,source:{originalSource:'story(() => <Box component="form" noValidate sx={{\n  display: \'grid\',\n  gridTemplateColumns: {\n    sm: \'1fr 1fr\'\n  },\n  gap: 2\n}}>\n      <FormControl variant="standard">\n        <InputLabel shrink htmlFor="bootstrap-input">\n          Bootstrap\n        </InputLabel>\n        <BootstrapInput defaultValue="react-bootstrap" id="bootstrap-input" />\n      </FormControl>\n      <RedditTextField label="Reddit" defaultValue="react-reddit" id="reddit-input" variant="filled" style={{\n    marginTop: 11\n  }} />\n      <CssTextField label="Custom CSS" id="custom-css-outlined-input" />\n      <ValidationTextField label="CSS validation style" required variant="outlined" defaultValue="Success" id="validation-outlined-input" />\n    </Box>, {\n  parameters: {\n    docs: {\n      description: {\n        story: \'Here are some examples of customizing the component. You can learn more about this in the [overrides documentation page](https://next.material-ui.com/customization/how-to-customize/).\'\n      }\n    }\n  }\n})',...Customization.parameters?.docs?.source}}},UseFormControl.parameters={...UseFormControl.parameters,docs:{...UseFormControl.parameters?.docs,source:{originalSource:'story<TextFieldProps>(() => {\n  return <Box component="form" noValidate autoComplete="off">\n        <FormControl sx={{\n      width: \'25ch\'\n    }}>\n          <OutlinedInput placeholder="Please enter text" />\n          <MyFormHelperText />\n        </FormControl>\n      </Box>;\n}, {\n  parameters: {\n    docs: {\n      description: {\n        story: `For advanced customization use cases, a useFormControl() hook is exposed. This hook returns the context value of the parent FormControl component.\n\n**Returns**\n\nvalue (object):\n\n- value.adornedStart (bool): Indicate whether the child Input or Select component has a start adornment.\n- value.setAdornedStart (func): Setter function for adornedStart state value.\n- value.color (string): The theme color is being used, inherited from FormControl color prop .\n- value.disabled (bool): Indicate whether the component is being displayed in a disabled state, inherited from FormControl disabled prop.\n- value.error (bool): Indicate whether the component is being displayed in an error state, inherited from FormControl error prop\n- value.filled (bool): Indicate whether input is filled\n- value.focused (bool): Indicate whether the component and its children are being displayed in a focused state\n- value.fullWidth (bool): Indicate whether the component is taking up the full width of its container, inherited from FormControl fullWidth prop\n- value.hiddenLabel (bool): Indicate whether the label is being hidden, inherited from FormControl hiddenLabel prop\n- value.required (bool): Indicate whether the label is indicating that the input is required input, inherited from the FormControl required prop\n- value.size (string): The size of the component, inherited from the FormControl size prop\n- value.variant (string): The variant is being used by the FormControl component and its children, inherited from FormControl variant prop\n- value.onBlur (func): Should be called when the input is blurred\n- value.onFocus (func): Should be called when the input is focused\n- value.onEmpty (func): Should be called when the input is emptied\n- value.onFilled (func): Should be called when the input is filled\n        `\n      }\n    }\n  }\n})',...UseFormControl.parameters?.docs?.source}}};const __namedExportsOrder=["Default","BasicTextField","FormProps","Validation","Multiline","SelectTextFields","InputAdornments","Sizes","Margin","FullWidth","ControlledVsUncontrolled","ComposedTextField","Customization","UseFormControl"]},"../components/src/MenuItem/MenuItem.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{sN:()=>MenuItem});const MenuItem=__webpack_require__("../../node_modules/@mui/material/MenuItem/MenuItem.js").Z;try{MenuItem.displayName="MenuItem",MenuItem.__docgenInfo={description:"\nDemos:\n\n- [Menu Item](https://simspace.gitlab.io/engineering/ux-engineering/monorail/main/storybook/?path=/docs/navigation-menu-menuitem--default)\n- [Menus](https://mui.com/material-ui/react-menu/)\n\nAPI:\n\n- [MenuItem API](https://mui.com/material-ui/api/menu-item/)\n- inherits [ButtonBase API](https://mui.com/material-ui/api/button-base/)",displayName:"MenuItem",props:{}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["../components/src/MenuItem/MenuItem.tsx#MenuItem"]={docgenInfo:MenuItem.__docgenInfo,name:"MenuItem",path:"../components/src/MenuItem/MenuItem.tsx#MenuItem"})}catch(__react_docgen_typescript_loader_error){}try{getMenuItemUtilityClass.displayName="getMenuItemUtilityClass",getMenuItemUtilityClass.__docgenInfo={description:"",displayName:"getMenuItemUtilityClass",props:{toString:{defaultValue:null,description:"Returns a string representation of a string.",name:"toString",required:!1,type:{name:"() => string"}},charAt:{defaultValue:null,description:"Returns the character at the specified index.\n@param pos The zero-based index of the desired character.",name:"charAt",required:!0,type:{name:"(pos: number) => string"}},charCodeAt:{defaultValue:null,description:"Returns the Unicode value of the character at the specified location.\n@param index The zero-based index of the desired character. If there is no character at the specified index, NaN is returned.",name:"charCodeAt",required:!0,type:{name:"(index: number) => number"}},indexOf:{defaultValue:null,description:"Returns the position of the first occurrence of a substring.\n@param searchString The substring to search for in the string\n@param position The index at which to begin searching the String object. If omitted, search starts at the beginning of the string.",name:"indexOf",required:!0,type:{name:"(searchString: string, position?: number) => number"}},lastIndexOf:{defaultValue:null,description:"Returns the last occurrence of a substring in the string.\n@param searchString The substring to search for.\n@param position The index at which to begin searching. If omitted, the search begins at the end of the string.",name:"lastIndexOf",required:!0,type:{name:"(searchString: string, position?: number) => number"}},localeCompare:{defaultValue:null,description:"Determines whether two strings are equivalent in the current locale.\nDetermines whether two strings are equivalent in the current or specified locale.\n@param that String to compare to target string\n@param that String to compare to target string\n@param locales A locale string or array of locale strings that contain one or more language or locale tags. If you include more than one locale string, list them in descending order of priority so that the first entry is the preferred locale. If you omit this parameter, the default locale of the JavaScript runtime is used. This parameter must conform to BCP 47 standards; see the Intl.Collator object for details.\n@param options An object that contains one or more properties that specify comparison options. see the Intl.Collator object for details.",name:"localeCompare",required:!0,type:{name:"{ (that: string): number; (that: string, locales?: string | string[], options?: CollatorOptions): number; }"}},match:{defaultValue:null,description:"Matches a string with a regular expression, and returns an array containing the results of that search.\nMatches a string or an object that supports being matched against, and returns an array\ncontaining the results of that search, or null if no matches are found.\n@param regexp A variable name or string literal containing the regular expression pattern and flags.\n@param matcher An object that supports being matched against.",name:"match",required:!0,type:{name:"{ (regexp: string | RegExp): RegExpMatchArray; (matcher: { [Symbol.match](string: string): RegExpMatchArray; }): RegExpMatchArray; }"}},replace:{defaultValue:null,description:"Replaces text in a string, using a regular expression or search string.\nPasses a string and {@linkcode replaceValue} to the `[Symbol.replace]` method on {@linkcode searchValue}. This method is expected to implement its own replacement algorithm.\nReplaces text in a string, using an object that supports replacement within a string.\n@param searchValue A string or regular expression to search for.\n@param replaceValue A string containing the text to replace. When the {@linkcode searchValue } is a `RegExp`, all matches are replaced if the `g` flag is set (or only those matches at the beginning, if the `y` flag is also present). Otherwise, only the first match of {@linkcode searchValue } is replaced.\n@param searchValue A string to search for.\n@param replacer A function that returns the replacement text.\n@param searchValue An object that supports searching for and replacing matches within a string.\n@param replaceValue The replacement text.\n@param searchValue A object can search for and replace matches within a string.\n@param replacer A function that returns the replacement text.",name:"replace",required:!0,type:{name:"{ (searchValue: string | RegExp, replaceValue: string): string; (searchValue: string | RegExp, replacer: (substring: string, ...args: any[]) => string): string; (searchValue: { ...; }, replaceValue: string): string; (searchValue: { ...; }, replacer: (substring: string, ...args: any[]) => string): string; }"}},search:{defaultValue:null,description:"Finds the first substring match in a regular expression search.\n@param regexp The regular expression pattern and applicable flags.\n@param searcher An object which supports searching within a string.",name:"search",required:!0,type:{name:"{ (regexp: string | RegExp): number; (searcher: { [Symbol.search](string: string): number; }): number; }"}},slice:{defaultValue:null,description:"Returns a section of a string.\n@param start The index to the beginning of the specified portion of stringObj.\n@param end The index to the end of the specified portion of stringObj. The substring includes the characters up to, but not including, the character indicated by end.\nIf this value is not specified, the substring continues to the end of stringObj.",name:"slice",required:!0,type:{name:"(start?: number, end?: number) => string"}},split:{defaultValue:null,description:"Split a string into substrings using the specified separator and return them as an array.\n@param separator A string that identifies character or characters to use in separating the string. If omitted, a single-element array containing the entire string is returned.\n@param limit A value used to limit the number of elements returned in the array.\n@param splitter An object that can split a string.\n@param limit A value used to limit the number of elements returned in the array.",name:"split",required:!0,type:{name:"{ (separator: string | RegExp, limit?: number): string[]; (splitter: { [Symbol.split](string: string, limit?: number): string[]; }, limit?: number): string[]; }"}},substring:{defaultValue:null,description:"Returns the substring at the specified location within a String object.\n@param start The zero-based index number indicating the beginning of the substring.\n@param end Zero-based index number indicating the end of the substring. The substring includes the characters up to, but not including, the character indicated by end.\nIf end is omitted, the characters from start through the end of the original string are returned.",name:"substring",required:!0,type:{name:"(start: number, end?: number) => string"}},toLowerCase:{defaultValue:null,description:"Converts all the alphabetic characters in a string to lowercase.",name:"toLowerCase",required:!0,type:{name:"() => string"}},toLocaleLowerCase:{defaultValue:null,description:"Converts all alphabetic characters to lowercase, taking into account the host environment's current locale.",name:"toLocaleLowerCase",required:!0,type:{name:"(locales?: string | string[]) => string"}},toUpperCase:{defaultValue:null,description:"Converts all the alphabetic characters in a string to uppercase.",name:"toUpperCase",required:!0,type:{name:"() => string"}},toLocaleUpperCase:{defaultValue:null,description:"Returns a string where all alphabetic characters have been converted to uppercase, taking into account the host environment's current locale.",name:"toLocaleUpperCase",required:!0,type:{name:"(locales?: string | string[]) => string"}},trim:{defaultValue:null,description:"Removes the leading and trailing white space and line terminator characters from a string.",name:"trim",required:!0,type:{name:"() => string"}},length:{defaultValue:null,description:"Returns the length of a String object.",name:"length",required:!0,type:{name:"number"}},substr:{defaultValue:null,description:"Gets a substring beginning at the specified location and having the specified length.\n@deprecated A legacy feature for browser compatibility\n@param from The starting position of the desired substring. The index of the first character in the string is zero.\n@param length The number of characters to include in the returned substring.",name:"substr",required:!0,type:{name:"(from: number, length?: number) => string"}},valueOf:{defaultValue:null,description:"Returns the primitive value of the specified object.",name:"valueOf",required:!1,type:{name:"() => string"}},codePointAt:{defaultValue:null,description:"Returns a nonnegative integer Number less than 1114112 (0x110000) that is the code point\nvalue of the UTF-16 encoded code point starting at the string element at position pos in\nthe String resulting from converting this object to a String.\nIf there is no element at that position, the result is undefined.\nIf a valid UTF-16 surrogate pair does not begin at pos, the result is the code unit at pos.",name:"codePointAt",required:!0,type:{name:"(pos: number) => number"}},includes:{defaultValue:null,description:"Returns true if searchString appears as a substring of the result of converting this\nobject to a String, at one or more positions that are\ngreater than or equal to position; otherwise, returns false.\n@param searchString search string\n@param position If position is undefined, 0 is assumed, so as to search all of the String.",name:"includes",required:!0,type:{name:"(searchString: string, position?: number) => boolean"}},endsWith:{defaultValue:null,description:"Returns true if the sequence of elements of searchString converted to a String is the\nsame as the corresponding elements of this object (converted to a String) starting at\nendPosition – length(this). Otherwise returns false.",name:"endsWith",required:!0,type:{name:"(searchString: string, endPosition?: number) => boolean"}},normalize:{defaultValue:null,description:'Returns the String value result of normalizing the string into the normalization form\nnamed by form as specified in Unicode Standard Annex #15, Unicode Normalization Forms.\n@param form Applicable values: "NFC", "NFD", "NFKC", or "NFKD", If not specified default\nis "NFC"\n@param form Applicable values: "NFC", "NFD", "NFKC", or "NFKD", If not specified default\nis "NFC"',name:"normalize",required:!0,type:{name:'{ (form: "NFC" | "NFD" | "NFKC" | "NFKD"): string; (form?: string): string; }'}},repeat:{defaultValue:null,description:"Returns a String value that is made from count copies appended together. If count is 0,\nthe empty string is returned.\n@param count number of copies to append",name:"repeat",required:!0,type:{name:"(count: number) => string"}},startsWith:{defaultValue:null,description:"Returns true if the sequence of elements of searchString converted to a String is the\nsame as the corresponding elements of this object (converted to a String) starting at\nposition. Otherwise returns false.",name:"startsWith",required:!0,type:{name:"(searchString: string, position?: number) => boolean"}},anchor:{defaultValue:null,description:"Returns an `<a>` HTML anchor element and sets the name attribute to the text value\n@deprecated A legacy feature for browser compatibility\n@param name",name:"anchor",required:!0,type:{name:"(name: string) => string"}},big:{defaultValue:null,description:"Returns a `<big>` HTML element\n@deprecated A legacy feature for browser compatibility",name:"big",required:!0,type:{name:"() => string"}},blink:{defaultValue:null,description:"Returns a `<blink>` HTML element\n@deprecated A legacy feature for browser compatibility",name:"blink",required:!0,type:{name:"() => string"}},bold:{defaultValue:null,description:"Returns a `<b>` HTML element\n@deprecated A legacy feature for browser compatibility",name:"bold",required:!0,type:{name:"() => string"}},fixed:{defaultValue:null,description:"Returns a `<tt>` HTML element\n@deprecated A legacy feature for browser compatibility",name:"fixed",required:!0,type:{name:"() => string"}},italics:{defaultValue:null,description:"Returns an `<i>` HTML element\n@deprecated A legacy feature for browser compatibility",name:"italics",required:!0,type:{name:"() => string"}},link:{defaultValue:null,description:"Returns an `<a>` HTML element and sets the href attribute value\n@deprecated A legacy feature for browser compatibility",name:"link",required:!0,type:{name:"(url: string) => string"}},small:{defaultValue:null,description:"Returns a `<small>` HTML element\n@deprecated A legacy feature for browser compatibility",name:"small",required:!0,type:{name:"() => string"}},strike:{defaultValue:null,description:"Returns a `<strike>` HTML element\n@deprecated A legacy feature for browser compatibility",name:"strike",required:!0,type:{name:"() => string"}},sub:{defaultValue:null,description:"Returns a `<sub>` HTML element\n@deprecated A legacy feature for browser compatibility",name:"sub",required:!0,type:{name:"() => string"}},sup:{defaultValue:null,description:"Returns a `<sup>` HTML element\n@deprecated A legacy feature for browser compatibility",name:"sup",required:!0,type:{name:"() => string"}},padStart:{defaultValue:null,description:'Pads the current string with a given string (possibly repeated) so that the resulting string reaches a given length.\nThe padding is applied from the start (left) of the current string.\n@param maxLength The length of the resulting string once the current string has been padded.\nIf this parameter is smaller than the current string\'s length, the current string will be returned as it is.\n@param fillString The string to pad the current string with.\nIf this string is too long, it will be truncated and the left-most part will be applied.\nThe default value for this parameter is " " (U+0020).',name:"padStart",required:!0,type:{name:"(maxLength: number, fillString?: string) => string"}},padEnd:{defaultValue:null,description:'Pads the current string with a given string (possibly repeated) so that the resulting string reaches a given length.\nThe padding is applied from the end (right) of the current string.\n@param maxLength The length of the resulting string once the current string has been padded.\nIf this parameter is smaller than the current string\'s length, the current string will be returned as it is.\n@param fillString The string to pad the current string with.\nIf this string is too long, it will be truncated and the left-most part will be applied.\nThe default value for this parameter is " " (U+0020).',name:"padEnd",required:!0,type:{name:"(maxLength: number, fillString?: string) => string"}},trimEnd:{defaultValue:null,description:"Removes the trailing white space and line terminator characters from a string.",name:"trimEnd",required:!0,type:{name:"() => string"}},trimStart:{defaultValue:null,description:"Removes the leading white space and line terminator characters from a string.",name:"trimStart",required:!0,type:{name:"() => string"}},trimLeft:{defaultValue:null,description:"Removes the leading white space and line terminator characters from a string.\n@deprecated A legacy feature for browser compatibility. Use `trimStart` instead",name:"trimLeft",required:!0,type:{name:"() => string"}},trimRight:{defaultValue:null,description:"Removes the trailing white space and line terminator characters from a string.\n@deprecated A legacy feature for browser compatibility. Use `trimEnd` instead",name:"trimRight",required:!0,type:{name:"() => string"}},matchAll:{defaultValue:null,description:"Matches a string with a regular expression, and returns an iterable of matches\ncontaining the results of that search.\n@param regexp A variable name or string literal containing the regular expression pattern and flags.",name:"matchAll",required:!0,type:{name:"(regexp: RegExp) => IterableIterator<RegExpMatchArray>"}},replaceAll:{defaultValue:null,description:"Replace all instances of a substring in a string, using a regular expression or search string.\n@param searchValue A string to search for.\n@param replaceValue A string containing the text to replace for every successful match of searchValue in this string.\n@param searchValue A string to search for.\n@param replacer A function that returns the replacement text.",name:"replaceAll",required:!0,type:{name:"{ (searchValue: string | RegExp, replaceValue: string): string; (searchValue: string | RegExp, replacer: (substring: string, ...args: any[]) => string): string; }"}},at:{defaultValue:null,description:"Returns a new String consisting of the single UTF-16 code unit located at the specified index.\n@param index The zero-based index of the desired code unit. A negative index will count back from the last item.",name:"at",required:!0,type:{name:"(index: number) => string"}},"__@iterator@84":{defaultValue:null,description:"Iterator",name:"__@iterator@84",required:!0,type:{name:"() => IterableIterator<string>"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["../components/src/MenuItem/MenuItem.tsx#getMenuItemUtilityClass"]={docgenInfo:getMenuItemUtilityClass.__docgenInfo,name:"getMenuItemUtilityClass",path:"../components/src/MenuItem/MenuItem.tsx#getMenuItemUtilityClass"})}catch(__react_docgen_typescript_loader_error){}},"../components/src/TextField/TextField.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{nv:()=>TextField});const TextField=__webpack_require__("../../node_modules/@mui/material/TextField/TextField.js").Z;try{TextField.displayName="TextField",TextField.__docgenInfo={description:'The `TextField` is a convenience wrapper for the most common cases (80%).\nIt cannot be all things to all people, otherwise the API would grow out of control.\n\n## Advanced Configuration\n\nIt\'s important to understand that the text field is a simple abstraction\non top of the following components:\n\n*   [FormControl](https://mui.com/material-ui/api/form-control/)\n*   [InputLabel](https://mui.com/material-ui/api/input-label/)\n*   [FilledInput](https://mui.com/material-ui/api/filled-input/)\n*   [OutlinedInput](https://mui.com/material-ui/api/outlined-input/)\n*   [Input](https://mui.com/material-ui/api/input/)\n*   [FormHelperText](https://mui.com/material-ui/api/form-helper-text/)\n\nIf you wish to alter the props applied to the `input` element, you can do so as follows:\n\n```jsx\nconst inputProps = {\n  step: 300,\n};\n\nreturn <TextField id="time" type="time" inputProps={inputProps} />;\n```\n\nFor advanced cases, please look at the source of TextField by clicking on the\n"Edit this page" button above. Consider either:\n\n*   using the upper case props for passing values directly to the components\n*   using the underlying components directly as shown in the demos\n\nDemos:\n\n- [Text Field](https://simspace.gitlab.io/engineering/ux-engineering/monorail/main/storybook/?path=/docs/inputs-textfield--default)\n- [Autocomplete (MUI)](https://mui.com/material-ui/react-autocomplete/)\n- [Text fields (MUI)](https://mui.com/material-ui/react-text-field/)\n\nAPI:\n\n- [TextField API](https://mui.com/material-ui/api/text-field/)\n- inherits [FormControl API](https://mui.com/material-ui/api/form-control/)',displayName:"TextField",props:{name:{defaultValue:null,description:"Name attribute of the `input` element.",name:"name",required:!1,type:{name:"string"}},label:{defaultValue:null,description:"The label content.",name:"label",required:!1,type:{name:"ReactNode"}},slot:{defaultValue:null,description:"",name:"slot",required:!1,type:{name:"string"}},select:{defaultValue:{value:"false"},description:"Render a [`Select`](https://mui.com/material-ui/api/select/) element while passing the Input element to `Select` as `input` parameter.\nIf this option is set you must pass the options of the select as children.",name:"select",required:!1,type:{name:"boolean"}},style:{defaultValue:null,description:"",name:"style",required:!1,type:{name:"CSSProperties"}},title:{defaultValue:null,description:"",name:"title",required:!1,type:{name:"string"}},disabled:{defaultValue:{value:"false"},description:"If `true`, the component is disabled.",name:"disabled",required:!1,type:{name:"boolean"}},color:{defaultValue:{value:"'primary'"},description:"The color of the component.\nIt supports both default and custom theme colors, which can be added as shown in the\n[palette customization guide](https://mui.com/material-ui/customization/palette/#custom-colors).",name:"color",required:!1,type:{name:'"primary" | "secondary" | "error" | "info" | "success" | "warning"'}},size:{defaultValue:null,description:"The size of the component.",name:"size",required:!1,type:{name:'"small" | "medium" | "large"'}},fullWidth:{defaultValue:{value:"false"},description:"If `true`, the input will take up the full width of its container.",name:"fullWidth",required:!1,type:{name:"boolean"}},error:{defaultValue:{value:"false"},description:"If `true`, the label is displayed in an error state.",name:"error",required:!1,type:{name:"boolean"}},children:{defaultValue:null,description:"The content of the component.\n@ignore",name:"children",required:!1,type:{name:"ReactNode"}},rows:{defaultValue:null,description:"Number of rows to display when multiline option is set to true.",name:"rows",required:!1,type:{name:"string | number"}},id:{defaultValue:null,description:"The id of the `input` element.\nUse this prop to make `label` and `helperText` accessible for screen readers.",name:"id",required:!1,type:{name:"string"}},defaultChecked:{defaultValue:null,description:"",name:"defaultChecked",required:!1,type:{name:"boolean"}},defaultValue:{defaultValue:null,description:"The default value. Use when the component is not controlled.",name:"defaultValue",required:!1,type:{name:"unknown"}},accessKey:{defaultValue:null,description:"",name:"accessKey",required:!1,type:{name:"string"}},autoCapitalize:{defaultValue:null,description:"",name:"autoCapitalize",required:!1,type:{name:'(string & {}) | "off" | "none" | "on" | "sentences" | "words" | "characters"'}},autoFocus:{defaultValue:{value:"false"},description:"If `true`, the `input` element is focused during the first mount.",name:"autoFocus",required:!1,type:{name:"boolean"}},className:{defaultValue:null,description:"",name:"className",required:!1,type:{name:"string"}},dir:{defaultValue:null,description:"",name:"dir",required:!1,type:{name:"string"}},draggable:{defaultValue:null,description:"",name:"draggable",required:!1,type:{name:"Booleanish"}},enterKeyHint:{defaultValue:null,description:"",name:"enterKeyHint",required:!1,type:{name:'"search" | "enter" | "done" | "go" | "next" | "previous" | "send"'}},hidden:{defaultValue:null,description:"",name:"hidden",required:!1,type:{name:"boolean"}},lang:{defaultValue:null,description:"",name:"lang",required:!1,type:{name:"string"}},spellCheck:{defaultValue:null,description:"",name:"spellCheck",required:!1,type:{name:"Booleanish"}},tabIndex:{defaultValue:null,description:"",name:"tabIndex",required:!1,type:{name:"number"}},translate:{defaultValue:null,description:"",name:"translate",required:!1,type:{name:'"yes" | "no"'}},radioGroup:{defaultValue:null,description:"",name:"radioGroup",required:!1,type:{name:"string"}},role:{defaultValue:null,description:"",name:"role",required:!1,type:{name:"AriaRole"}},about:{defaultValue:null,description:"",name:"about",required:!1,type:{name:"string"}},datatype:{defaultValue:null,description:"",name:"datatype",required:!1,type:{name:"string"}},inlist:{defaultValue:null,description:"",name:"inlist",required:!1,type:{name:"any"}},prefix:{defaultValue:null,description:"",name:"prefix",required:!1,type:{name:"string"}},property:{defaultValue:null,description:"",name:"property",required:!1,type:{name:"string"}},rel:{defaultValue:null,description:"",name:"rel",required:!1,type:{name:"string"}},resource:{defaultValue:null,description:"",name:"resource",required:!1,type:{name:"string"}},rev:{defaultValue:null,description:"",name:"rev",required:!1,type:{name:"string"}},typeof:{defaultValue:null,description:"",name:"typeof",required:!1,type:{name:"string"}},vocab:{defaultValue:null,description:"",name:"vocab",required:!1,type:{name:"string"}},autoCorrect:{defaultValue:null,description:"",name:"autoCorrect",required:!1,type:{name:"string"}},autoSave:{defaultValue:null,description:"",name:"autoSave",required:!1,type:{name:"string"}},itemProp:{defaultValue:null,description:"",name:"itemProp",required:!1,type:{name:"string"}},itemScope:{defaultValue:null,description:"",name:"itemScope",required:!1,type:{name:"boolean"}},itemType:{defaultValue:null,description:"",name:"itemType",required:!1,type:{name:"string"}},itemID:{defaultValue:null,description:"",name:"itemID",required:!1,type:{name:"string"}},itemRef:{defaultValue:null,description:"",name:"itemRef",required:!1,type:{name:"string"}},results:{defaultValue:null,description:"",name:"results",required:!1,type:{name:"number"}},security:{defaultValue:null,description:"",name:"security",required:!1,type:{name:"string"}},unselectable:{defaultValue:null,description:"",name:"unselectable",required:!1,type:{name:'"off" | "on"'}},inputMode:{defaultValue:null,description:"Hints at the type of data that might be entered by the user while editing the element or its contents\n@see {@link https://html.spec.whatwg.org/multipage/interaction.html#input-modalities:-the-inputmode-attribute}",name:"inputMode",required:!1,type:{name:'"search" | "text" | "none" | "tel" | "url" | "email" | "numeric" | "decimal"'}},is:{defaultValue:null,description:"Specify that a standard HTML element should behave like a defined custom built-in element\n@see {@link https://html.spec.whatwg.org/multipage/custom-elements.html#attr-is}",name:"is",required:!1,type:{name:"string"}},dangerouslySetInnerHTML:{defaultValue:null,description:"",name:"dangerouslySetInnerHTML",required:!1,type:{name:"{ __html: string | TrustedHTML; }"}},margin:{defaultValue:{value:"'none'"},description:"If `dense` or `normal`, will adjust vertical spacing of this and contained components.",name:"margin",required:!1,type:{name:'"dense" | "none" | "normal"'}},classes:{defaultValue:null,description:"Override or extend the styles applied to the component.",name:"classes",required:!1,type:{name:"Partial<TextFieldClasses>"}},sx:{defaultValue:null,description:"The system prop that allows defining system overrides as well as additional CSS styles.",name:"sx",required:!1,type:{name:"SxProps<Theme>"}},ref:{defaultValue:null,description:"",name:"ref",required:!1,type:{name:"Ref<HTMLDivElement>"}},type:{defaultValue:null,description:"Type of the `input` element. It should be [a valid HTML5 input type](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Form_%3Cinput%3E_types).",name:"type",required:!1,type:{name:"HTMLInputTypeAttribute"}},key:{defaultValue:null,description:"",name:"key",required:!1,type:{name:"Key"}},value:{defaultValue:null,description:"The value of the `input` element, required for a controlled component.",name:"value",required:!1,type:{name:"unknown"}},placeholder:{defaultValue:null,description:"The short hint displayed in the `input` before the user enters a value.",name:"placeholder",required:!1,type:{name:"string"}},helperText:{defaultValue:null,description:"The helper text content.",name:"helperText",required:!1,type:{name:"ReactNode"}},autoComplete:{defaultValue:null,description:"This prop helps users to fill forms faster, especially on mobile devices.\nThe name can be confusing, as it's more like an autofill.\nYou can learn more about it [following the specification](https://html.spec.whatwg.org/multipage/form-control-infrastructure.html#autofill).",name:"autoComplete",required:!1,type:{name:"string"}},required:{defaultValue:{value:"false"},description:"If `true`, the label is displayed as required and the `input` element is required.",name:"required",required:!1,type:{name:"boolean"}},slotProps:{defaultValue:{value:"{}"},description:"The props used for each slot inside.",name:"slotProps",required:!1,type:{name:"{ input?: SlotProps<ElementType<OutlinedInputProps, keyof IntrinsicElements>, {}, BaseTextFieldProps>; inputLabel?: SlotProps<...>; htmlInput?: SlotProps<...>; formHelperText?: SlotProps<...>; select?: SlotProps<...>; } | { ...; } | { ...; }"}},slots:{defaultValue:{value:"{}"},description:"The components used for each slot inside.",name:"slots",required:!1,type:{name:"Partial<TextFieldSlots>"}},inputProps:{defaultValue:null,description:"[Attributes](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Attributes) applied to the `input` element.\n@deprecated Use `slotProps.htmlInput` instead. This prop will be removed in v7. See [Migrating from deprecated APIs](https://mui.com/material-ui/migration/migrating-from-deprecated-apis/) for more details.",name:"inputProps",required:!1,type:{name:"InputBaseComponentProps"}},inputRef:{defaultValue:null,description:"Pass a ref to the `input` element.",name:"inputRef",required:!1,type:{name:"Ref<any>"}},focused:{defaultValue:null,description:"If `true`, the component is displayed in focused state.",name:"focused",required:!1,type:{name:"boolean"}},hiddenLabel:{defaultValue:{value:"false"},description:"If `true`, the label is hidden.\nThis is used to increase density for a `FilledInput`.\nBe sure to add `aria-label` to the `input` element.",name:"hiddenLabel",required:!1,type:{name:"boolean"}},multiline:{defaultValue:{value:"false"},description:"If `true`, a `textarea` element is rendered instead of an input.",name:"multiline",required:!1,type:{name:"boolean"}},maxRows:{defaultValue:null,description:"Maximum number of rows to display when multiline option is set to true.",name:"maxRows",required:!1,type:{name:"string | number"}},minRows:{defaultValue:null,description:"Minimum number of rows to display when multiline option is set to true.",name:"minRows",required:!1,type:{name:"string | number"}},InputProps:{defaultValue:null,description:"Props applied to the Input element.\nIt will be a [`FilledInput`](https://mui.com/material-ui/api/filled-input/),\n[`OutlinedInput`](https://mui.com/material-ui/api/outlined-input/) or [`Input`](https://mui.com/material-ui/api/input/)\ncomponent depending on the `variant` prop value.\n@deprecated Use `slotProps.input` instead. This prop will be removed in v7. See [Migrating from deprecated APIs](https://mui.com/material-ui/migration/migrating-from-deprecated-apis/) for more details.\n@deprecated Use `slotProps.input` instead. This prop will be removed in v7. See [Migrating from deprecated APIs](https://mui.com/material-ui/migration/migrating-from-deprecated-apis/) for more details.\n@deprecated Use `slotProps.input` instead. This prop will be removed in v7. See [Migrating from deprecated APIs](https://mui.com/material-ui/migration/migrating-from-deprecated-apis/) for more details.",name:"InputProps",required:!1,type:{name:"Partial<OutlinedInputProps> | Partial<InputProps> | Partial<FilledInputProps>"}},FormHelperTextProps:{defaultValue:null,description:"Props applied to the [`FormHelperText`](https://mui.com/material-ui/api/form-helper-text/) element.\n@deprecated Use `slotProps.formHelperText` instead. This prop will be removed in v7. See [Migrating from deprecated APIs](https://mui.com/material-ui/migration/migrating-from-deprecated-apis/) for more details.",name:"FormHelperTextProps",required:!1,type:{name:'Partial<FormHelperTextProps<"p", {}>>'}},InputLabelProps:{defaultValue:null,description:"Props applied to the [`InputLabel`](https://mui.com/material-ui/api/input-label/) element.\nPointer events like `onClick` are enabled if and only if `shrink` is `true`.\n@deprecated Use `slotProps.inputLabel` instead. This prop will be removed in v7. See [Migrating from deprecated APIs](https://mui.com/material-ui/migration/migrating-from-deprecated-apis/) for more details.",name:"InputLabelProps",required:!1,type:{name:'Partial<InputLabelProps<"label", {}>>'}},SelectProps:{defaultValue:null,description:"Props applied to the [`Select`](https://mui.com/material-ui/api/select/) element.\n@deprecated Use `slotProps.select` instead. This prop will be removed in v7. See [Migrating from deprecated APIs](https://mui.com/material-ui/migration/migrating-from-deprecated-apis/) for more details.",name:"SelectProps",required:!1,type:{name:"Partial<SelectProps<unknown>>"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["../components/src/TextField/TextField.tsx#TextField"]={docgenInfo:TextField.__docgenInfo,name:"TextField",path:"../components/src/TextField/TextField.tsx#TextField"})}catch(__react_docgen_typescript_loader_error){}try{getTextFieldUtilityClass.displayName="getTextFieldUtilityClass",getTextFieldUtilityClass.__docgenInfo={description:"",displayName:"getTextFieldUtilityClass",props:{toString:{defaultValue:null,description:"Returns a string representation of a string.",name:"toString",required:!1,type:{name:"() => string"}},charAt:{defaultValue:null,description:"Returns the character at the specified index.\n@param pos The zero-based index of the desired character.",name:"charAt",required:!0,type:{name:"(pos: number) => string"}},charCodeAt:{defaultValue:null,description:"Returns the Unicode value of the character at the specified location.\n@param index The zero-based index of the desired character. If there is no character at the specified index, NaN is returned.",name:"charCodeAt",required:!0,type:{name:"(index: number) => number"}},indexOf:{defaultValue:null,description:"Returns the position of the first occurrence of a substring.\n@param searchString The substring to search for in the string\n@param position The index at which to begin searching the String object. If omitted, search starts at the beginning of the string.",name:"indexOf",required:!0,type:{name:"(searchString: string, position?: number) => number"}},lastIndexOf:{defaultValue:null,description:"Returns the last occurrence of a substring in the string.\n@param searchString The substring to search for.\n@param position The index at which to begin searching. If omitted, the search begins at the end of the string.",name:"lastIndexOf",required:!0,type:{name:"(searchString: string, position?: number) => number"}},localeCompare:{defaultValue:null,description:"Determines whether two strings are equivalent in the current locale.\nDetermines whether two strings are equivalent in the current or specified locale.\n@param that String to compare to target string\n@param that String to compare to target string\n@param locales A locale string or array of locale strings that contain one or more language or locale tags. If you include more than one locale string, list them in descending order of priority so that the first entry is the preferred locale. If you omit this parameter, the default locale of the JavaScript runtime is used. This parameter must conform to BCP 47 standards; see the Intl.Collator object for details.\n@param options An object that contains one or more properties that specify comparison options. see the Intl.Collator object for details.",name:"localeCompare",required:!0,type:{name:"{ (that: string): number; (that: string, locales?: string | string[], options?: CollatorOptions): number; }"}},match:{defaultValue:null,description:"Matches a string with a regular expression, and returns an array containing the results of that search.\nMatches a string or an object that supports being matched against, and returns an array\ncontaining the results of that search, or null if no matches are found.\n@param regexp A variable name or string literal containing the regular expression pattern and flags.\n@param matcher An object that supports being matched against.",name:"match",required:!0,type:{name:"{ (regexp: string | RegExp): RegExpMatchArray; (matcher: { [Symbol.match](string: string): RegExpMatchArray; }): RegExpMatchArray; }"}},replace:{defaultValue:null,description:"Replaces text in a string, using a regular expression or search string.\nPasses a string and {@linkcode replaceValue} to the `[Symbol.replace]` method on {@linkcode searchValue}. This method is expected to implement its own replacement algorithm.\nReplaces text in a string, using an object that supports replacement within a string.\n@param searchValue A string or regular expression to search for.\n@param replaceValue A string containing the text to replace. When the {@linkcode searchValue } is a `RegExp`, all matches are replaced if the `g` flag is set (or only those matches at the beginning, if the `y` flag is also present). Otherwise, only the first match of {@linkcode searchValue } is replaced.\n@param searchValue A string to search for.\n@param replacer A function that returns the replacement text.\n@param searchValue An object that supports searching for and replacing matches within a string.\n@param replaceValue The replacement text.\n@param searchValue A object can search for and replace matches within a string.\n@param replacer A function that returns the replacement text.",name:"replace",required:!0,type:{name:"{ (searchValue: string | RegExp, replaceValue: string): string; (searchValue: string | RegExp, replacer: (substring: string, ...args: any[]) => string): string; (searchValue: { ...; }, replaceValue: string): string; (searchValue: { ...; }, replacer: (substring: string, ...args: any[]) => string): string; }"}},search:{defaultValue:null,description:"Finds the first substring match in a regular expression search.\n@param regexp The regular expression pattern and applicable flags.\n@param searcher An object which supports searching within a string.",name:"search",required:!0,type:{name:"{ (regexp: string | RegExp): number; (searcher: { [Symbol.search](string: string): number; }): number; }"}},slice:{defaultValue:null,description:"Returns a section of a string.\n@param start The index to the beginning of the specified portion of stringObj.\n@param end The index to the end of the specified portion of stringObj. The substring includes the characters up to, but not including, the character indicated by end.\nIf this value is not specified, the substring continues to the end of stringObj.",name:"slice",required:!0,type:{name:"(start?: number, end?: number) => string"}},split:{defaultValue:null,description:"Split a string into substrings using the specified separator and return them as an array.\n@param separator A string that identifies character or characters to use in separating the string. If omitted, a single-element array containing the entire string is returned.\n@param limit A value used to limit the number of elements returned in the array.\n@param splitter An object that can split a string.\n@param limit A value used to limit the number of elements returned in the array.",name:"split",required:!0,type:{name:"{ (separator: string | RegExp, limit?: number): string[]; (splitter: { [Symbol.split](string: string, limit?: number): string[]; }, limit?: number): string[]; }"}},substring:{defaultValue:null,description:"Returns the substring at the specified location within a String object.\n@param start The zero-based index number indicating the beginning of the substring.\n@param end Zero-based index number indicating the end of the substring. The substring includes the characters up to, but not including, the character indicated by end.\nIf end is omitted, the characters from start through the end of the original string are returned.",name:"substring",required:!0,type:{name:"(start: number, end?: number) => string"}},toLowerCase:{defaultValue:null,description:"Converts all the alphabetic characters in a string to lowercase.",name:"toLowerCase",required:!0,type:{name:"() => string"}},toLocaleLowerCase:{defaultValue:null,description:"Converts all alphabetic characters to lowercase, taking into account the host environment's current locale.",name:"toLocaleLowerCase",required:!0,type:{name:"(locales?: string | string[]) => string"}},toUpperCase:{defaultValue:null,description:"Converts all the alphabetic characters in a string to uppercase.",name:"toUpperCase",required:!0,type:{name:"() => string"}},toLocaleUpperCase:{defaultValue:null,description:"Returns a string where all alphabetic characters have been converted to uppercase, taking into account the host environment's current locale.",name:"toLocaleUpperCase",required:!0,type:{name:"(locales?: string | string[]) => string"}},trim:{defaultValue:null,description:"Removes the leading and trailing white space and line terminator characters from a string.",name:"trim",required:!0,type:{name:"() => string"}},length:{defaultValue:null,description:"Returns the length of a String object.",name:"length",required:!0,type:{name:"number"}},substr:{defaultValue:null,description:"Gets a substring beginning at the specified location and having the specified length.\n@deprecated A legacy feature for browser compatibility\n@param from The starting position of the desired substring. The index of the first character in the string is zero.\n@param length The number of characters to include in the returned substring.",name:"substr",required:!0,type:{name:"(from: number, length?: number) => string"}},valueOf:{defaultValue:null,description:"Returns the primitive value of the specified object.",name:"valueOf",required:!1,type:{name:"() => string"}},codePointAt:{defaultValue:null,description:"Returns a nonnegative integer Number less than 1114112 (0x110000) that is the code point\nvalue of the UTF-16 encoded code point starting at the string element at position pos in\nthe String resulting from converting this object to a String.\nIf there is no element at that position, the result is undefined.\nIf a valid UTF-16 surrogate pair does not begin at pos, the result is the code unit at pos.",name:"codePointAt",required:!0,type:{name:"(pos: number) => number"}},includes:{defaultValue:null,description:"Returns true if searchString appears as a substring of the result of converting this\nobject to a String, at one or more positions that are\ngreater than or equal to position; otherwise, returns false.\n@param searchString search string\n@param position If position is undefined, 0 is assumed, so as to search all of the String.",name:"includes",required:!0,type:{name:"(searchString: string, position?: number) => boolean"}},endsWith:{defaultValue:null,description:"Returns true if the sequence of elements of searchString converted to a String is the\nsame as the corresponding elements of this object (converted to a String) starting at\nendPosition – length(this). Otherwise returns false.",name:"endsWith",required:!0,type:{name:"(searchString: string, endPosition?: number) => boolean"}},normalize:{defaultValue:null,description:'Returns the String value result of normalizing the string into the normalization form\nnamed by form as specified in Unicode Standard Annex #15, Unicode Normalization Forms.\n@param form Applicable values: "NFC", "NFD", "NFKC", or "NFKD", If not specified default\nis "NFC"\n@param form Applicable values: "NFC", "NFD", "NFKC", or "NFKD", If not specified default\nis "NFC"',name:"normalize",required:!0,type:{name:'{ (form: "NFC" | "NFD" | "NFKC" | "NFKD"): string; (form?: string): string; }'}},repeat:{defaultValue:null,description:"Returns a String value that is made from count copies appended together. If count is 0,\nthe empty string is returned.\n@param count number of copies to append",name:"repeat",required:!0,type:{name:"(count: number) => string"}},startsWith:{defaultValue:null,description:"Returns true if the sequence of elements of searchString converted to a String is the\nsame as the corresponding elements of this object (converted to a String) starting at\nposition. Otherwise returns false.",name:"startsWith",required:!0,type:{name:"(searchString: string, position?: number) => boolean"}},anchor:{defaultValue:null,description:"Returns an `<a>` HTML anchor element and sets the name attribute to the text value\n@deprecated A legacy feature for browser compatibility\n@param name",name:"anchor",required:!0,type:{name:"(name: string) => string"}},big:{defaultValue:null,description:"Returns a `<big>` HTML element\n@deprecated A legacy feature for browser compatibility",name:"big",required:!0,type:{name:"() => string"}},blink:{defaultValue:null,description:"Returns a `<blink>` HTML element\n@deprecated A legacy feature for browser compatibility",name:"blink",required:!0,type:{name:"() => string"}},bold:{defaultValue:null,description:"Returns a `<b>` HTML element\n@deprecated A legacy feature for browser compatibility",name:"bold",required:!0,type:{name:"() => string"}},fixed:{defaultValue:null,description:"Returns a `<tt>` HTML element\n@deprecated A legacy feature for browser compatibility",name:"fixed",required:!0,type:{name:"() => string"}},italics:{defaultValue:null,description:"Returns an `<i>` HTML element\n@deprecated A legacy feature for browser compatibility",name:"italics",required:!0,type:{name:"() => string"}},link:{defaultValue:null,description:"Returns an `<a>` HTML element and sets the href attribute value\n@deprecated A legacy feature for browser compatibility",name:"link",required:!0,type:{name:"(url: string) => string"}},small:{defaultValue:null,description:"Returns a `<small>` HTML element\n@deprecated A legacy feature for browser compatibility",name:"small",required:!0,type:{name:"() => string"}},strike:{defaultValue:null,description:"Returns a `<strike>` HTML element\n@deprecated A legacy feature for browser compatibility",name:"strike",required:!0,type:{name:"() => string"}},sub:{defaultValue:null,description:"Returns a `<sub>` HTML element\n@deprecated A legacy feature for browser compatibility",name:"sub",required:!0,type:{name:"() => string"}},sup:{defaultValue:null,description:"Returns a `<sup>` HTML element\n@deprecated A legacy feature for browser compatibility",name:"sup",required:!0,type:{name:"() => string"}},padStart:{defaultValue:null,description:'Pads the current string with a given string (possibly repeated) so that the resulting string reaches a given length.\nThe padding is applied from the start (left) of the current string.\n@param maxLength The length of the resulting string once the current string has been padded.\nIf this parameter is smaller than the current string\'s length, the current string will be returned as it is.\n@param fillString The string to pad the current string with.\nIf this string is too long, it will be truncated and the left-most part will be applied.\nThe default value for this parameter is " " (U+0020).',name:"padStart",required:!0,type:{name:"(maxLength: number, fillString?: string) => string"}},padEnd:{defaultValue:null,description:'Pads the current string with a given string (possibly repeated) so that the resulting string reaches a given length.\nThe padding is applied from the end (right) of the current string.\n@param maxLength The length of the resulting string once the current string has been padded.\nIf this parameter is smaller than the current string\'s length, the current string will be returned as it is.\n@param fillString The string to pad the current string with.\nIf this string is too long, it will be truncated and the left-most part will be applied.\nThe default value for this parameter is " " (U+0020).',name:"padEnd",required:!0,type:{name:"(maxLength: number, fillString?: string) => string"}},trimEnd:{defaultValue:null,description:"Removes the trailing white space and line terminator characters from a string.",name:"trimEnd",required:!0,type:{name:"() => string"}},trimStart:{defaultValue:null,description:"Removes the leading white space and line terminator characters from a string.",name:"trimStart",required:!0,type:{name:"() => string"}},trimLeft:{defaultValue:null,description:"Removes the leading white space and line terminator characters from a string.\n@deprecated A legacy feature for browser compatibility. Use `trimStart` instead",name:"trimLeft",required:!0,type:{name:"() => string"}},trimRight:{defaultValue:null,description:"Removes the trailing white space and line terminator characters from a string.\n@deprecated A legacy feature for browser compatibility. Use `trimEnd` instead",name:"trimRight",required:!0,type:{name:"() => string"}},matchAll:{defaultValue:null,description:"Matches a string with a regular expression, and returns an iterable of matches\ncontaining the results of that search.\n@param regexp A variable name or string literal containing the regular expression pattern and flags.",name:"matchAll",required:!0,type:{name:"(regexp: RegExp) => IterableIterator<RegExpMatchArray>"}},replaceAll:{defaultValue:null,description:"Replace all instances of a substring in a string, using a regular expression or search string.\n@param searchValue A string to search for.\n@param replaceValue A string containing the text to replace for every successful match of searchValue in this string.\n@param searchValue A string to search for.\n@param replacer A function that returns the replacement text.",name:"replaceAll",required:!0,type:{name:"{ (searchValue: string | RegExp, replaceValue: string): string; (searchValue: string | RegExp, replacer: (substring: string, ...args: any[]) => string): string; }"}},at:{defaultValue:null,description:"Returns a new String consisting of the single UTF-16 code unit located at the specified index.\n@param index The zero-based index of the desired code unit. A negative index will count back from the last item.",name:"at",required:!0,type:{name:"(index: number) => string"}},"__@iterator@84":{defaultValue:null,description:"Iterator",name:"__@iterator@84",required:!0,type:{name:"() => IterableIterator<string>"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["../components/src/TextField/TextField.tsx#getTextFieldUtilityClass"]={docgenInfo:getTextFieldUtilityClass.__docgenInfo,name:"getTextFieldUtilityClass",path:"../components/src/TextField/TextField.tsx#getTextFieldUtilityClass"})}catch(__react_docgen_typescript_loader_error){}},"./src/helpers/helpers.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{f9:()=>isLegacyTheme,fm:()=>capitalizeFirstLetter,pQ:()=>isMeteorTheme,u3:()=>getRawColorObject});var _monorail_themes_classic_theme_dark__WEBPACK_IMPORTED_MODULE_4__=__webpack_require__("../themes/src/classic/theme/dark.ts"),_monorail_themes_classic_theme_light__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__("../themes/src/classic/theme/light.ts"),_monorail_themes_legacy_theme_dark__WEBPACK_IMPORTED_MODULE_6__=__webpack_require__("../themes/src/legacy/theme/dark.ts"),_monorail_themes_legacy_theme_light__WEBPACK_IMPORTED_MODULE_5__=__webpack_require__("../themes/src/legacy/theme/light.ts"),_monorail_themes_meteor_theme_dark__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("../themes/src/meteor/theme/dark.ts"),_monorail_themes_meteor_theme_light__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("../themes/src/meteor/theme/light.ts"),_monorail_themes_mui_theme__WEBPACK_IMPORTED_MODULE_7__=__webpack_require__("../themes/src/mui/theme.ts"),_monorail_themes_pcte_theme_dark__WEBPACK_IMPORTED_MODULE_9__=__webpack_require__("../themes/src/pcte/theme/dark.tsx"),_monorail_themes_pcte_theme_light__WEBPACK_IMPORTED_MODULE_8__=__webpack_require__("../themes/src/pcte/theme/light.tsx"),_theme_palette_palette_types__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./src/theme/palette/palette.types.ts");const capitalizeFirstLetter=str=>str.charAt(0).toUpperCase()+str.slice(1),isMeteorTheme=themeName=>themeName===_theme_palette_palette_types__WEBPACK_IMPORTED_MODULE_0__.I.MeteorLight||themeName===_theme_palette_palette_types__WEBPACK_IMPORTED_MODULE_0__.I.MeteorDark,isLegacyTheme=themeName=>themeName===_theme_palette_palette_types__WEBPACK_IMPORTED_MODULE_0__.I.MeteorLight||themeName===_theme_palette_palette_types__WEBPACK_IMPORTED_MODULE_0__.I.MeteorDark,getRawColorObject=themeName=>{switch(themeName){case _theme_palette_palette_types__WEBPACK_IMPORTED_MODULE_0__.I.MeteorLight:return _monorail_themes_meteor_theme_light__WEBPACK_IMPORTED_MODULE_1__.Yf;case _theme_palette_palette_types__WEBPACK_IMPORTED_MODULE_0__.I.MeteorDark:return _monorail_themes_meteor_theme_dark__WEBPACK_IMPORTED_MODULE_2__.Yf;case _theme_palette_palette_types__WEBPACK_IMPORTED_MODULE_0__.I.ClassicLight:return _monorail_themes_classic_theme_light__WEBPACK_IMPORTED_MODULE_3__.Yf;case _theme_palette_palette_types__WEBPACK_IMPORTED_MODULE_0__.I.ClassicDark:return _monorail_themes_classic_theme_dark__WEBPACK_IMPORTED_MODULE_4__.Yf;case _theme_palette_palette_types__WEBPACK_IMPORTED_MODULE_0__.I.LegacyLight:case _theme_palette_palette_types__WEBPACK_IMPORTED_MODULE_0__.I.LegacyPlexLight:return _monorail_themes_legacy_theme_light__WEBPACK_IMPORTED_MODULE_5__.Yf;case _theme_palette_palette_types__WEBPACK_IMPORTED_MODULE_0__.I.LegacyDark:case _theme_palette_palette_types__WEBPACK_IMPORTED_MODULE_0__.I.LegacyPlexDark:return _monorail_themes_legacy_theme_dark__WEBPACK_IMPORTED_MODULE_6__.Yf;case _theme_palette_palette_types__WEBPACK_IMPORTED_MODULE_0__.I.MUILight:case _theme_palette_palette_types__WEBPACK_IMPORTED_MODULE_0__.I.MUIDark:return _monorail_themes_mui_theme__WEBPACK_IMPORTED_MODULE_7__.Yf;case _theme_palette_palette_types__WEBPACK_IMPORTED_MODULE_0__.I.PCTELight:return _monorail_themes_pcte_theme_light__WEBPACK_IMPORTED_MODULE_8__.Yf;case _theme_palette_palette_types__WEBPACK_IMPORTED_MODULE_0__.I.PCTEDark:return _monorail_themes_pcte_theme_dark__WEBPACK_IMPORTED_MODULE_9__.Yf}}},"./src/helpers/storybook.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{yg:()=>story});var light=__webpack_require__("../themes/src/meteor/theme/light.ts");const isNonEmptyString=x=>(x=>"string"==typeof x)(x)&&x.length>0;let A11yElement=function(A11yElement){return A11yElement.Root="#root",A11yElement.Component="#root > *",A11yElement.Modal=".MuiDialog-root",A11yElement.Popover=".MuiPopover-root",A11yElement.Drawer=".MuiDrawer-root",A11yElement}({});A11yElement.Root,A11yElement.Component;function story(Template,{args,argTypes,parameters,storyName,muiName}={}){let themeProps={};muiName&&(themeProps=light.D4.components?.[muiName]?.defaultProps);const NewStory=Template.bind({});return NewStory.args={...themeProps,...Template.args,...args},NewStory.argTypes={...Template.argTypes,...argTypes},NewStory.parameters={...Template.parameters,...parameters},isNonEmptyString(storyName)&&(NewStory.storyName=storyName),NewStory}},"./src/theme/palette/palette.types.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{I:()=>ThemeName});let ThemeName=function(ThemeName){return ThemeName.MeteorLight="meteorLight",ThemeName.MeteorDark="meteorDark",ThemeName.ClassicLight="classicLight",ThemeName.ClassicDark="classicDark",ThemeName.LegacyLight="legacyLight",ThemeName.LegacyDark="legacyDark",ThemeName.LegacyPlexLight="legacyPlexLight",ThemeName.LegacyPlexDark="legacyPlexDark",ThemeName.MUILight="muiLight",ThemeName.MUIDark="muiDark",ThemeName.PCTELight="pcteLight",ThemeName.PCTEDark="pcteDark",ThemeName}({})}}]);