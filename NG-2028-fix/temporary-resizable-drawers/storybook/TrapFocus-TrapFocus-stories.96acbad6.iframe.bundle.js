"use strict";(self.webpackChunk_monorail_storybook=self.webpackChunk_monorail_storybook||[]).push([[8486],{"../../node_modules/@mui/base/node_modules/@mui/utils/setRef/setRef.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{function setRef(ref,value){"function"==typeof ref?ref(value):ref&&(ref.current=value)}__webpack_require__.d(__webpack_exports__,{Z:()=>setRef})},"../../node_modules/@mui/base/node_modules/@mui/utils/useForkRef/useForkRef.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{Z:()=>useForkRef});var react__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("../../node_modules/react/index.js"),_setRef__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("../../node_modules/@mui/base/node_modules/@mui/utils/setRef/setRef.js");function useForkRef(...refs){return react__WEBPACK_IMPORTED_MODULE_0__.useMemo((()=>refs.every((ref=>null==ref))?null:instance=>{refs.forEach((ref=>{(0,_setRef__WEBPACK_IMPORTED_MODULE_1__.Z)(ref,instance)}))}),refs)}},"./src/TrapFocus/TrapFocus.stories.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{Default:()=>Default,DisableEnforceFocus:()=>DisableEnforceFocus,LazyActivation:()=>LazyActivation,PortalExample:()=>PortalExample,__namedExportsOrder:()=>__namedExportsOrder,default:()=>TrapFocus_stories});var react=__webpack_require__("../../node_modules/react/index.js"),Box=__webpack_require__("../../node_modules/@mui/material/Box/Box.js"),Portal=__webpack_require__("../../node_modules/@mui/material/Portal/Portal.js"),useForkRef=__webpack_require__("../../node_modules/@mui/base/node_modules/@mui/utils/useForkRef/useForkRef.js");function ownerDocument(node){return node&&node.ownerDocument||document}var jsx_runtime=__webpack_require__("../../node_modules/react/jsx-runtime.js");const candidatesSelector=["input","select","textarea","a[href]","button","[tabindex]","audio[controls]","video[controls]",'[contenteditable]:not([contenteditable="false"])'].join(",");function defaultGetTabbable(root){const regularTabNodes=[],orderedTabNodes=[];return Array.from(root.querySelectorAll(candidatesSelector)).forEach(((node,i)=>{const nodeTabIndex=function getTabIndex(node){const tabindexAttr=parseInt(node.getAttribute("tabindex")||"",10);return Number.isNaN(tabindexAttr)?"true"===node.contentEditable||("AUDIO"===node.nodeName||"VIDEO"===node.nodeName||"DETAILS"===node.nodeName)&&null===node.getAttribute("tabindex")?0:node.tabIndex:tabindexAttr}(node);-1!==nodeTabIndex&&function isNodeMatchingSelectorFocusable(node){return!(node.disabled||"INPUT"===node.tagName&&"hidden"===node.type||function isNonTabbableRadio(node){if("INPUT"!==node.tagName||"radio"!==node.type)return!1;if(!node.name)return!1;const getRadio=selector=>node.ownerDocument.querySelector(`input[type="radio"]${selector}`);let roving=getRadio(`[name="${node.name}"]:checked`);return roving||(roving=getRadio(`[name="${node.name}"]`)),roving!==node}(node))}(node)&&(0===nodeTabIndex?regularTabNodes.push(node):orderedTabNodes.push({documentOrder:i,tabIndex:nodeTabIndex,node}))})),orderedTabNodes.sort(((a,b)=>a.tabIndex===b.tabIndex?a.documentOrder-b.documentOrder:a.tabIndex-b.tabIndex)).map((a=>a.node)).concat(regularTabNodes)}function defaultIsEnabled(){return!0}const FocusTrap_FocusTrap=function FocusTrap(props){const{children,disableAutoFocus=!1,disableEnforceFocus=!1,disableRestoreFocus=!1,getTabbable=defaultGetTabbable,isEnabled=defaultIsEnabled,open}=props,ignoreNextEnforceFocus=react.useRef(!1),sentinelStart=react.useRef(null),sentinelEnd=react.useRef(null),nodeToRestore=react.useRef(null),reactFocusEventTarget=react.useRef(null),activated=react.useRef(!1),rootRef=react.useRef(null),handleRef=(0,useForkRef.Z)(children.ref,rootRef),lastKeydown=react.useRef(null);react.useEffect((()=>{open&&rootRef.current&&(activated.current=!disableAutoFocus)}),[disableAutoFocus,open]),react.useEffect((()=>{if(!open||!rootRef.current)return;const doc=ownerDocument(rootRef.current);return rootRef.current.contains(doc.activeElement)||(rootRef.current.hasAttribute("tabIndex")||rootRef.current.setAttribute("tabIndex","-1"),activated.current&&rootRef.current.focus()),()=>{disableRestoreFocus||(nodeToRestore.current&&nodeToRestore.current.focus&&(ignoreNextEnforceFocus.current=!0,nodeToRestore.current.focus()),nodeToRestore.current=null)}}),[open]),react.useEffect((()=>{if(!open||!rootRef.current)return;const doc=ownerDocument(rootRef.current),loopFocus=nativeEvent=>{lastKeydown.current=nativeEvent,!disableEnforceFocus&&isEnabled()&&"Tab"===nativeEvent.key&&doc.activeElement===rootRef.current&&nativeEvent.shiftKey&&(ignoreNextEnforceFocus.current=!0,sentinelEnd.current&&sentinelEnd.current.focus())},contain=()=>{const rootElement=rootRef.current;if(null===rootElement)return;if(!doc.hasFocus()||!isEnabled()||ignoreNextEnforceFocus.current)return void(ignoreNextEnforceFocus.current=!1);if(rootElement.contains(doc.activeElement))return;if(disableEnforceFocus&&doc.activeElement!==sentinelStart.current&&doc.activeElement!==sentinelEnd.current)return;if(doc.activeElement!==reactFocusEventTarget.current)reactFocusEventTarget.current=null;else if(null!==reactFocusEventTarget.current)return;if(!activated.current)return;let tabbable=[];if(doc.activeElement!==sentinelStart.current&&doc.activeElement!==sentinelEnd.current||(tabbable=getTabbable(rootRef.current)),tabbable.length>0){const isShiftTab=Boolean(lastKeydown.current?.shiftKey&&"Tab"===lastKeydown.current?.key),focusNext=tabbable[0],focusPrevious=tabbable[tabbable.length-1];"string"!=typeof focusNext&&"string"!=typeof focusPrevious&&(isShiftTab?focusPrevious.focus():focusNext.focus())}else rootElement.focus()};doc.addEventListener("focusin",contain),doc.addEventListener("keydown",loopFocus,!0);const interval=setInterval((()=>{doc.activeElement&&"BODY"===doc.activeElement.tagName&&contain()}),50);return()=>{clearInterval(interval),doc.removeEventListener("focusin",contain),doc.removeEventListener("keydown",loopFocus,!0)}}),[disableAutoFocus,disableEnforceFocus,disableRestoreFocus,isEnabled,open,getTabbable]);const handleFocusSentinel=event=>{null===nodeToRestore.current&&(nodeToRestore.current=event.relatedTarget),activated.current=!0};return(0,jsx_runtime.jsxs)(react.Fragment,{children:[(0,jsx_runtime.jsx)("div",{tabIndex:open?0:-1,onFocus:handleFocusSentinel,ref:sentinelStart,"data-testid":"sentinelStart"}),react.cloneElement(children,{ref:handleRef,onFocus:event=>{null===nodeToRestore.current&&(nodeToRestore.current=event.relatedTarget),activated.current=!0,reactFocusEventTarget.current=event.target;const childrenPropsHandler=children.props.onFocus;childrenPropsHandler&&childrenPropsHandler(event)}}),(0,jsx_runtime.jsx)("div",{tabIndex:open?0:-1,onFocus:handleFocusSentinel,ref:sentinelEnd,"data-testid":"sentinelEnd"})]})};try{FocusTrap_FocusTrap.displayName="FocusTrap",FocusTrap_FocusTrap.__docgenInfo={description:"Utility component that locks focus inside the component.\n\nDemos:\n\n- [Focus trap](https://simspace.gitlab.io/engineering/ux-engineering/monorail/main/storybook/?path=/docs/utils-focustrap--default)\n- [Focus trap (MUI)](https://mui.com/base/react-focus-trap/)\n\nAPI:\n\n- [FocusTrap API](https://mui.com/base/api/focus-trap/)",displayName:"FocusTrap",props:{open:{defaultValue:null,description:"If `true`, focus is locked.",name:"open",required:!0,type:{name:"boolean"}},getTabbable:{defaultValue:null,description:'Returns an array of ordered tabbable nodes (i.e. in tab order) within the root.\nFor instance, you can provide the "tabbable" npm dependency.\n@param root',name:"getTabbable",required:!1,type:{name:"(root: HTMLElement) => readonly string[]"}},isEnabled:{defaultValue:{value:"function defaultIsEnabled(): boolean {\nreturn true;\n}"},description:"This prop extends the `open` prop.\nIt allows to toggle the open state without having to wait for a rerender when changing the `open` prop.\nThis prop should be memoized.\nIt can be used to support multiple focus trap mounted at the same time.",name:"isEnabled",required:!1,type:{name:"() => boolean"}},children:{defaultValue:null,description:"A single child content element.",name:"children",required:!0,type:{name:"ReactElement<any, string | JSXElementConstructor<any>>"}},disableAutoFocus:{defaultValue:{value:"false"},description:"If `true`, the focus trap will not automatically shift focus to itself when it opens, and\nreplace it to the last focused element when it closes.\nThis also works correctly with any focus trap children that have the `disableAutoFocus` prop.\n\nGenerally this should never be set to `true` as it makes the focus trap less\naccessible to assistive technologies, like screen readers.",name:"disableAutoFocus",required:!1,type:{name:"boolean"}},disableEnforceFocus:{defaultValue:{value:"false"},description:"If `true`, the focus trap will not prevent focus from leaving the focus trap while open.\n\nGenerally this should never be set to `true` as it makes the focus trap less\naccessible to assistive technologies, like screen readers.",name:"disableEnforceFocus",required:!1,type:{name:"boolean"}},disableRestoreFocus:{defaultValue:{value:"false"},description:"If `true`, the focus trap will not restore focus to previously focused element once\nfocus trap is hidden or unmounted.",name:"disableRestoreFocus",required:!1,type:{name:"boolean"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["../components/src/FocusTrap/FocusTrap.tsx#FocusTrap"]={docgenInfo:FocusTrap_FocusTrap.__docgenInfo,name:"FocusTrap",path:"../components/src/FocusTrap/FocusTrap.tsx#FocusTrap"})}catch(__react_docgen_typescript_loader_error){}var storybook=__webpack_require__("./src/helpers/storybook.ts");const TrapFocus_stories={title:"Utils/FocusTrap"},Template=(0,storybook.yg)((args=>{const[open,setOpen]=react.useState(args.open??!1);return(0,jsx_runtime.jsxs)(Box.Z,{sx:{display:"flex",alignItems:"center",flexDirection:"column"},children:[(0,jsx_runtime.jsx)("button",{type:"button",onClick:()=>setOpen(!0),children:"Open"}),open&&(0,jsx_runtime.jsx)(FocusTrap_FocusTrap,{open,children:(0,jsx_runtime.jsxs)(Box.Z,{tabIndex:-1,sx:{mt:1,p:1},children:[(0,jsx_runtime.jsxs)("label",{children:["First name: ",(0,jsx_runtime.jsx)("input",{type:"text"})]}),(0,jsx_runtime.jsx)("br",{}),(0,jsx_runtime.jsx)("button",{type:"button",onClick:()=>setOpen(!1),children:"Close"})]})})]})}),{args:{open:!1}}),Default=(0,storybook.yg)(Template,{args:{open:!1},parameters:{docs:{description:{component:"\nFocusTrap is a component that manages focus for its descendants. This is useful when implementing overlays such as modal dialogs, which should not allow the focus to escape while open.\n\nWhen open={true} the trap is enabled, and pressing Tab or Shift+Tab will rotate focus within the inner focusable elements of the component.\n\nhttps://mui.com/base/react-focus-trap/\n"}}}}),DisableEnforceFocus=(0,storybook.yg)(Template,{args:{disableEnforceFocus:!0},parameters:{docs:{description:{story:"\nClicks within the focus trap behave normally, but clicks outside the focus trap are blocked.\n\nYou can disable this behavior with the disableEnforceFocus prop.\n"}}}}),LazyActivation=(0,storybook.yg)(Template,{args:{disableAutoFocus:!0},parameters:{docs:{description:{story:"\nBy default, the component moves the focus to its descendants as soon as it opens: open={true}.\n\nYou can disable this behavior and make it lazy with the disableAutoFocus prop. When auto focus is disabled, as in the demo below, the component only traps the focus once it gets focused.\n"}}}}),PortalExample=(0,storybook.yg)((()=>{const[open,setOpen]=react.useState(!1),[container,setContainer]=react.useState(null);return(0,jsx_runtime.jsxs)(Box.Z,{sx:{display:"flex",alignItems:"center",flexDirection:"column"},children:[(0,jsx_runtime.jsx)("button",{type:"button",onClick:()=>setOpen(!0),children:"Open"}),open&&(0,jsx_runtime.jsx)(FocusTrap_FocusTrap,{open:!0,children:(0,jsx_runtime.jsxs)(Box.Z,{tabIndex:-1,sx:{mt:1,p:1},children:[(0,jsx_runtime.jsxs)("label",{children:["First name: ",(0,jsx_runtime.jsx)("input",{type:"text"})]}),(0,jsx_runtime.jsx)("br",{}),(0,jsx_runtime.jsxs)(Portal.Z,{container,children:[(0,jsx_runtime.jsxs)("label",{children:["Last name: ",(0,jsx_runtime.jsx)("input",{type:"text"})]}),(0,jsx_runtime.jsx)("br",{})]}),(0,jsx_runtime.jsx)("button",{type:"button",onClick:()=>setOpen(!1),children:"Close"})]})}),(0,jsx_runtime.jsx)("div",{ref:setContainer})]})}),{args:{disableAutoFocus:!0},parameters:{docs:{description:{story:'The following demo uses the Portal component to render a subset of the trap focus children into a new "subtree" outside of the current DOM hierarchy; so that they no longer form part of the focus loop.'}}}});Default.parameters={...Default.parameters,docs:{...Default.parameters?.docs,source:{originalSource:"story(Template, {\n  args: {\n    open: false\n  },\n  parameters: {\n    docs: {\n      description: {\n        component: `\nFocusTrap is a component that manages focus for its descendants. This is useful when implementing overlays such as modal dialogs, which should not allow the focus to escape while open.\n\nWhen open={true} the trap is enabled, and pressing Tab or Shift+Tab will rotate focus within the inner focusable elements of the component.\n\nhttps://mui.com/base/react-focus-trap/\n`\n      }\n    }\n  }\n})",...Default.parameters?.docs?.source}}},DisableEnforceFocus.parameters={...DisableEnforceFocus.parameters,docs:{...DisableEnforceFocus.parameters?.docs,source:{originalSource:"story(Template, {\n  args: {\n    disableEnforceFocus: true\n  },\n  parameters: {\n    docs: {\n      description: {\n        story: `\nClicks within the focus trap behave normally, but clicks outside the focus trap are blocked.\n\nYou can disable this behavior with the disableEnforceFocus prop.\n`\n      }\n    }\n  }\n})",...DisableEnforceFocus.parameters?.docs?.source}}},LazyActivation.parameters={...LazyActivation.parameters,docs:{...LazyActivation.parameters?.docs,source:{originalSource:"story(Template, {\n  args: {\n    disableAutoFocus: true\n  },\n  parameters: {\n    docs: {\n      description: {\n        story: `\nBy default, the component moves the focus to its descendants as soon as it opens: open={true}.\n\nYou can disable this behavior and make it lazy with the disableAutoFocus prop. When auto focus is disabled, as in the demo below, the component only traps the focus once it gets focused.\n`\n      }\n    }\n  }\n})",...LazyActivation.parameters?.docs?.source}}},PortalExample.parameters={...PortalExample.parameters,docs:{...PortalExample.parameters?.docs,source:{originalSource:'story(() => {\n  const [open, setOpen] = React.useState(false);\n  const [container, setContainer] = React.useState<HTMLElement | null>(null);\n  return <Box sx={{\n    display: \'flex\',\n    alignItems: \'center\',\n    flexDirection: \'column\'\n  }}>\n        <button type="button" onClick={() => setOpen(true)}>\n          Open\n        </button>\n        {open && <FocusTrap open>\n            <Box tabIndex={-1} sx={{\n        mt: 1,\n        p: 1\n      }}>\n              <label>\n                First name: <input type="text" />\n              </label>\n              <br />\n              <Portal container={container}>\n                <label>\n                  Last name: <input type="text" />\n                </label>\n                <br />\n              </Portal>\n              <button type="button" onClick={() => setOpen(false)}>\n                Close\n              </button>\n            </Box>\n          </FocusTrap>}\n        <div ref={setContainer} />\n      </Box>;\n}, {\n  args: {\n    disableAutoFocus: true\n  },\n  parameters: {\n    docs: {\n      description: {\n        story: `The following demo uses the Portal component to render a subset of the trap focus children into a new "subtree" outside of the current DOM hierarchy; so that they no longer form part of the focus loop.`\n      }\n    }\n  }\n})',...PortalExample.parameters?.docs?.source}}};const __namedExportsOrder=["Default","DisableEnforceFocus","LazyActivation","PortalExample"]},"./src/helpers/storybook.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{yg:()=>story});var light=__webpack_require__("../themes/src/meteor/theme/light.ts");const isNonEmptyString=x=>(x=>"string"==typeof x)(x)&&x.length>0;let A11yElement=function(A11yElement){return A11yElement.Root="#root",A11yElement.Component="#root > *",A11yElement.Modal=".MuiDialog-root",A11yElement.Popover=".MuiPopover-root",A11yElement.Drawer=".MuiDrawer-root",A11yElement}({});A11yElement.Root,A11yElement.Component;function story(Template,{args,argTypes,parameters,storyName,muiName}={}){let themeProps={};muiName&&(themeProps=light.D4.components?.[muiName]?.defaultProps);const NewStory=Template.bind({});return NewStory.args={...themeProps,...Template.args,...args},NewStory.argTypes={...Template.argTypes,...argTypes},NewStory.parameters={...Template.parameters,...parameters},isNonEmptyString(storyName)&&(NewStory.storyName=storyName),NewStory}}}]);