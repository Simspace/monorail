---
resource_types:
  - name: simspace-pull-request
    type: registry-image
    source:
      repository: simspace/github-pr-resource
      username: ((concourse-dockerhub.username))
      password: ((concourse-dockerhub.password))
      tag: v0.25.0_v0.0.1

resources:
  - name: monorail
    type: git
    icon: github
    source:
      uri: git@github.com:Simspace/monorail.git
      private_key: ((concourse-github.private_key))
      branch: main

  - name: pages
    type: git
    icon: github
    source:
      uri: git@github.com:Simspace/monorail.git
      private_key: ((concourse-github.private_key))
      branch: pages

  - name: node-image
    type: registry-image
    source:
      username: ((concourse-dockerhub.username))
      password: ((concourse-dockerhub.password))
      repository: node
      tag: 18

  - name: pr
    type: simspace-pull-request
    icon: source-merge
    source:
      repository: Simspace/monorail
      access_token: ((concourse-github.token))
      base_branch: main
      states:
        - OPEN

  - name: pr-closed
    type: simspace-pull-request
    icon: source-merge
    source:
      repository: Simspace/monorail
      access_token: ((concourse-github.token))
      base_branch: main
      states:
        - MERGED
        - CLOSED

jobs:
  - name: main
    plan:
      - get: pages

      - get: monorail
        trigger: true
        params:
          git_depth: 1

      - get: node-image

      # - put: update-status
      #   resource: monorail
      #   params:
      #     path: monorail
      #     status: pending

      - task: install
        image: node-image
        file: monorail/ci/tasks/install.yaml
        input_mapping:
          repo: monorail

      - task: build
        image: node-image
        file: monorail/ci/tasks/build.yaml
        input_mapping:
          repo: monorail

      - task: lint
        image: node-image
        file: monorail/ci/tasks/lint.yaml
        input_mapping:
          repo: monorail

      - task: test
        image: node-image
        file: monorail/ci/tasks/test.yaml
        input_mapping:
          repo: monorail

      - task: build-storybook
        image: node-image
        file: monorail/ci/tasks/build-storybook.yaml
        input_mapping:
          repo: monorail

      - task: commit-storybook
        image: node-image
        file: monorail/ci/tasks/commit-storybook.yaml
        input_mapping:
          repo: monorail
        vars:
          git-branch-slug: "main"

      - task: build-playroom
        image: node-image
        file: monorail/ci/tasks/build-playroom.yaml
        input_mapping:
          repo: monorail

      - task: commit-playroom
        image: node-image
        file: monorail/ci/tasks/commit-playroom.yaml
        input_mapping:
          repo: monorail
        vars:
          git-branch-slug: "main"

      - put: pages
        attempts: 3
        params:
          repository: pages
          force: true
          branch: pages

      - task: publish
        image: node-image
        file: monorail/ci/tasks/publish.yaml
        input_mapping:
          repo: monorail
        params:
          NPM_TOKEN: ((concourse-monorail.npm-access-token))

    # on_failure:
    #   put: update-status
    #   resource: monorail
    #   params:
    #     path: monorail
    #     status: failure
    #   get_params: {skip_download: true}

    # on_success:
    #   put: update-status
    #   resource: monorail
    #   params:
    #     path: monorail
    #     status: success
    #   get_params: {skip_download: true}

  - name: pr
    plan:
      - get: pages

      - get: pr
        trigger: true
        params:
          integration_tool: checkout
          git_depth: 1

      - get: node-image

      - put: update-status
        resource: pr
        params:
          path: pr
          status: pending

      - task: get-git-branch-slug
        image: node-image
        file: pr/ci/tasks/get-git-branch-slug.yaml
        input_mapping:
          repo: pr

      - load_var: git-branch-slug
        file: git-branch-slug/output

      - task: install
        image: node-image
        file: pr/ci/tasks/install.yaml
        input_mapping:
          repo: pr

      - task: build
        image: node-image
        file: pr/ci/tasks/build.yaml
        input_mapping:
          repo: pr

      - task: lint
        image: node-image
        file: pr/ci/tasks/lint.yaml
        input_mapping:
          repo: pr

      - task: test
        image: node-image
        file: pr/ci/tasks/test.yaml
        input_mapping:
          repo: pr

      - task: build-storybook
        image: node-image
        file: pr/ci/tasks/build-storybook.yaml
        input_mapping:
          repo: pr

      - task: commit-storybook
        image: node-image
        file: pr/ci/tasks/commit-storybook.yaml
        input_mapping:
          repo: pr
        vars:
          git-branch-slug: ((.:git-branch-slug))

      - put: pages
        attempts: 3
        params:
          repository: pages
          force: true
          branch: pages

      - put: storybook-comment
        attempts: 3
        resource: pr
        params:
          path: pr
          comment: "Storybook: https://simspace.github.io/monorail/((.:git-branch-slug))/storybook"
          delete_previous_comments: true

    on_failure:
      put: update-status
      resource: pr
      params:
        path: pr
        status: failure
      get_params: { skip_download: true }
    on_success:
      put: update-status
      resource: pr
      params:
        path: pr
        status: success
      get_params: { skip_download: true }

  - name: pr-closed
    plan:
      - get: pages

      - get: pr-closed
        trigger: true
        params:
          integration_tool: checkout
          git_depth: 1

      - get: node-image

      - task: get-git-branch-slug
        image: node-image
        file: pr-closed/ci/tasks/get-git-branch-slug.yaml
        input_mapping:
          repo: pr-closed

      - load_var: git-branch-slug
        file: git-branch-slug/output

      - task: delete-artifacts
        image: node-image
        file: pr-closed/ci/tasks/delete-artifacts.yaml
        vars:
          git-branch-slug: ((.:git-branch-slug))

      - put: pages
        attempts: 3
        params:
          repository: pages
          force: true
          branch: pages
