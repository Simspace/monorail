{"version":3,"file":"theme-palette-Action-stories.ebbdb406.iframe.bundle.js","mappings":";;;;AAuCA","sources":["webpack://@monorail/storybook/./src/helpers/render.tsx"],"sourcesContent":["/* eslint-disable no-restricted-imports */\n/* eslint-disable import/no-extraneous-dependencies */\n\nimport React from 'react'\nimport type { Theme } from '@mui/material'\nimport { CssBaseline, ThemeProvider } from '@mui/material'\nimport { css, GlobalStyles } from '@mui/styled-engine'\nimport { AdapterDateFns } from '@mui/x-date-pickers/AdapterDateFns'\nimport { LocalizationProvider } from '@mui/x-date-pickers/LocalizationProvider'\nimport type { Story } from '@storybook/react'\nimport type { RenderOptions, RenderResult } from '@testing-library/react'\nimport { render } from '@testing-library/react'\n\nimport { StyledEngineProvider } from '@monorail/components/StyledEngineProviderEmotion'\nimport { classicLight } from '@monorail/themes'\n\ndeclare module '@mui/styles/defaultTheme' {\n  // eslint-disable-next-line @typescript-eslint/no-empty-interface\n  interface DefaultTheme extends Theme {}\n}\n\n/**\n * Temporary fix for https://github.com/dequelabs/axe-core/issues/2587\n *\n * Delete after https://github.com/jsdom/jsdom/issues/3064 is fixed\n */\nconst TemporaryJSDomFix = () => (\n  <GlobalStyles\n    styles={css`\n      svg title {\n        display: inline;\n      }\n    `}\n  />\n)\n\n/**\n * Renders content for tests inside theme providers\n */\nexport function renderWithTheme(\n  ui: React.ReactElement,\n  options?: Omit<RenderOptions, 'queries'>,\n): RenderResult {\n  return render(\n    <LocalizationProvider dateAdapter={AdapterDateFns}>\n      <TemporaryJSDomFix />\n      <StyledEngineProvider injectFirst>\n        <ThemeProvider theme={classicLight}>\n          <CssBaseline />\n          {ui}\n        </ThemeProvider>\n      </StyledEngineProvider>\n    </LocalizationProvider>,\n    options,\n  )\n}\n\n/**\n * Renders a Storybook story for testing in jest\n */\nexport function renderStory(\n  Story: Story,\n  props?: Story['args'],\n  options?: Omit<RenderOptions, 'queries'>,\n): RenderResult {\n  return renderWithTheme(<Story {...Story.args} {...props} />, options)\n}\n"],"names":[],"sourceRoot":""}